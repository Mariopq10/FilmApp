var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddUserComponent.html",[0,0.4,1,1.041]],["body/components/AddUserComponent.html",[0,0.543,1,1.555,2,1.386,3,0.136,4,0.119,5,0.994,6,0.994,7,0.994,8,0.994,9,0.119,10,5.746,11,4.647,12,1.978,13,1.537,14,2.269,15,0.944,16,2.488,17,2.183,18,1.836,19,1.711,20,1.459,21,3.791,22,1.459,23,3.199,24,0.357,25,0.524,26,2.138,27,3.794,28,4.45,29,4.014,30,4.257,31,1.023,32,2.488,33,4.691,34,4.691,35,2.361,36,4.178,37,0.733,38,2.178,39,4.45,40,4.257,41,3.487,42,3.196,43,3.443,44,1.53,45,3.592,46,0.697,47,0.02,48,0.747,49,0.682,50,0.597,51,2.852,52,2.117,53,1.415,54,3.199,55,1.754,56,4.189,57,1.27,58,2.235,59,2.274,60,1.317,61,3.232,62,2.161,63,3.199,64,2.905,65,3.592,66,2.161,67,1.555,68,2.161,69,2.031,70,4.189,71,4.189,72,1.337,73,2.852,74,2.308,75,3.199,76,4.189,77,1.252,78,2.161,79,2.905,80,1.621,81,2.905,82,2.852,83,4.189,84,2.308,85,1.621,86,4.189,87,5.471,88,1.643,89,2.852,90,2.905,91,3.592,92,3.199,93,2.161,94,2.852,95,2.954,96,2.852,97,3.794,98,2.446,99,0.706,100,0.312,101,1.818,102,2.178,103,1.304,104,1.818,105,2.446,106,1.978,107,1.571,108,1.571,109,2.178,110,3.232,111,1.978,112,2.178,113,0.136,114,0.334,115,1.818,116,1.537,117,2.446,118,2.784,119,5.828,120,3.791,121,2.446,122,2.178,123,1.685,124,1.978,125,1.978,126,2.446,127,1.095,128,1.621,129,1.808,130,2.446,131,1.818,132,3.199,133,2.178,134,2.446,135,2.446,136,2.905,137,2.852,138,2.178,139,2.905,140,3.199,141,3.165,142,3.165,143,2.178,144,1.818,145,1.383,146,2.178,147,2.446,148,2.446,149,1.383,150,3.592,151,3.592,152,3.199,153,0.733,154,1.459,155,1.459,156,0.994,157,1.906,158,0.994,159,1.729,160,0.811,161,0.994,162,0.811,163,0.747,164,0.994,165,0.811,166,0.853,167,0.811,168,0.853,169,0.771,170,0.994,171,2.25,172,0.771,173,0.897,174,0.771,175,0.771,176,0.994,177,0.924,178,1.459,179,0.771,180,0.944,181,0.771,182,0.897,183,0.771,184,0.944,185,0.771,186,0.811,187,0.994,188,0.994,189,0.011,190,0.011]],["title/guards/AdminGuard.html",[191,2.335,192,2.335]],["body/guards/AdminGuard.html",[3,0.21,4,0.184,9,0.184,13,1.614,24,0.55,25,0.55,26,2.288,31,1.38,32,2.547,37,1.13,44,1.311,46,1.38,47,0.02,48,0.849,49,0.661,50,1.182,52,1.702,53,1.021,55,1.524,57,1.58,59,1.868,60,1.961,69,2.133,72,1.38,77,1.315,99,0.744,100,0.481,113,0.21,114,0.515,115,2.804,127,0.97,128,2.185,129,1.899,189,0.015,190,0.015,192,3.6,193,3.05,194,3.772,195,3.975,196,3.701,197,4.719,198,3.359,199,2.84,200,4.399,201,4.312,202,4.563,203,4.195,204,4.195,205,4.399,206,3.975,207,4.325,208,3.05,209,3.05,210,3.05,211,1.899,212,1.899,213,2.133,214,3.05,215,1.868,216,2.599,217,2.804,218,3.359,219,2.133,220,2.01,221,3.05,222,4.842,223,5.647,224,4.842,225,3.359,226,3.359,227,1.455,228,3.218,229,3.772,230,2.072,231,1.608,232,3.359,233,2.804,234,2.804,235,2.133,236,3.359,237,1.25,238,3.05,239,3.359,240,2.27,241,3.05,242,3.772,243,4.399,244,2.27,245,4.312,246,4.399,247,1.383,248,2.27]],["title/interfaces/ApiResponse.html",[249,0.942,250,1.89]],["body/interfaces/ApiResponse.html",[3,0.247,4,0.215,9,0.215,18,1.466,24,0.645,25,0.78,47,0.02,49,0.815,50,1.517,113,0.298,144,4.439,145,3.377,166,1.542,168,1.542,189,0.016,190,0.016,249,1.603,250,3.218,251,2.227,252,3.048,253,3.939,254,5.971,255,4.714,256,1.478,257,3.992,258,3.127,259,2.335]],["title/components/AppComponent.html",[0,0.4,160,1.041]],["body/components/AppComponent.html",[0,0.7,1,1.324,2,1.938,3,0.223,4,0.194,5,1.623,6,1.623,7,1.623,8,1.623,9,0.194,15,1.541,16,2.638,17,2.354,18,1.324,20,2.04,22,2.04,24,0.582,25,0.732,44,1.082,47,0.02,48,0.881,49,0.545,99,0.509,100,0.509,113,0.223,114,0.545,153,1.197,154,2.04,155,2.04,156,1.623,157,2.341,158,1.623,159,2.231,160,1.91,161,1.623,162,1.324,163,1.044,164,1.623,165,1.324,166,1.393,167,1.324,168,1.393,169,1.259,170,1.623,171,2.527,172,1.259,173,1.465,174,1.259,175,1.259,176,1.623,177,1.292,178,2.04,179,1.259,180,1.541,181,1.259,182,1.465,183,1.259,184,1.541,185,1.259,186,1.324,187,1.623,188,1.623,189,0.015,190,0.015,220,2.676,256,1.027,260,3.995,261,6.406,262,5.857,263,3.529,264,1.709,265,1.709,266,4.472,267,4.659]],["title/modules/AppModule.html",[268,1.212,269,2.541]],["body/modules/AppModule.html",[3,0.234,4,0.204,9,0.204,17,1.54,47,0.02,99,0.793,100,0.535,113,0.234,114,0.573,153,1.258,160,2.132,189,0.016,190,0.016,268,1.62,269,5.179,270,1.894,271,2.526,272,3.871,273,3.609,274,3.328,275,2.113,276,4.198,277,4.198,278,4.198,279,4.198,280,4.561,281,4.561,282,3.569,283,2.893,284,2.526,285,4.896,286,2.761,287,4.896,288,2.761,289,6.041,290,5.18,291,3.738,292,3.395,293,4.896,294,6.041,295,2.526,296,6.041,297,4.896]],["title/modules/AppRoutingModule.html",[268,1.212,280,2.335]],["body/modules/AppRoutingModule.html",[0,0.524,3,0.229,4,0.2,9,0.2,47,0.02,99,0.778,100,0.524,113,0.229,114,0.561,127,1.058,163,1.064,169,1.612,186,1.363,189,0.015,190,0.015,192,3.802,195,3.058,197,4.709,211,2.07,245,3.663,270,1.856,275,2.07,280,3.802,286,2.192,288,2.726,298,4.797,299,3.326,300,4.136,301,3.576,302,4.797,303,3.326,304,2.642,305,3.326,306,6.491,307,4.797,308,4.797,309,4.136,310,4.797,311,4.797,312,5.007,313,6.791,314,4.797,315,5.965,316,4.113,317,4.797,318,4.113,319,4.797,320,4.797,321,4.797,322,4.797]],["title/guards/AuthGuardService.html",[191,2.335,305,2.541]],["body/guards/AuthGuardService.html",[3,0.215,4,0.188,9,0.188,13,1.654,24,0.564,25,0.564,26,2.315,31,1.401,32,2.576,37,1.159,44,1.332,46,1.401,47,0.02,48,0.863,49,0.671,50,1.201,52,1.744,53,1.047,55,1.401,57,1.332,59,1.492,60,1.804,72,1.401,77,1.348,99,0.749,100,0.493,113,0.215,114,0.528,115,2.874,127,0.994,128,2.219,129,1.946,189,0.015,190,0.015,193,3.126,195,4.022,196,3.72,197,4.755,198,3.442,199,2.866,201,4.38,202,4.605,203,4.233,204,4.233,206,4.022,207,4.375,208,3.126,209,3.126,210,3.126,211,1.946,212,1.946,213,2.186,214,3.126,215,1.898,216,2.664,217,2.874,218,3.442,219,2.186,220,2.06,221,3.126,225,3.442,226,3.442,227,1.492,228,3.255,229,3.866,230,2.105,231,1.541,232,3.442,233,2.874,234,2.874,235,2.186,236,3.442,237,1.281,238,3.126,239,3.442,240,2.326,241,3.126,242,3.866,247,1.418,248,2.326,305,3.978,323,3.866,324,4.508,325,4.508,326,2.664,327,3.442,328,4.508]],["title/modules/AuthModule.html",[268,1.212,329,2.541]],["body/modules/AuthModule.html",[3,0.236,4,0.206,9,0.206,47,0.02,99,0.794,100,0.539,103,2.252,113,0.236,114,0.577,153,1.266,177,1.581,181,1.937,189,0.016,190,0.016,195,3.141,268,1.63,270,1.906,271,2.542,272,3.882,273,2.714,274,2.714,275,2.127,282,3.583,283,2.911,284,2.542,286,2.771,288,2.771,292,3.417,304,3.341,329,5.206,330,4.225,331,4.225,332,4.225,333,4.569,334,3.948,335,4.927,336,3.866,337,2.911,338,4.225,339,2.542,340,4.225,341,3.417,342,3.762,343,4.205]],["title/modules/AuthRoutingModule.html",[268,1.212,333,2.335]],["body/modules/AuthRoutingModule.html",[0,0.682,3,0.247,4,0.216,9,0.216,47,0.02,57,1.449,99,0.762,100,0.565,113,0.247,114,0.605,127,1.14,177,1.377,181,1.687,182,1.963,189,0.016,190,0.016,211,2.23,228,2.666,231,1.262,244,2.666,270,1.999,275,2.23,286,2.362,288,2.853,299,3.583,300,4.329,301,3.696,304,3.439,312,4.652,318,4.431,333,3.979,338,4.431,339,2.666,340,4.431,341,3.583,344,5.168,345,5.168,346,3.946,347,4.431,348,4.431,349,5.168,350,3.946,351,3.946,352,3.946]],["title/injectables/AuthService.html",[199,1.581,215,1.212]],["body/injectables/AuthService.html",[3,0.079,4,0.069,9,0.069,19,2.87,24,0.206,25,0.341,26,1.776,31,0.667,32,1.976,37,0.897,42,2.484,44,1.392,46,0.991,47,0.02,48,0.61,49,0.526,50,1.013,53,1.29,55,1.739,57,1.54,58,1.776,59,2.317,60,1.921,61,1.613,62,1.801,66,2.093,67,2.011,68,3.448,69,0.801,72,1.607,74,3.59,75,3.097,77,1.711,78,1.409,80,2.149,85,2.149,88,0.904,99,0.642,100,0.181,113,0.079,114,0.193,116,2.1,118,1.854,123,2.063,127,1.295,128,0.639,145,1.324,149,3.011,182,0.519,189,0.007,190,0.007,191,2.586,192,1.053,196,1.409,199,1.507,204,1.741,207,3.969,212,2.68,213,0.801,215,0.904,217,2.586,218,1.261,219,0.801,220,0.755,221,1.894,222,3.478,227,1.601,228,1.409,230,1.002,231,1.309,235,2.179,237,1.947,240,2.643,247,2.175,248,3.029,250,1.801,256,1.13,257,3.514,258,1.939,259,0.951,295,0.852,326,1.613,327,3.097,348,1.416,350,3.097,351,3.097,353,0.91,354,1.416,355,4.84,356,5.122,357,2.731,358,2.731,359,4.84,360,4.057,361,4.15,362,2.342,363,4.84,364,4.593,365,1.053,366,3.742,367,3.552,368,2.643,369,2.731,370,1.923,371,1.651,372,2.731,373,2.731,374,2.342,375,2.342,376,3.478,377,4.593,378,2.085,379,4.84,380,2.342,381,4.057,382,4.593,383,2.994,384,1.651,385,4.593,386,2.731,387,2.731,388,2.731,389,2.731,390,4.84,391,2.731,392,1.651,393,2.731,394,2.731,395,1.651,396,3.552,397,2.731,398,2.864,399,2.448,400,3.715,401,1.248,402,2.278,403,4.057,404,1.504,405,1.651,406,4.392,407,2.731,408,2.731,409,1.741,410,3.478,411,2.342,412,2.864,413,1.651,414,2.731,415,4.593,416,4.057,417,4.057,418,3.492,419,1.651,420,2.731,421,4.057,422,2.342,423,4.09,424,2.994,425,1.651,426,2.085,427,4.057,428,2.085,429,2.085,430,1.651,431,2.085,432,2.731,433,2.666,434,1.651,435,2.226,436,1.488,437,0.976,438,1.053,439,1.651,440,2.994,441,3.478,442,1.053,443,1.053,444,1.053,445,1.145,446,1.651,447,1.416,448,1.053,449,1.651,450,1.651,451,1.651,452,0.91,453,3.382,454,2.731,455,1.651,456,5.998,457,1.651,458,2.731,459,3.478,460,3.852,461,4.057,462,1.651,463,2.063,464,1.651,465,1.651,466,1.261,467,1.651,468,1.651,469,1.416,470,1.651,471,1.651,472,3.492,473,3.492,474,3.492,475,1.651,476,1.651,477,1.651,478,1.923,479,2.342,480,1.145,481,1.651,482,0.801,483,1.651,484,2.731,485,2.342,486,2.731,487,1.651,488,1.651,489,1.651,490,1.651,491,1.651,492,1.651,493,1.651,494,1.651,495,2.731,496,1.651,497,1.261,498,1.651,499,2.731,500,1.651,501,1.651,502,1.651,503,1.053,504,1.416,505,1.651,506,1.651,507,1.651,508,1.651,509,1.651,510,1.651,511,1.651,512,1.651,513,1.651,514,1.651,515,1.651,516,1.651,517,1.651,518,1.416,519,1.416,520,1.651,521,1.651,522,1.651,523,1.651,524,1.416,525,1.651,526,1.651,527,3.492,528,2.731,529,1.651,530,1.416,531,1.651,532,1.416,533,1.651,534,1.651,535,1.651,536,1.651,537,1.651,538,1.651,539,1.651,540,1.651,541,1.651]],["title/components/CardComponent.html",[0,0.4,162,1.041]],["body/components/CardComponent.html",[0,0.472,1,0.644,2,1.165,3,0.108,4,0.095,5,0.789,6,0.789,7,0.789,8,0.789,9,0.095,13,1.292,14,1.973,15,0.75,16,2.396,17,2.023,18,0.644,20,1.226,22,1.226,24,0.283,25,0.44,26,0.831,31,0.86,35,2.408,37,0.582,44,1.352,46,1.055,47,0.02,48,0.793,49,0.653,50,0.904,52,2.158,53,1.585,55,1.618,57,1.619,58,1.292,60,1.107,72,1.189,77,1.052,84,1.939,85,1.362,88,1.61,93,1.169,99,0.532,100,0.248,113,0.108,114,0.265,118,1.036,127,0.5,153,0.582,154,1.226,155,1.226,156,0.789,157,1.695,158,0.789,159,1.503,160,0.644,161,0.789,162,1.383,163,1.165,164,0.789,165,0.644,166,0.677,167,0.644,168,0.677,169,0.612,170,0.789,171,2.096,172,0.612,173,0.713,174,0.612,175,0.612,176,0.789,177,0.776,178,1.226,179,0.612,180,0.75,181,0.612,182,0.713,183,0.612,184,0.75,185,0.612,186,0.644,187,0.789,188,0.789,189,0.009,190,0.009,227,1.165,230,1.292,231,1.596,237,1.001,247,0.713,256,0.776,263,1.248,264,1.292,265,1.292,326,2.08,378,2.688,398,1.444,399,1.973,401,1.609,402,2.574,429,1.73,436,0.831,466,3.296,542,1.943,543,3.701,544,4.317,545,3.52,546,4.317,547,4.317,548,4.173,549,4.867,550,2.688,551,1.339,552,2.408,553,3.52,554,1.973,555,2.266,556,3.018,557,1.796,558,2.266,559,2.681,560,2.441,561,3.801,562,2.244,563,2.244,564,1.943,565,3.52,566,2.266,567,5.27,568,4.867,569,3.52,570,3.52,571,3.52,572,3.701,573,2.266,574,2.688,575,2.441,576,2.688,577,3.52,578,3.018,579,4.024,580,2.266,581,2.244,582,1.099,583,1.339,584,1.339,585,1.943,586,1.943,587,1.73,588,2.266,589,2.266,590,2.266,591,1.036,592,1.943,593,2.266,594,2.266,595,2.266,596,2.266,597,2.266,598,2.688,599,2.266,600,2.266,601,2.266,602,2.266,603,2.266,604,2.266,605,2.266,606,2.266,607,3.52,608,4.317,609,3.018,610,3.52,611,1.571,612,3.296,613,2.688,614,1.707,615,2.266,616,1.73,617,1.943,618,1.943,619,1.73,620,1.571,621,1.571,622,6.621,623,2.266,624,3.375,625,3.716,626,1.816,627,3.018,628,3.716,629,4.867,630,4.317,631,3.375,632,4.867,633,4.867,634,2.441,635,4.252,636,2.08,637,4.824,638,1.248,639,3.737,640,1.943,641,1.763,642,2.266,643,1.571,644,4.989,645,1.973,646,3.296,647,1.939,648,2.266,649,1.943,650,1.73,651,1.73,652,2.266,653,4.989,654,2.441,655,3.52,656,2.08,657,1.339,658,1.943,659,3.716,660,1.73,661,2.266,662,2.688,663,6.434,664,2.266,665,2.266,666,6.434,667,2.266,668,2.266,669,2.266,670,2.266,671,2.266,672,2.266,673,1.73,674,2.266,675,2.266,676,2.266,677,1.571,678,2.266,679,2.266,680,2.266,681,1.943,682,2.266,683,2.266,684,2.266,685,2.266,686,2.266,687,2.266,688,1.73,689,2.266,690,2.266,691,2.266,692,2.266,693,2.266,694,2.266,695,2.266,696,2.266,697,2.266,698,2.266,699,2.266,700,1.943,701,2.266,702,2.266,703,2.266]],["title/injectables/CommonService.html",[215,1.212,368,1.89]],["body/injectables/CommonService.html",[3,0.156,4,0.136,9,0.136,24,0.409,25,0.578,26,2.342,31,1.13,37,0.841,44,1.651,46,1.603,47,0.02,48,0.987,49,0.818,50,1.374,53,0.759,55,0.799,67,1.314,72,1.603,88,1.53,99,0.586,100,0.358,113,0.156,114,0.383,118,2.917,127,1.447,145,2.242,189,0.012,190,0.012,215,1.53,219,1.586,220,1.495,231,0.799,247,1.934,256,1.503,264,2.139,265,2.139,295,1.688,353,1.802,367,4.427,368,2.386,415,2.805,436,1.2,442,2.085,443,2.085,444,2.085,460,3.965,478,2.954,482,1.586,557,2.106,564,1.868,591,1.495,641,1.336,644,4.095,704,2.805,705,6.315,706,5.363,707,5.363,708,5.363,709,4.624,710,4.624,711,4.624,712,4.624,713,5.829,714,5.829,715,3.271,716,4.624,717,4.624,718,3.271,719,4.624,720,3.271,721,3.271,722,4.624,723,3.271,724,5.363,725,4.624,726,5.829,727,3.271,728,5.363,729,4.599,730,3.271,731,4.624,732,3.271,733,3.271,734,3.271,735,3.271,736,3.271,737,3.92,738,3.271,739,3.271,740,2.732,741,3.531,742,3.531,743,3.531,744,3.271,745,3.271,746,3.271,747,3.271,748,3.271,749,3.271,750,3.271,751,3.271,752,3.271,753,3.271,754,3.271,755,3.271,756,3.271,757,3.271,758,3.271,759,3.271,760,3.271,761,3.271,762,3.271,763,5.363,764,2.805,765,3.271,766,3.271,767,3.271,768,3.271,769,6.149,770,4.624,771,3.965,772,5.829,773,3.271,774,5.363,775,4.624,776,3.271,777,3.271,778,3.271,779,3.271,780,3.271,781,3.271,782,3.271,783,3.271,784,3.271,785,3.271,786,3.271,787,3.271,788,3.271,789,3.271,790,3.271,791,3.271,792,3.271,793,3.271,794,3.271]],["title/interfaces/DataFilm.html",[249,0.942,554,1.674]],["body/interfaces/DataFilm.html",[3,0.189,4,0.165,9,0.165,24,0.493,25,0.658,47,0.02,48,0.594,49,0.883,113,0.302,163,0.704,189,0.014,190,0.014,249,1.622,251,1.704,256,1.697,258,2.978,259,2.403,263,3.621,554,2.404,557,2.158,564,2.355,795,2.516,796,4.376,797,4.558,798,4.376,799,4.376,800,3.476,801,4.376,802,4.376,803,4.558,804,4.558,805,3.621,806,4.558,807,4.558,808,4.558,809,4.376,810,4.376,811,4.376,812,4.376,813,4.558,814,4.376,815,4.558,816,2.577,817,2.737,818,1.241,819,2.516]],["title/components/DeleteUserComponent.html",[0,0.4,165,1.041]],["body/components/DeleteUserComponent.html",[0,0.579,1,0.909,2,1.506,3,0.153,4,0.134,5,1.114,6,1.114,7,1.114,8,1.114,9,0.134,12,2.219,13,1.67,14,2.421,15,1.059,16,2.528,17,2.228,18,0.909,19,2.869,20,1.585,21,4.046,22,1.585,23,3.476,24,0.4,25,0.569,26,2.238,27,4.002,29,3.887,31,1.112,32,2.163,35,2.491,36,4.407,37,0.822,38,2.443,39,4.656,42,3.288,43,3.41,44,1.471,46,0.782,47,0.02,48,0.797,49,0.62,50,0.67,52,1.761,53,1.057,55,1.717,57,1.34,58,2.118,59,2.275,62,2.349,67,1.294,68,2.349,69,2.207,72,1.294,74,2.508,77,1.361,88,1.506,92,3.476,99,0.693,100,0.35,104,2.04,106,2.219,107,1.763,108,1.763,110,3.13,112,2.443,113,0.153,114,0.375,115,2.04,116,1.67,127,0.706,129,1.381,136,3.156,138,2.443,139,3.156,140,3.476,141,2.902,142,2.902,143,2.443,144,2.04,145,1.552,146,2.443,148,2.744,149,1.552,152,3.476,153,0.822,154,1.585,155,1.585,156,1.114,157,2.01,158,1.114,159,1.845,160,0.909,161,1.114,162,0.909,163,0.812,164,1.114,165,1.64,166,1.992,167,0.909,168,0.956,169,0.865,170,1.114,171,2.321,172,0.865,173,1.006,174,0.865,175,0.865,176,1.114,177,1.004,178,1.585,179,0.865,180,1.059,181,0.865,182,1.006,183,0.865,184,1.059,185,0.865,186,0.909,187,1.114,188,1.114,189,0.012,190,0.012,216,1.89,227,1.506,231,1.112,237,1.64,375,3.903,399,2.08,409,2.902,452,2.508,497,3.476,562,2.902,820,5.591,821,4.521,822,5.771,823,3.2,824,3.2,825,4.552,826,2.902,827,3.903,828,3.903,829,2.744,830,3.2,831,4.552,832,4.552,833,4.248,834,3.2,835,2.219,836,3.903,837,3.2,838,2.744,839,2.04,840,3.2,841,3.2,842,3.2,843,4.552,844,4.552,845,4.552,846,4.552,847,4.552,848,3.156,849,4.552,850,4.552,851,4.552,852,4.552,853,4.552,854,3.476]],["title/components/EditUserComponent.html",[0,0.4,167,1.041]],["body/components/EditUserComponent.html",[0,0.503,1,0.713,2,1.26,3,0.12,4,0.105,5,0.874,6,0.874,7,0.874,8,0.874,9,0.105,12,1.741,13,1.397,14,2.102,15,0.83,16,2.439,17,2.128,18,0.713,19,2.732,20,1.326,21,3.513,22,1.326,23,2.908,24,0.314,25,0.476,26,2.337,27,3.561,28,4.863,29,3.519,30,3.945,31,0.93,32,2.373,33,4.403,34,4.403,35,2.216,36,3.921,37,0.979,38,1.917,39,4.215,40,3.945,41,3.273,42,2.928,43,3.261,44,1.508,45,3.265,46,0.613,47,0.02,48,0.692,49,0.68,50,0.526,52,2.406,53,1.532,54,2.908,55,1.671,57,1.572,58,1.397,59,2.183,60,1.197,61,3.433,62,3.115,63,2.908,66,2.65,67,1.308,68,2.374,72,1.255,77,1.535,80,1.987,81,3.19,84,2.098,85,1.987,88,1.522,90,2.64,91,3.265,92,2.908,95,2.818,97,3.561,98,2.152,99,0.696,100,0.274,101,2.427,102,1.917,103,1.147,104,1.6,105,2.152,106,1.741,107,1.383,108,1.383,109,1.917,110,3.034,111,1.741,112,1.917,113,0.12,114,0.294,116,1.397,117,2.152,118,2.842,120,3.921,121,2.152,122,1.917,123,1.483,124,1.741,125,1.741,126,2.152,127,1.015,128,1.78,129,1.643,130,2.152,131,2.427,132,1.917,133,1.917,134,2.152,135,2.152,136,3.19,138,1.917,139,2.64,140,2.908,141,2.933,142,2.933,143,2.908,144,2.427,145,1.217,146,1.917,147,2.152,149,1.217,150,3.265,151,4.403,152,2.908,153,0.645,154,1.326,155,1.326,156,0.874,157,1.789,158,0.874,159,1.602,160,0.713,161,0.874,162,0.713,163,0.679,164,0.874,165,0.713,166,0.75,167,1.46,168,1.859,169,0.678,170,0.874,171,2.166,172,0.678,173,0.789,174,0.678,175,0.678,176,0.874,177,0.84,178,1.326,179,0.678,180,0.83,181,0.678,182,0.789,183,0.678,184,0.83,185,0.678,186,0.713,187,0.874,188,0.874,189,0.01,190,0.01,216,1.483,231,1.586,237,1.569,257,2.829,399,2.523,402,0.921,404,3.201,436,0.921,480,3.561,524,3.945,559,3.041,576,2.908,829,2.152,835,1.741,836,3.265,838,2.152,839,1.6,854,4.215,855,5.659,856,4.576,857,2.51,858,5.135,859,3.265,860,2.908,861,5.135,862,2.51,863,2.534,864,2.51,865,2.908,866,4.403,867,2.64,868,2.51,869,3.808,870,2.908,871,3.808,872,2.51,873,2.51,874,2.51,875,1.6,876,2.51,877,2.51,878,2.51,879,3.513,880,2.51,881,2.51,882,2.51,883,2.51,884,2.51,885,2.51,886,3.808,887,2.152,888,2.51,889,1.917]],["title/components/Error404PageComponent.html",[0,0.4,169,0.99]],["body/components/Error404PageComponent.html",[0,0.583,1,0.921,2,1.52,3,0.155,4,0.135,5,1.129,6,1.129,7,1.129,8,1.129,9,0.135,15,1.072,16,2.532,17,2.233,18,0.921,20,1.6,22,1.6,47,0.02,48,0.691,53,0.752,57,1.239,67,0.921,68,1.672,77,1.373,84,1.785,99,0.354,100,0.354,113,0.155,114,0.538,153,0.833,154,1.6,155,1.6,156,1.129,157,2.022,158,1.129,159,1.858,160,0.921,161,1.129,162,0.921,163,0.819,164,1.129,165,0.921,166,0.969,167,0.921,168,0.969,169,1.656,170,2.329,171,2.329,172,0.876,173,1.019,174,0.876,175,0.876,176,1.129,177,1.013,178,1.6,179,0.876,180,1.072,181,0.876,182,1.019,183,0.876,184,1.072,185,0.876,186,0.921,187,1.129,188,1.129,189,0.012,190,0.012,227,1.072,237,0.921,245,3.507,284,2.37,303,2.247,423,2.474,424,2.778,428,4.074,453,1.914,579,4.432,614,2.227,619,2.474,624,3.185,625,2.474,626,2.995,634,2.247,635,1.914,636,1.914,637,2.474,638,2.939,639,3.283,641,2.598,645,2.099,647,3.605,654,5.017,656,3.76,657,1.914,660,3.507,662,3.507,740,1.914,818,1.444,890,2.778,891,1.571,892,2.753,893,2.37,894,3.24,895,3.24,896,3.24,897,3.24,898,4.593,899,4.593,900,3.507,901,3.938,902,4.593,903,4.593,904,2.37,905,2.928,906,4.593,907,3.24,908,2.778,909,3.24,910,3.197,911,3.376,912,4.593,913,3.429,914,6.17,915,3.699,916,5.335,917,3.24,918,3.152,919,4.593,920,2.065,921,2.474,922,3.24,923,2.778,924,5.804,925,5.804,926,5.804,927,4.432,928,5.804,929,5.804,930,3.24,931,3.24,932,4.575,933,5.335,934,5.457,935,4.575,936,4.593,937,3.24,938,2.778,939,3.938,940,2.778,941,5.804,942,3.24,943,3.24,944,2.474,945,3.24,946,3.24,947,3.24,948,3.24,949,2.778,950,2.474,951,2.247,952,5.804,953,5.804,954,5.804,955,5.804,956,5.804,957,5.804]],["title/components/FavPageComponent.html",[0,0.4,172,0.99]],["body/components/FavPageComponent.html",[0,0.558,1,0.851,2,1.436,3,0.143,4,0.125,5,1.043,6,1.043,7,1.043,8,1.043,9,0.125,15,0.991,16,2.505,17,2.158,18,0.851,19,1.223,20,1.512,22,1.512,24,0.374,25,0.543,26,1.873,31,1.06,32,2.53,35,2.416,37,0.769,44,1.484,46,0.731,47,0.02,48,0.768,49,0.655,50,0.627,52,2.166,53,1.38,55,1.247,57,1.38,59,1.852,60,0.941,67,1.591,72,1.247,77,0.895,80,2.166,85,1.679,88,0.991,93,1.545,99,0.699,100,0.327,113,0.143,114,0.35,116,1.592,127,0.957,128,1.975,129,1.873,153,0.769,154,1.512,155,1.512,156,1.043,157,1.95,158,1.043,159,1.778,160,0.851,161,1.043,162,0.851,163,0.91,164,1.043,165,0.851,166,0.895,167,0.851,168,0.895,169,0.809,170,1.043,171,2.28,172,1.513,173,2.059,174,0.809,175,0.809,176,1.043,177,0.957,178,1.512,179,0.809,180,0.991,181,0.809,182,0.941,183,0.809,184,1.966,185,0.809,186,0.851,187,1.043,188,1.043,189,0.011,190,0.011,199,2.759,203,3.254,212,1.292,213,1.452,231,1.06,235,2.475,256,0.957,259,1.778,264,1.592,265,1.592,402,2.18,482,3.1,551,1.769,552,2.675,554,2.333,557,1.234,559,3.274,560,3.009,561,1.769,564,1.512,581,1.909,582,1.452,583,1.769,591,1.368,614,2.104,620,2.076,621,2.076,639,1.545,641,1.772,645,1.368,656,1.769,657,1.769,740,1.769,771,2.567,818,1.365,863,1.649,875,3.254,891,1.452,892,2.634,893,2.239,904,2.239,910,2.391,911,2.634,913,1.769,918,2.564,920,1.909,921,2.286,950,2.286,958,5.614,959,4.54,960,3.898,961,6.392,962,5.598,963,4.8,964,4.075,965,3.009,966,2.994,967,3.197,968,4.732,969,4.34,970,5.314,971,4.34,972,2.567,973,3.898,974,4.34,975,2.994,976,2.076,977,2.567,978,2.567,979,2.567,980,2.286,981,1.769,982,2.994,983,2.994,984,2.994,985,2.567,986,2.994,987,2.994,988,4.34,989,2.567,990,2.286,991,2.567,992,2.994,993,2.994,994,3.314,995,2.994,996,2.567,997,3.314,998,3.009,999,3.721,1000,4.34,1001,4.34,1002,4.34,1003,5.105,1004,3.54,1005,2.994,1006,2.994,1007,2.286,1008,2.994,1009,1.769,1010,1.769,1011,2.994,1012,2.567]],["title/injectables/FavService.html",[215,1.212,964,2.335]],["body/injectables/FavService.html",[3,0.109,4,0.095,9,0.095,19,2.583,24,0.285,25,0.442,31,0.863,32,1.768,37,0.585,42,2.828,43,1.346,44,1.496,46,1.366,47,0.02,48,0.841,49,0.754,50,1.171,53,0.821,55,1.694,57,1.672,58,2.545,59,2.323,67,1.387,72,1.512,74,1.947,75,2.699,77,2.042,78,2.518,80,1.367,85,1.367,99,0.704,100,0.249,107,1.255,108,1.255,113,0.109,114,0.267,116,1.791,127,0.955,128,1.675,129,0.983,131,1.452,163,0.772,173,0.716,186,1.231,189,0.009,190,0.009,199,2.517,212,2.602,215,1.169,219,1.105,220,1.041,227,2.218,230,2.212,231,1.694,237,2.09,247,1.535,250,3.194,252,1.346,256,1.588,257,1.947,259,2.458,264,1.589,265,1.589,295,1.175,353,1.255,365,1.452,366,3.111,368,3.009,370,1.947,378,4.831,399,2.23,400,2.451,401,2.414,402,2.507,409,3.564,437,1.346,438,1.452,448,1.452,452,1.947,453,2.088,478,2.91,479,3.031,482,3.172,503,2.761,504,1.953,532,3.713,552,2.517,557,1.005,561,4.098,564,2.38,582,1.105,591,1.041,839,1.452,863,3.08,875,4.17,963,3.031,964,2.253,967,3.264,968,4.831,970,3.031,980,1.739,989,1.953,990,5.171,991,1.953,1013,1.739,1014,4.331,1015,5.283,1016,3.031,1017,3.031,1018,3.534,1019,3.534,1020,3.534,1021,3.534,1022,2.278,1023,4.181,1024,6.327,1025,4.794,1026,6.542,1027,4.181,1028,3.534,1029,2.278,1030,3.534,1031,2.278,1032,4.881,1033,3.534,1034,2.278,1035,3.031,1036,3.534,1037,2.278,1038,3.534,1039,2.278,1040,2.278,1041,2.278,1042,2.278,1043,2.278,1044,2.278,1045,1.452,1046,2.278,1047,2.278,1048,2.278,1049,2.278,1050,2.278,1051,1.739,1052,2.278,1053,1.953,1054,2.278]],["title/interfaces/Film.html",[163,0.653,249,0.942]],["body/interfaces/Film.html",[3,0.208,4,0.181,9,0.181,24,0.544,25,0.701,47,0.02,48,0.654,49,0.864,113,0.313,163,1,189,0.015,190,0.015,249,1.684,251,1.877,256,1.697,258,2.927,259,2.362,263,3.736,554,1.987,557,2.153,564,2.418,795,2.772,796,3.016,797,4.702,798,3.016,799,3.016,800,2.396,801,3.016,802,3.016,803,4.702,804,4.702,805,3.736,806,4.702,807,4.702,808,4.702,809,3.016,810,3.016,811,3.016,812,3.016,813,4.702,814,4.544,815,4.702,816,2.289,817,3.016,818,1.368,819,2.772]],["title/pipes/FilmImgPipe.html",[463,2.165,584,2.165]],["body/pipes/FilmImgPipe.html",[3,0.223,4,0.194,9,0.194,13,1.709,15,1.541,31,1.138,44,1.082,46,1.138,47,0.02,48,0.963,49,0.545,50,0.975,53,1.36,57,1.666,60,1.465,67,1.665,68,2.404,72,1.431,77,1.393,99,0.7,100,0.509,113,0.223,114,0.545,163,0.831,189,0.015,190,0.015,227,1.938,228,3.573,230,1.709,231,1.788,237,1.821,240,2.404,247,1.842,256,1.559,259,2.412,422,3.995,433,3.557,435,2.97,463,3.46,552,2.011,561,3.46,563,2.97,572,3.995,582,2.259,583,2.752,584,3.785,654,3.23,826,3.733,1055,4.659,1056,5.022,1057,3.995,1058,5.022,1059,5.857,1060,4.659,1061,6.406,1062,5.857,1063,5.857,1064,4.659,1065,4.472,1066,6.406,1067,4.659,1068,6.721,1069,4.659,1070,4.659,1071,4.659,1072,4.659,1073,4.659,1074,4.659,1075,4.659]],["title/modules/FilmModule.html",[268,1.212,1076,2.541]],["body/modules/FilmModule.html",[3,0.207,4,0.181,9,0.181,47,0.02,99,0.811,100,0.473,103,1.979,113,0.207,114,0.507,153,1.113,162,1.971,163,0.772,172,1.875,174,1.875,175,1.875,177,1.233,179,1.875,183,1.875,189,0.015,190,0.015,268,1.433,270,1.675,271,2.234,272,3.658,273,2.386,274,3.08,275,1.869,282,3.303,283,2.559,284,2.234,286,2.555,288,2.555,292,3.003,304,3.731,334,3.821,336,3.564,337,2.559,339,2.234,342,3.307,343,3.877,584,4.169,585,3.713,586,3.713,959,3.003,1076,5.27,1077,3.713,1078,3.713,1079,3.713,1080,4.421,1081,4.331,1082,3.713,1083,3.003,1084,3.307,1085,3.713,1086,3.003,1087,3.713,1088,3.003,1089,4.331,1090,3.713,1091,3.713,1092,4.794,1093,3.713]],["title/components/FilmPageComponent.html",[0,0.4,174,0.99]],["body/components/FilmPageComponent.html",[0,0.402,1,0.506,2,0.961,3,0.085,4,0.074,5,0.62,6,0.62,7,0.62,8,0.62,9,0.074,13,1.065,14,1.681,15,0.589,16,2.285,17,1.89,18,0.506,20,1.011,22,1.011,24,0.46,25,0.363,26,1.557,29,2.345,31,0.709,32,2.048,35,1.832,37,0.457,43,2.507,44,1.363,46,0.709,47,0.02,48,0.638,49,0.587,50,0.608,52,1.94,53,1.423,55,1.348,57,1.653,59,1.751,60,1.47,65,2.49,66,1.498,67,1.329,69,1.408,72,1.225,80,1.642,88,1.547,93,1.898,99,0.578,100,0.194,107,0.98,108,0.98,110,2.507,113,0.085,114,0.208,116,1.716,127,1.167,128,1.642,129,1.253,141,2.705,142,2.705,149,1.408,153,0.457,154,1.281,155,1.011,156,0.62,157,1.478,158,0.62,159,1.281,160,0.506,161,0.62,162,0.506,163,1.112,164,0.62,165,0.506,166,0.532,167,0.506,168,0.532,169,0.481,170,0.62,171,1.922,172,0.481,173,1.335,174,1.147,175,0.481,176,0.62,177,0.64,178,1.011,179,0.481,180,0.961,181,0.481,182,0.56,183,0.481,184,0.589,185,0.481,186,0.506,187,0.62,188,0.62,189,0.008,190,0.008,196,2.73,211,0.768,227,0.961,228,0.918,230,0.653,231,1.728,234,2.981,235,2.768,240,0.918,247,0.913,256,0.64,258,1.253,259,0.62,263,0.98,264,1.065,265,1.065,326,2.763,398,1.134,401,1.327,402,1.941,404,1.6,429,1.359,436,0.653,453,1.051,466,1.359,485,1.526,543,2.49,550,2.217,551,1.051,552,2.165,554,0.813,557,1.329,559,2.576,560,2.55,561,3.912,562,2.345,563,2.345,564,2.135,581,1.851,582,0.863,583,1.051,587,1.359,591,0.813,592,2.49,598,2.217,609,2.49,611,1.234,612,1.359,613,1.359,614,0.863,619,1.359,620,1.234,621,1.234,624,4.071,625,1.359,626,3.163,627,1.526,634,3.826,635,2.964,636,2.507,637,3.83,638,3.535,639,3.101,641,2.397,645,1.939,646,2.808,647,3.234,649,1.526,650,2.217,654,1.234,656,3.468,657,3.372,658,1.526,660,2.808,673,1.359,729,2.49,740,1.051,800,0.98,818,0.913,833,2.345,863,3.234,891,0.863,892,1.898,893,1.498,904,3.029,905,3.197,911,1.498,913,2.763,915,3.242,918,1.051,920,1.134,923,3.639,927,2.217,932,1.526,934,1.526,935,1.526,938,3.154,939,2.49,940,2.49,944,2.808,951,1.234,964,3.639,965,1.234,967,0.918,968,1.359,976,1.234,979,1.526,990,2.808,994,2.808,999,1.526,1007,1.359,1009,1.051,1010,2.507,1016,3.639,1017,3.639,1023,2.943,1025,5.257,1058,1.526,1083,4.167,1094,5.153,1095,3.678,1096,4.244,1097,2.904,1098,4.244,1099,5.291,1100,5.291,1101,2.904,1102,1.78,1103,1.78,1104,3.639,1105,1.78,1106,2.904,1107,1.78,1108,1.526,1109,1.78,1110,2.904,1111,4.244,1112,1.234,1113,1.78,1114,1.78,1115,3.678,1116,1.78,1117,1.78,1118,1.78,1119,1.78,1120,5.016,1121,1.78,1122,1.78,1123,1.78,1124,1.78,1125,1.78,1126,1.78,1127,1.78,1128,1.78,1129,1.78,1130,1.78,1131,1.78,1132,1.78,1133,1.78,1134,1.78,1135,1.78,1136,2.904,1137,1.78,1138,2.904,1139,1.78,1140,2.904,1141,1.78,1142,1.78,1143,1.78,1144,1.78,1145,2.904,1146,2.904,1147,2.904,1148,2.904,1149,3.639,1150,2.904,1151,2.904,1152,2.904,1153,2.904,1154,4.676,1155,2.217,1156,1.359,1157,4.676,1158,1.78,1159,2.904,1160,1.78,1161,4.244,1162,1.526,1163,1.78,1164,2.904,1165,1.526,1166,1.526,1167,1.78,1168,1.78,1169,1.78,1170,1.78,1171,1.78,1172,1.78,1173,3.678,1174,2.904,1175,2.904,1176,2.904,1177,3.478,1178,4.009,1179,2.904,1180,3.678,1181,1.78,1182,3.678,1183,1.78,1184,1.78,1185,1.78,1186,2.904,1187,3.678,1188,2.904,1189,1.526,1190,1.78,1191,2.49,1192,1.78,1193,1.78,1194,1.78,1195,4.244,1196,2.217,1197,1.78,1198,1.78,1199,1.78,1200,1.78,1201,1.78,1202,3.154,1203,2.904,1204,3.154,1205,1.78,1206,3.678,1207,1.78,1208,1.78,1209,1.78,1210,1.78,1211,2.49,1212,1.526,1213,1.78,1214,2.49,1215,1.78,1216,1.78,1217,1.78,1218,1.78,1219,3.678,1220,1.78,1221,2.904,1222,2.904,1223,2.904,1224,1.526,1225,2.49,1226,1.78,1227,1.78,1228,2.904,1229,1.78,1230,1.78,1231,1.78,1232,1.78,1233,1.78,1234,1.78,1235,1.78,1236,1.78,1237,1.78,1238,3.639,1239,1.78,1240,2.904,1241,1.78,1242,1.78,1243,1.78,1244,1.78,1245,1.78,1246,1.78]],["title/modules/FilmRoutingModule.html",[268,1.212,1080,2.335]],["body/modules/FilmRoutingModule.html",[0,0.553,3,0.242,4,0.211,9,0.211,47,0.02,99,0.805,100,0.553,113,0.242,114,0.592,127,1.115,172,1.367,174,1.367,175,1.367,177,1.359,179,1.367,183,1.367,189,0.016,190,0.016,211,2.183,270,1.956,275,2.183,286,2.311,288,2.816,299,3.507,300,4.273,301,3.661,304,3.906,312,4.273,339,2.609,346,3.861,352,3.861,959,3.507,1080,3.928,1082,4.336,1083,3.507,1084,3.861,1085,4.336,1086,3.507,1087,4.336,1088,3.507,1090,4.336,1091,4.336,1093,4.336,1247,5.057,1248,5.057,1249,5.057,1250,5.057,1251,5.057,1252,5.057,1253,5.057,1254,5.057,1255,5.057,1256,5.057,1257,5.057,1258,4.336]],["title/injectables/FilmService.html",[215,1.212,552,1.581]],["body/injectables/FilmService.html",[3,0.124,4,0.108,9,0.108,24,0.324,25,0.488,31,0.953,37,0.666,44,1.492,46,1.437,47,0.02,48,0.885,49,0.735,50,1.231,53,1.492,55,1.646,57,1.739,58,2.682,60,1.226,67,1.483,72,1.646,74,2.148,77,1.166,78,3.377,80,2.606,85,1.509,99,0.643,100,0.283,113,0.124,114,0.303,116,2.158,127,0.571,163,1.186,189,0.01,190,0.01,212,3.146,213,1.256,215,1.29,219,1.256,220,1.184,227,2.229,230,2.239,231,1.646,237,1.987,240,2.012,244,3.24,247,1.849,256,1.444,257,2.148,264,1.431,265,1.431,295,1.337,353,1.427,365,1.651,366,3.326,370,2.148,374,3.344,396,3.618,401,2.558,402,1.431,428,1.978,438,1.651,440,2.221,519,2.221,548,3.344,552,1.683,554,2.143,556,3.344,557,2.012,559,3.459,560,2.704,561,3.475,562,4.003,563,2.486,564,2.187,582,1.256,591,1.184,737,1.651,816,1.915,818,2.163,863,3.24,967,3.24,981,3.98,996,3.344,1027,4.671,1259,2.221,1260,4.69,1261,4.69,1262,3.344,1263,3.9,1264,5.218,1265,3.9,1266,3.9,1267,3.9,1268,3.9,1269,2.591,1270,3.984,1271,3.581,1272,3.9,1273,5.218,1274,3.9,1275,3.9,1276,3.9,1277,4.474,1278,4.355,1279,6.28,1280,6.546,1281,2.591,1282,3.9,1283,3.9,1284,2.591,1285,3.9,1286,3.9,1287,3.9,1288,2.591,1289,3.344,1290,3.9,1291,2.591,1292,3.984,1293,5.218,1294,5.218,1295,3.9,1296,2.591,1297,3.9,1298,3.9,1299,3.9,1300,2.591,1301,1.978,1302,2.221,1303,1.978,1304,2.591,1305,2.221,1306,2.591,1307,2.591,1308,2.591,1309,2.591,1310,2.591,1311,2.591,1312,2.591,1313,3.9,1314,2.591,1315,2.591]],["title/interfaces/Genre.html",[249,0.942,816,1.496]],["body/interfaces/Genre.html",[3,0.232,4,0.203,9,0.203,24,0.607,25,0.752,47,0.02,48,1.026,49,0.704,113,0.326,163,0.866,189,0.016,190,0.016,249,1.753,251,2.096,256,1.689,258,2.817,259,2.274,263,3.311,554,2.22,557,2.145,564,2.488,795,3.096,796,3.368,797,4.168,798,3.368,799,3.368,800,2.676,801,3.368,802,3.368,803,4.168,804,4.168,805,3.311,806,4.168,807,4.168,808,4.168,809,3.368,810,3.368,811,3.368,812,3.368,813,4.168,814,3.368,815,4.168,816,2.666,817,3.368,818,1.527,819,3.096]],["title/interfaces/Genre-1.html",[249,0.786,436,1.122,816,1.249]],["body/interfaces/Genre-1.html",[3,0.269,4,0.235,9,0.235,24,0.703,25,0.821,47,0.019,48,1.077,49,0.768,113,0.269,189,0.017,190,0.017,249,1.445,251,2.426,256,1.533,557,1.976,564,2.495,816,2.68,1316,4.82]],["title/components/GenreComponent.html",[0,0.4,175,0.99]],["body/components/GenreComponent.html",[0,0.514,1,0.741,2,1.296,3,0.125,4,0.109,5,0.908,6,0.908,7,0.908,8,0.908,9,0.109,13,1.437,14,2.151,15,0.862,16,2.454,17,2.145,18,0.741,20,1.364,22,1.364,24,0.326,25,0.49,31,0.957,35,2.259,37,0.67,44,1.461,46,0.957,47,0.02,48,0.787,49,0.69,50,0.82,53,1.461,55,1.602,57,1.654,58,1.727,60,1.232,64,1.807,67,0.741,72,1.15,77,1.407,80,2.28,81,2.716,84,1.436,85,1.515,88,1.557,93,1.345,99,0.572,100,0.285,113,0.125,114,0.305,153,0.67,154,1.364,155,1.364,156,0.908,157,1.823,158,0.908,159,1.639,160,0.741,161,0.908,162,0.741,163,1.001,164,0.908,165,0.741,166,0.779,167,0.741,168,0.779,169,0.704,170,0.908,171,2.191,172,0.704,173,0.819,174,0.704,175,1.415,176,0.908,177,0.864,178,1.364,179,0.704,180,0.862,181,0.704,182,0.819,183,0.704,184,0.862,185,0.704,186,0.741,187,0.908,188,0.908,189,0.014,190,0.01,227,0.862,230,1.437,231,1.494,233,1.661,235,2.282,237,0.741,244,2.428,264,1.92,265,1.92,399,1.191,401,1.191,402,2.405,435,1.661,436,1.727,469,2.234,482,2.282,551,1.54,552,2.544,557,1.863,559,2.593,564,1.639,575,1.807,582,1.264,591,1.191,612,2.991,613,1.99,614,1.899,616,1.99,617,2.234,618,2.234,626,2.428,628,1.99,631,1.807,635,1.54,636,1.54,638,2.593,639,3.041,641,2.137,643,1.807,645,1.191,647,1.436,651,3.594,653,1.99,662,1.99,764,2.234,800,2.593,816,2.497,865,1.99,904,2.021,910,1.436,911,2.021,913,1.54,914,4.035,918,1.54,944,1.99,960,3.594,967,3.041,973,2.991,981,2.314,994,1.99,997,2.991,1004,3.891,1007,1.99,1009,1.54,1010,2.314,1023,3.629,1104,2.234,1149,2.234,1155,1.99,1177,1.807,1196,1.99,1262,3.359,1277,4.035,1278,2.716,1289,2.234,1317,5.518,1318,2.234,1319,4.706,1320,3.917,1321,4.706,1322,4.669,1323,3.996,1324,3.917,1325,3.917,1326,2.606,1327,3.917,1328,5.234,1329,5.894,1330,2.606,1331,2.991,1332,3.359,1333,4.488,1334,4.488,1335,2.606,1336,2.606,1337,2.606,1338,2.606,1339,2.606,1340,2.606,1341,2.606,1342,2.234,1343,2.606,1344,2.606,1345,2.606,1346,2.606,1347,2.606,1348,2.606,1349,2.606,1350,2.606,1351,2.606,1352,2.606,1353,3.917,1354,3.917,1355,2.606,1356,4.035,1357,2.991,1358,2.606,1359,2.606,1360,3.594,1361,2.606,1362,2.606,1363,3.917,1364,3.359,1365,2.991,1366,3.917,1367,4.087,1368,4.811,1369,2.606,1370,2.606,1371,4.488,1372,2.606,1373,2.606,1374,2.606,1375,1.99,1376,2.606,1377,2.606,1378,1.99,1379,3.359,1380,3.359,1381,2.606,1382,2.606,1383,4.706,1384,5.234,1385,2.606,1386,2.606,1387,4.706,1388,2.606,1389,2.606,1390,2.606,1391,2.606,1392,2.606,1393,2.234,1394,2.606,1395,2.234,1396,2.606,1397,2.606,1398,1.807]],["title/components/LayoutPageComponent.html",[0,0.4,177,0.808]],["body/components/LayoutPageComponent.html",[0,0.703,1,1.336,2,1.949,3,0.225,4,0.196,5,1.638,6,1.638,7,1.638,8,1.638,9,0.196,15,1.556,16,2.641,17,2.356,18,1.336,20,2.052,22,2.052,47,0.02,48,0.886,99,0.514,100,0.514,113,0.225,114,0.55,153,1.208,154,2.052,155,2.052,156,1.638,157,2.349,158,1.638,159,2.24,160,1.336,161,1.638,162,1.336,163,1.05,164,1.638,165,1.336,166,1.405,167,1.336,168,1.405,169,1.271,170,1.638,171,2.532,172,1.271,173,1.478,174,1.271,175,1.271,176,1.638,177,1.531,178,2.554,179,1.271,180,1.556,181,1.271,182,1.478,183,1.271,184,1.556,185,1.271,186,1.336,187,1.638,188,1.638,189,0.015,190,0.015,339,2.426,818,1.852,891,2.28,892,3.319,893,3.039,1399,4.031]],["title/components/LayoutPageComponent-1.html",[0,0.334,177,0.675,436,1.122]],["body/components/LayoutPageComponent-1.html",[0,0.554,1,0.841,2,1.424,3,0.141,4,0.123,5,1.031,6,1.031,7,1.031,8,1.031,9,0.123,14,1.352,15,0.979,16,2.501,17,2.198,18,0.841,19,2.52,20,1.499,22,1.499,24,0.37,25,0.538,31,1.051,37,1.106,44,1.433,46,0.723,47,0.02,48,0.763,49,0.594,50,0.62,52,2.154,53,0.999,55,1.673,57,1.373,59,2.266,60,1.751,62,2.873,66,2.873,67,1.223,72,1.445,78,2.873,85,2.154,88,1.424,99,0.647,100,0.323,113,0.141,114,0.346,116,1.579,123,2.996,149,2.459,153,0.761,154,1.499,155,1.499,156,1.031,157,1.939,158,1.031,159,1.766,160,0.841,161,1.031,162,0.841,163,0.767,164,1.031,165,0.841,166,0.885,167,0.841,168,0.885,169,0.8,170,1.031,171,2.273,172,0.8,173,0.931,174,0.8,175,0.8,176,1.031,177,1.305,178,2.317,179,0.8,180,1.678,181,0.8,182,0.931,183,0.8,184,1.957,185,0.8,186,1.441,187,1.031,188,1.031,189,0.011,190,0.011,196,3.286,199,2.664,211,1.277,212,1.277,213,1.435,224,4.774,231,1.36,233,2.743,235,2.459,237,1.223,244,1.527,247,1.595,248,2.616,256,1.228,257,2.371,258,1.857,259,1.939,266,3.286,316,3.69,327,3.286,339,3.286,361,2.538,364,4.774,377,3.69,382,3.69,383,3.69,399,2.911,402,1.861,406,4.774,412,2.743,433,3.286,436,1.579,480,3.861,564,1.031,576,3.286,614,1.435,624,2.052,626,1.527,638,1.63,639,2.873,641,1.757,643,2.052,645,1.967,646,2.26,647,1.63,651,2.26,659,3.286,800,2.371,818,1.353,839,1.886,891,1.435,892,2.616,893,2.22,904,1.527,905,1.886,908,2.538,910,1.63,911,1.527,976,2.984,980,2.26,1004,2.052,1009,2.543,1108,2.538,1177,2.052,1191,2.538,1400,5.462,1401,5.915,1402,5.568,1403,4.303,1404,2.538,1405,2.959,1406,4.303,1407,4.303,1408,2.538,1409,2.959,1410,2.538,1411,2.959,1412,2.959,1413,4.303,1414,2.959,1415,2.959,1416,2.959,1417,2.959,1418,5.568,1419,4.303,1420,4.303,1421,3.69,1422,3.286,1423,4.303,1424,4.303,1425,4.303,1426,3.69,1427,3.69,1428,3.69,1429,2.959,1430,2.959,1431,2.538,1432,2.538,1433,2.959,1434,2.959,1435,2.959,1436,4.303,1437,4.303,1438,4.303,1439,2.959,1440,2.959,1441,2.959]],["title/components/ListPageComponent.html",[0,0.4,179,0.99]],["body/components/ListPageComponent.html",[0,0.484,1,0.67,2,1.201,3,0.113,4,0.098,5,0.821,6,0.821,7,0.821,8,0.821,9,0.098,13,1.332,14,2.023,15,0.78,16,2.413,17,2.044,18,0.67,20,1.264,22,1.264,24,0.553,25,0.454,26,0.865,31,0.887,35,2.146,37,0.606,44,1.483,46,0.887,47,0.02,48,0.748,49,0.664,50,0.76,52,2.471,53,1.483,55,1.528,57,1.679,58,1.332,60,1.142,67,1.258,72,1.385,77,1.486,80,2.077,84,2,88,1.954,99,0.543,100,0.258,113,0.113,114,0.276,127,0.801,153,0.606,154,1.264,155,1.264,156,0.821,157,1.732,158,0.821,159,1.542,160,0.67,161,0.821,162,0.67,163,0.957,164,0.821,165,0.67,166,0.705,167,0.67,168,0.705,169,0.637,170,0.821,171,2.124,172,0.637,173,0.741,174,0.637,175,0.637,176,0.821,177,0.801,178,1.264,179,1.344,180,2.07,181,0.637,182,0.741,183,0.637,184,0.78,185,0.637,186,0.67,187,0.821,188,0.821,189,0.009,190,0.009,227,1.201,230,0.865,231,1.528,237,1.258,241,2.517,244,3.484,247,0.741,264,1.824,265,1.824,326,2.145,399,2.023,401,1.078,402,2.167,436,1.97,452,2,482,2.411,518,3.113,550,2.772,551,1.393,552,2.447,557,1.815,559,2,574,2.772,575,2.517,579,2.772,581,2.314,582,1.143,583,1.393,591,1.078,614,1.143,616,1.801,620,3.447,621,1.635,628,1.801,631,1.635,635,2.145,636,1.393,638,2.739,639,3.295,641,2.192,643,3.447,645,2.023,653,1.801,656,1.393,657,1.393,659,2.772,673,1.801,677,1.635,681,2.022,688,1.801,740,1.393,816,0.963,818,1.917,826,2.821,863,1.299,891,1.143,892,2.284,893,1.873,904,2.284,905,2.314,910,1.299,911,1.873,913,1.393,918,1.393,920,1.503,951,2.517,960,3.38,965,2.517,967,3.353,976,1.635,977,2.022,981,3.171,998,2.517,1009,1.393,1010,1.393,1086,4.507,1178,2.022,1196,1.801,1211,2.022,1212,4.263,1214,2.022,1278,2.517,1302,2.022,1322,3.38,1323,3.796,1331,4.656,1356,4.263,1357,3.796,1360,4.099,1367,2.517,1368,3.113,1371,3.113,1375,2.772,1378,1.801,1379,2.022,1380,3.113,1398,3.722,1421,3.113,1422,2.772,1431,2.022,1432,2.022,1442,5.573,1443,4.426,1444,4.426,1445,4.971,1446,4.971,1447,3.63,1448,2.022,1449,2.358,1450,3.63,1451,4.971,1452,2.358,1453,3.63,1454,2.358,1455,3.63,1456,2.358,1457,3.63,1458,2.022,1459,3.63,1460,3.63,1461,1.801,1462,2.358,1463,4.426,1464,2.358,1465,2.358,1466,4.971,1467,2.358,1468,2.358,1469,3.63,1470,2.358,1471,2.358,1472,2.358,1473,2.358,1474,2.358,1475,2.358,1476,3.63,1477,3.113,1478,4.971,1479,2.358,1480,2.358,1481,2.358,1482,2.358,1483,1.635,1484,3.63,1485,2.358,1486,2.358,1487,5.67,1488,2.358,1489,2.358,1490,2.358,1491,2.022,1492,2.358,1493,2.358,1494,2.358,1495,2.358,1496,2.358,1497,2.358,1498,2.022,1499,2.358,1500,2.358,1501,2.358,1502,2.358,1503,2.358,1504,2.358,1505,2.358,1506,2.358,1507,3.63,1508,2.358,1509,2.358,1510,2.358,1511,2.358]],["title/components/LoginPageComponent.html",[0,0.4,181,0.99]],["body/components/LoginPageComponent.html",[0,0.45,1,0.597,2,1.098,3,0.1,4,0.088,5,0.732,6,0.732,7,0.732,8,0.732,9,0.088,15,0.695,16,2.363,17,2.046,18,0.597,20,1.156,22,1.156,24,0.263,25,0.415,29,2.978,31,0.811,32,1.679,35,2.016,37,0.853,43,2.76,44,1.402,46,0.513,47,0.02,48,0.619,49,0.595,50,0.44,52,1.284,53,1.511,55,1.693,57,1.642,58,0.771,59,1.098,60,1.469,61,3.466,62,1.712,66,1.712,67,0.597,68,1.084,69,1.019,72,1.141,74,2.573,77,1.396,80,2.189,84,2.266,85,2.189,88,1.361,90,2.301,97,2.852,99,0.641,100,0.23,101,1.34,102,1.605,103,0.961,107,1.158,108,1.158,113,0.1,114,0.246,116,1.983,118,1.517,120,2.534,122,4.721,127,0.907,128,1.284,129,0.907,131,1.34,141,2.116,142,2.116,145,1.019,149,1.994,153,0.54,154,1.432,155,1.156,156,0.732,157,1.627,158,0.732,159,1.432,160,0.597,161,0.732,162,0.597,163,0.592,164,0.732,165,0.597,166,0.628,167,0.597,168,0.628,169,0.568,170,0.732,171,2.043,172,0.568,173,0.661,174,0.568,175,0.568,176,0.732,177,0.732,178,1.156,179,0.568,180,0.695,181,1.375,182,2.046,183,0.568,184,0.695,185,0.568,186,0.597,187,0.732,188,0.732,189,0.009,190,0.009,196,2.92,199,2.333,211,0.907,214,1.457,225,1.605,226,3.567,227,1.098,231,1.541,237,1.667,240,1.084,244,1.084,248,1.084,264,0.771,265,0.771,295,1.084,341,4.287,347,1.802,350,3.567,351,4.127,367,3.925,368,2.92,370,1.158,376,4.005,380,2.846,396,2.301,398,3.242,399,2.759,400,1.457,402,2.215,404,2.573,410,2.846,411,2.846,412,1.34,426,2.534,435,2.116,436,0.771,442,1.34,443,1.34,444,1.34,448,1.34,452,1.158,478,1.158,482,1.994,503,1.34,530,1.802,562,1.34,574,3.567,575,2.301,581,2.622,587,1.605,611,2.852,614,2.265,626,2.122,634,1.457,635,1.242,636,1.242,638,2.573,639,2.41,640,1.802,641,1.679,644,1.605,645,0.961,647,1.828,650,1.605,656,1.242,657,1.242,677,1.457,700,1.802,737,2.116,740,1.961,741,1.605,742,1.605,743,1.605,818,1.044,826,2.116,835,1.457,848,1.457,859,2.846,866,2.846,891,1.019,892,2.122,893,1.712,904,2.122,905,1.34,910,2.266,911,2.122,913,1.242,915,2.301,918,1.961,920,1.34,921,1.605,927,1.605,950,2.534,951,1.457,967,1.084,1004,1.457,1009,2.43,1010,2.43,1012,1.802,1065,2.534,1112,2.301,1156,1.605,1162,1.802,1177,1.457,1202,1.802,1204,1.802,1225,1.802,1238,1.802,1305,2.846,1367,1.457,1378,1.605,1398,1.457,1404,1.802,1458,1.802,1477,2.846,1483,2.301,1491,1.802,1498,2.846,1512,5.302,1513,4.113,1514,4.113,1515,5.086,1516,4.671,1517,4.671,1518,3.319,1519,4.113,1520,4.113,1521,4.671,1522,3.319,1523,4.113,1524,1.802,1525,2.102,1526,2.846,1527,3.319,1528,3.319,1529,3.319,1530,3.319,1531,2.102,1532,3.319,1533,3.319,1534,2.846,1535,6.183,1536,3.319,1537,3.319,1538,4.005,1539,2.102,1540,3.319,1541,2.102,1542,3.319,1543,5.086,1544,3.319,1545,3.526,1546,3.319,1547,2.102,1548,3.319,1549,1.802,1550,3.319,1551,2.102,1552,2.102,1553,1.802,1554,2.102,1555,2.102,1556,2.102,1557,2.102,1558,2.102,1559,2.102,1560,2.102,1561,4.113,1562,3.319,1563,2.102,1564,2.102,1565,2.102,1566,2.102,1567,2.102,1568,2.102,1569,4.113,1570,2.102,1571,2.102,1572,2.102,1573,2.102,1574,2.102,1575,2.102,1576,2.102,1577,4.113,1578,2.102,1579,2.102,1580,2.102,1581,2.102,1582,2.102,1583,2.102,1584,2.102,1585,2.102,1586,2.102,1587,2.102,1588,2.102,1589,2.102,1590,1.802,1591,2.102,1592,2.102,1593,2.102,1594,3.319,1595,3.319,1596,2.102,1597,2.102,1598,3.319,1599,3.319,1600,3.319,1601,3.319,1602,4.671,1603,5.086,1604,5.66,1605,3.319,1606,2.102,1607,2.102,1608,3.319,1609,2.102,1610,2.102,1611,2.102,1612,2.102,1613,2.102,1614,2.102,1615,2.102,1616,1.802,1617,2.102,1618,3.526,1619,3.14,1620,2.102,1621,2.102,1622,2.102,1623,2.102,1624,2.102,1625,2.102,1626,2.102,1627,2.102,1628,2.102]],["title/modules/MaterialModule.html",[268,1.212,334,2.018]],["body/modules/MaterialModule.html",[3,0.198,4,0.173,9,0.173,47,0.02,62,2.8,85,1.601,99,0.837,100,0.452,103,2.48,104,2.638,107,2.28,108,2.99,113,0.198,114,0.484,180,1.369,189,0.014,190,0.014,270,1.601,274,2.28,275,1.786,286,1.891,288,2.48,334,2.99,336,3.46,337,2.445,343,3.764,1092,4.654,1619,3.16,1629,4.138,1630,5.428,1631,4.138,1632,5.428,1633,4.138,1634,5.428,1635,3.548,1636,5.428,1637,5.428,1638,3.548,1639,5.428,1640,5.428,1641,4.138,1642,5.428,1643,4.138,1644,5.428,1645,6.057,1646,4.138,1647,5.428,1648,4.138,1649,5.428,1650,4.138,1651,5.428,1652,4.138,1653,5.428,1654,5.428,1655,4.138,1656,5.428,1657,5.428,1658,4.138,1659,5.428,1660,4.138,1661,5.428,1662,4.138,1663,6.057,1664,5.428,1665,4.138,1666,5.428,1667,3.548,1668,5.428,1669,4.138,1670,5.428,1671,4.138,1672,5.428,1673,4.138,1674,5.428,1675,4.138,1676,5.428,1677,4.138,1678,5.428,1679,4.138,1680,5.428,1681,4.138,1682,5.428,1683,4.138,1684,5.428,1685,4.138,1686,4.138,1687,4.138]],["title/guards/NoLoginGuard.html",[191,2.335,309,2.541]],["body/guards/NoLoginGuard.html",[3,0.217,4,0.19,9,0.19,13,1.669,24,0.569,25,0.569,26,2.324,31,1.409,32,2.587,37,1.169,44,1.339,46,1.409,47,0.02,48,0.868,49,0.675,50,1.208,52,1.76,53,1.056,55,1.409,57,1.056,59,1.505,60,1.814,72,1.409,77,1.36,99,0.728,100,0.497,113,0.217,114,0.532,115,2.899,127,1.003,128,2.232,129,1.963,189,0.015,190,0.015,193,3.154,195,4.038,196,3.726,197,4.768,198,3.473,199,2.875,201,4.405,202,4.62,203,4.247,204,4.247,206,4.038,207,4.393,208,3.154,209,3.154,210,3.154,211,1.963,212,1.963,213,2.206,214,3.154,215,1.909,216,2.687,217,2.899,219,2.206,220,2.079,221,3.154,228,2.976,230,2.117,231,1.548,232,3.473,233,2.899,234,2.899,235,2.206,236,3.473,237,1.293,238,3.154,239,3.473,240,2.347,241,3.154,247,1.43,248,2.347,309,4,326,2.687,431,3.473,441,3.9,1688,5.432,1689,4.548,1690,4.548,1691,4.548,1692,4.548,1693,4.548]],["title/interfaces/Page.html",[249,0.942,818,1.152]],["body/interfaces/Page.html",[3,0.235,4,0.205,9,0.205,24,0.614,25,0.757,47,0.02,48,0.739,49,0.575,113,0.327,163,0.876,189,0.016,190,0.016,249,1.76,251,2.12,256,1.685,258,2.832,259,2.285,263,3.334,554,2.245,557,2.148,564,2.285,795,3.131,796,3.406,797,4.197,798,3.406,799,3.406,800,2.706,801,3.406,802,3.406,803,4.197,804,4.197,805,3.334,806,4.197,807,4.197,808,4.197,809,3.406,810,3.406,811,3.406,812,3.406,813,4.197,814,3.406,815,4.197,816,2.471,817,3.406,818,1.903,819,4.365]],["title/interfaces/Permises.html",[249,0.942,255,2.335]],["body/interfaces/Permises.html",[3,0.256,4,0.224,9,0.224,18,2.006,24,0.671,25,0.798,47,0.02,49,0.798,113,0.305,144,3.42,145,2.602,166,2.109,168,2.109,189,0.017,190,0.017,249,1.641,250,2.769,251,2.316,252,3.17,253,4.097,254,4.601,255,4.498,256,1.183,257,3.518,258,3.25,259,1.869]],["title/interfaces/Rol.html",[95,1.777,249,0.942]],["body/interfaces/Rol.html",[3,0.264,4,0.231,9,0.231,24,0.691,25,0.813,47,0.019,49,0.808,50,1.361,95,3.57,113,0.264,123,4.21,125,4.941,189,0.017,190,0.017,249,1.421,251,2.387,256,1.624,557,1.962,1694,4.742]],["title/injectables/RolesService.html",[41,2.335,215,1.212]],["body/injectables/RolesService.html",[3,0.137,4,0.119,9,0.119,24,0.685,25,0.524,28,5.19,31,1.025,37,0.734,41,2.674,44,1.5,46,1.489,47,0.02,48,0.917,49,0.737,50,1.277,53,0.663,55,1.755,57,1.667,58,2.635,64,2.909,67,1.192,72,1.638,78,2.164,79,2.909,80,2.118,81,2.909,88,1.388,93,2.164,95,3.662,99,0.706,100,0.312,109,2.182,113,0.137,114,0.334,116,1.049,127,1.096,128,1.106,133,2.182,189,0.011,190,0.011,212,2.934,213,1.386,215,1.388,219,1.386,220,1.306,227,2.138,230,2.14,231,1.711,237,2.019,238,4.228,247,1.834,250,1.474,252,1.688,256,1.345,259,0.995,295,1.474,353,1.574,365,1.822,366,3.491,367,1.982,368,3.251,370,2.311,400,1.982,401,2.665,402,2.371,404,3.56,409,3.491,412,1.822,437,1.688,438,1.822,442,1.822,443,1.822,444,1.822,448,1.822,453,3.235,478,3.017,482,1.386,503,3.491,557,1.413,564,1.907,591,1.306,737,1.822,827,5.228,828,5.228,833,3.491,867,3.797,887,4.695,1027,4.482,1045,1.822,1051,2.182,1271,4.935,1410,2.45,1461,3.203,1553,2.45,1695,2.182,1696,4.195,1697,4.195,1698,4.195,1699,4.195,1700,4.195,1701,4.195,1702,4.195,1703,2.858,1704,3.203,1705,4.195,1706,2.858,1707,5.476,1708,4.195,1709,2.858,1710,3.597,1711,4.695,1712,2.858,1713,4.195,1714,2.858,1715,4.695,1716,4.195,1717,2.858,1718,3.203,1719,2.858,1720,2.45,1721,4.195,1722,2.858,1723,2.858,1724,2.858,1725,2.858,1726,2.858,1727,2.858,1728,3.597,1729,2.858,1730,2.858,1731,2.858]],["title/components/SearchPageComponent.html",[0,0.4,183,0.99]],["body/components/SearchPageComponent.html",[0,0.5,1,0.708,2,1.252,3,0.119,4,0.104,5,0.867,6,0.867,7,0.867,8,0.867,9,0.104,13,1.389,14,2.092,15,0.824,16,2.436,17,2.125,18,0.708,20,1.318,22,1.318,24,0.311,25,0.473,26,2.653,31,0.925,35,2.207,37,0.973,44,1.529,46,0.608,47,0.02,48,0.689,49,0.705,50,0.521,52,2.241,53,1.504,55,1.609,57,1.55,60,1.19,61,2.236,66,2.362,67,1.646,69,2.48,72,1.249,74,2.522,77,1.131,85,2.128,88,1.82,97,3.546,99,0.559,100,0.272,101,2.412,103,1.138,113,0.119,114,0.291,116,1.876,118,1.729,127,1.01,149,2.22,153,0.64,154,1.318,155,1.318,156,0.867,157,1.781,158,0.867,159,1.594,160,0.708,161,0.867,162,0.708,163,1.106,164,0.867,165,0.708,166,0.744,167,0.708,168,0.744,169,0.673,170,0.867,171,2.161,172,0.673,173,0.783,174,0.673,175,0.673,176,0.867,177,0.835,178,1.318,179,0.673,180,0.824,181,0.673,182,0.783,183,1.382,184,2.209,185,0.673,186,0.708,187,0.867,188,0.867,189,0.015,190,0.01,227,1.692,231,1.683,235,2.22,237,1.646,244,2.362,247,0.783,248,1.953,256,0.835,258,1.633,264,1.876,265,1.876,370,2.085,396,3.174,399,2.092,412,3.26,426,2.89,436,1.68,482,3.008,551,1.471,552,2.742,557,1.076,582,1.207,583,1.471,611,3.174,614,1.835,626,1.953,641,1.545,645,1.729,647,1.372,818,1.608,826,1.587,860,2.89,891,1.207,892,2.362,893,1.953,900,2.89,901,3.245,904,1.953,910,1.372,911,1.953,915,2.624,949,2.135,965,1.727,967,2.838,972,2.135,973,1.901,981,3.021,997,2.89,998,2.624,1010,1.471,1035,3.925,1065,2.89,1088,4.631,1112,2.624,1155,1.901,1156,1.901,1270,4.2,1278,1.727,1292,3.905,1322,3.496,1323,3.905,1331,4.423,1332,3.245,1333,5.162,1342,3.925,1357,3.905,1360,2.89,1364,3.245,1365,2.89,1367,2.624,1375,2.89,1393,3.925,1398,1.727,1408,2.135,1448,2.135,1483,3.546,1524,2.135,1545,5.162,1618,3.245,1619,1.901,1732,5.726,1733,4.578,1734,4.578,1735,4.578,1736,5.792,1737,3.784,1738,2.49,1739,3.784,1740,4.578,1741,4.578,1742,4.578,1743,2.49,1744,2.49,1745,3.784,1746,4.578,1747,3.784,1748,2.49,1749,2.49,1750,2.49,1751,2.49,1752,2.49,1753,2.49,1754,2.49,1755,2.49,1756,3.784,1757,2.49,1758,2.49,1759,2.49,1760,5.501,1761,3.784,1762,3.784,1763,4.578,1764,3.784,1765,2.49,1766,3.784,1767,3.784,1768,3.784,1769,3.784,1770,3.784,1771,3.784,1772,3.784]],["title/interfaces/SearchResponse.html",[249,0.942,1773,2.798]],["body/interfaces/SearchResponse.html",[3,0.259,4,0.226,9,0.226,24,0.677,25,0.803,47,0.02,49,0.828,99,0.592,113,0.259,163,1.288,189,0.019,190,0.017,249,1.391,251,2.336,557,2.133,818,2.225,819,4.511,1773,4.901,1774,4.642,1775,7.076]],["title/modules/SharedModule.html",[268,1.212,281,2.335]],["body/modules/SharedModule.html",[3,0.25,4,0.219,9,0.219,47,0.02,99,0.738,100,0.573,113,0.25,114,0.613,153,1.346,169,2.045,189,0.016,190,0.016,268,1.733,270,2.026,271,2.703,272,3.987,273,2.886,274,2.886,275,2.912,281,4.687,282,3.719,283,3.095,284,2.703,286,2.394,288,2.876,303,3.632,304,2.886,336,4.012,337,3.095,1776,4.491,1777,4.491,1778,4.491,1779,5.238,1780,5.238]],["title/interfaces/User.html",[19,1.496,249,0.942]],["body/interfaces/User.html",[3,0.241,4,0.211,9,0.211,19,2.514,24,0.631,25,0.77,47,0.02,49,0.862,50,1.447,59,2.287,95,3.352,113,0.241,123,4.084,124,4.794,125,4.794,189,0.016,190,0.016,249,1.298,251,2.179,256,1.693,259,2.313,557,1.888,875,4.407,879,5.279,1781,4.329,1782,6.913]],["title/injectables/UserService.html",[42,1.777,215,1.212]],["body/injectables/UserService.html",[3,0.143,4,0.125,9,0.125,19,3.013,24,0.699,25,0.542,31,1.059,37,0.768,42,2.102,44,1.519,46,1.513,47,0.02,48,0.931,49,0.748,50,1.297,53,1.006,55,1.695,57,1.299,58,2.651,59,2.42,64,3.005,67,1.232,72,1.655,78,2.236,79,3.005,80,2.164,88,1.434,93,2.236,99,0.677,100,0.327,113,0.143,114,0.35,116,1.096,127,1.125,128,1.156,186,1.449,189,0.011,190,0.011,206,4.072,212,2.824,215,1.434,219,1.449,220,1.366,228,2.236,230,2.272,231,1.655,237,1.86,247,1.867,250,1.542,252,1.765,256,1.366,259,1.041,264,1.096,265,1.096,295,1.542,353,1.646,365,1.905,366,3.565,368,3.296,370,2.387,401,2.714,402,2.545,404,3.605,409,3.565,437,1.765,438,1.905,445,2.072,448,1.905,452,2.387,453,3.304,478,3.081,503,3.565,564,1.509,591,1.366,737,1.905,833,3.565,839,1.905,848,4.294,860,3.309,867,3.005,870,3.309,889,3.309,985,4.796,1027,4.538,1045,1.905,1051,2.282,1395,3.716,1704,3.309,1710,3.716,1711,3.716,1715,4.796,1718,3.309,1720,2.562,1728,3.716,1783,2.282,1784,4.334,1785,3.716,1786,5.593,1787,3.716,1788,4.334,1789,4.334,1790,4.334,1791,2.988,1792,6.544,1793,3.716,1794,2.988,1795,3.716,1796,2.988,1797,4.334,1798,2.988,1799,4.334,1800,2.988,1801,4.334,1802,2.988,1803,4.334,1804,4.334,1805,2.988,1806,4.334,1807,2.988,1808,2.988,1809,2.988,1810,2.988,1811,2.988,1812,2.988,1813,2.988,1814,2.988,1815,2.988,1816,2.988,1817,2.988]],["title/components/UsersComponent.html",[0,0.4,185,0.99]],["body/components/UsersComponent.html",[0,0.384,1,0.781,2,0.909,3,0.079,4,0.069,5,0.579,6,0.579,7,0.579,8,0.579,9,0.069,11,1.153,13,1.008,14,1.603,15,0.55,16,2.251,17,1.925,18,1.158,19,2.54,20,0.957,22,0.957,24,0.208,25,0.343,26,1.287,27,2.433,31,0.671,32,2.454,35,1.758,37,0.706,42,2.701,44,1.554,46,0.995,47,0.02,48,0.73,49,0.689,50,0.853,53,1.542,54,2.097,55,1.595,57,1.627,58,2.345,59,2.269,60,1.281,66,1.417,67,1.708,68,2.506,72,1.361,77,1.665,78,1.417,79,2.825,80,2.525,85,1.063,88,1.348,93,1.417,95,1.701,99,0.669,100,0.182,101,3.55,103,0.76,104,1.06,106,1.153,113,0.079,114,0.195,116,1.655,118,2.622,124,2.433,127,1.228,128,1.357,129,1.758,131,1.06,132,1.27,136,4.168,139,2.433,145,1.332,149,2.605,153,0.427,154,0.957,155,0.957,156,0.579,157,1.419,158,0.579,159,1.222,160,0.473,161,0.579,162,0.473,163,0.49,164,0.579,165,0.781,166,1.452,167,0.781,168,1.218,169,0.449,170,0.579,171,1.871,172,0.449,173,0.523,174,0.449,175,0.449,176,0.579,177,0.606,178,0.957,179,0.449,180,0.55,181,0.449,182,0.523,183,0.449,184,0.55,185,1.101,186,1.282,187,0.579,188,0.579,189,0.007,190,0.007,227,1.777,230,1.287,231,1.623,234,2.597,237,1.816,247,0.864,248,2.102,255,3.096,256,0.898,258,1.514,264,2.043,265,2.371,385,3.009,398,3.657,401,1.603,402,1.971,404,2.244,423,2.097,435,3.096,436,1.885,447,1.426,452,2.959,480,1.905,497,2.097,557,0.473,563,1.751,626,1.417,631,1.905,641,1.122,705,3.493,821,1.153,833,2.597,835,1.905,848,3.725,854,3.708,856,1.153,863,1.513,865,2.097,867,2.825,870,2.097,875,2.237,879,2.679,889,2.097,978,1.426,981,1.623,1023,4.431,1053,2.355,1165,1.426,1270,2.097,1292,3.111,1334,4.164,1461,2.097,1483,2.825,1526,2.355,1538,2.355,1549,1.426,1590,2.355,1635,1.426,1638,1.426,1667,1.426,1704,3.111,1718,3.111,1785,2.355,1787,2.355,1793,2.355,1795,2.355,1818,1.426,1819,3.509,1820,2.747,1821,3.509,1822,4.074,1823,3.509,1824,3.509,1825,3.509,1826,3.509,1827,3.509,1828,3.509,1829,3.509,1830,3.509,1831,3.509,1832,4.074,1833,2.747,1834,4.074,1835,4.074,1836,4.074,1837,1.663,1838,4.51,1839,5.138,1840,1.663,1841,1.663,1842,5.372,1843,2.747,1844,2.747,1845,4.856,1846,2.747,1847,2.747,1848,4.074,1849,4.074,1850,2.747,1851,2.747,1852,1.663,1853,2.747,1854,2.747,1855,2.747,1856,2.747,1857,1.663,1858,2.747,1859,5.738,1860,2.747,1861,4.074,1862,2.747,1863,2.747,1864,2.747,1865,2.747,1866,1.663,1867,4.074,1868,2.747,1869,4.074,1870,1.663,1871,2.747,1872,1.663,1873,2.747,1874,2.747,1875,1.663,1876,1.663,1877,2.747,1878,2.747,1879,2.747,1880,2.747,1881,2.747,1882,2.747,1883,4.51,1884,1.663,1885,1.663,1886,1.663,1887,1.663,1888,1.426,1889,1.663,1890,1.663,1891,1.663,1892,3.509,1893,2.747,1894,1.663,1895,1.663,1896,1.663,1897,3.509,1898,2.747,1899,1.663,1900,1.663,1901,1.663,1902,3.009,1903,1.663,1904,1.663,1905,1.663,1906,1.663,1907,4.51,1908,4.51,1909,1.663,1910,1.663,1911,1.663,1912,1.663,1913,1.663,1914,1.663,1915,1.663,1916,1.663,1917,2.747,1918,3.509,1919,3.509,1920,3.509,1921,1.663,1922,1.663,1923,1.663,1924,1.663,1925,1.663,1926,2.747,1927,2.747,1928,1.663,1929,1.663,1930,3.509,1931,1.663,1932,1.663,1933,3.509,1934,2.747,1935,1.663,1936,3.509,1937,1.663,1938,1.663,1939,1.663,1940,3.509,1941,1.663,1942,1.663,1943,1.663,1944,4.51,1945,4.51,1946,1.663,1947,1.663,1948,1.663,1949,1.663,1950,1.663,1951,1.663,1952,3.509,1953,1.663,1954,1.663,1955,1.663,1956,1.663,1957,1.663,1958,2.747,1959,2.747,1960,2.747,1961,2.747]],["title/modules/UsersModule.html",[268,1.212,1962,2.541]],["body/modules/UsersModule.html",[1,1.982,3,0.228,4,0.199,9,0.199,11,3.306,18,1.355,47,0.02,99,0.803,100,0.521,103,2.178,113,0.228,114,0.558,153,1.225,165,1.982,166,1.425,167,1.982,168,1.425,185,1.884,186,1.355,189,0.015,190,0.015,268,1.577,270,1.844,271,2.46,272,3.824,273,2.626,274,2.626,275,2.057,282,3.51,283,2.816,284,2.46,286,2.715,288,2.715,292,3.306,334,3.841,336,3.039,337,2.816,342,3.64,343,3.306,821,3.306,856,3.306,1902,5.55,1962,5.252,1963,4.088,1964,4.088,1965,4.088,1966,4.532,1967,4.767,1968,4.088,1969,4.767,1970,4.767]],["title/modules/UsuariosRoutingModule.html",[268,1.212,1966,2.335]],["body/modules/UsuariosRoutingModule.html",[0,0.695,3,0.255,4,0.222,9,0.222,47,0.02,99,0.769,100,0.582,113,0.255,114,0.624,127,1.175,177,1.402,185,1.719,189,0.017,190,0.017,211,2.3,270,2.061,275,2.3,286,2.435,288,2.906,299,3.695,300,4.41,301,3.745,304,2.936,312,4.713,339,2.749,346,4.069,352,4.069,1084,4.069,1258,4.569,1966,4.054,1968,4.569,1971,5.329]],["title/coverage.html",[1972,4.29]],["body/coverage.html",[0,0.801,1,1.052,9,0.154,10,3.173,11,2.566,12,3.97,19,1.511,41,2.359,42,1.794,47,0.02,49,0.433,69,1.794,95,1.794,110,2.186,111,2.566,118,1.691,160,1.052,162,1.052,163,0.66,165,1.052,167,1.052,169,1,172,1,174,1,175,1,177,1.111,179,1,181,1,183,1,185,1,189,0.013,190,0.013,191,3.65,192,2.359,194,3.173,199,1.597,215,2.195,249,1.82,250,1.909,252,2.976,253,3.846,255,2.359,260,3.173,303,2.566,305,2.566,309,2.566,323,3.173,339,2.599,341,2.566,354,3.173,368,1.909,431,2.825,437,2.186,445,2.566,463,2.186,542,3.173,552,1.597,554,1.691,578,4.319,584,2.186,641,3.102,704,3.173,795,3.918,816,2.057,818,1.163,820,3.173,821,2.566,855,3.173,856,2.566,890,3.173,891,3.35,958,3.173,959,2.566,964,2.359,1013,3.846,1045,3.65,1056,3.173,1057,3.173,1083,2.566,1086,2.566,1088,2.566,1094,3.173,1112,4.996,1189,4.319,1224,3.173,1259,3.173,1301,2.825,1316,3.173,1317,3.173,1318,3.173,1399,3.173,1400,3.173,1442,3.173,1512,3.173,1688,3.173,1694,3.173,1695,3.846,1732,3.173,1773,2.825,1774,3.173,1781,3.173,1783,3.846,1818,3.173,1972,3.173,1973,3.7,1974,3.7,1975,3.7,1976,5.037,1977,6.43,1978,4.91,1979,3.173,1980,7.331,1981,3.173,1982,3.173,1983,3.7,1984,5.037,1985,3.7,1986,3.7,1987,3.7,1988,3.7,1989,3.7,1990,3.7,1991,5.037,1992,5.037,1993,3.7,1994,5.037,1995,3.7,1996,3.7,1997,3.7,1998,3.7,1999,3.7,2000,3.7,2001,5.037,2002,4.91,2003,3.173,2004,3.7,2005,3.7,2006,3.7,2007,3.7,2008,3.7,2009,3.7,2010,5.037,2011,5.037,2012,3.7,2013,3.7,2014,4.91,2015,3.7,2016,3.7]],["title/dependencies.html",[271,2.274,2017,2.335]],["body/dependencies.html",[47,0.02,100,0.596,103,2.491,189,0.017,190,0.017,211,2.353,213,2.644,271,2.813,273,3.003,290,5.527,291,4.922,337,3.221,442,3.475,443,3.475,444,3.475,2018,5.452,2019,7.467,2020,5.452,2021,6.446,2022,5.452,2023,5.452,2024,5.452,2025,5.452,2026,5.452,2027,5.452,2028,5.452,2029,5.452,2030,5.452,2031,5.452]],["title/index.html",[24,0.382,2032,3.058,2033,3.058]],["body/index.html",[0,0.713,4,0.202,13,1.779,17,1.525,18,1.378,47,0.016,48,0.729,118,2.216,163,0.865,184,1.605,189,0.016,190,0.016,216,2.865,266,3.703,284,2.502,645,2.216,805,2.672,816,1.98,818,1.525,900,3.703,998,4.164,1166,6.122,1271,3.703,1365,3.703,1422,3.703,1426,4.158,1427,4.158,1428,4.158,1534,4.158,1616,6.205,2017,3.703,2034,4.85,2035,6.523,2036,4.85,2037,6.523,2038,6.523,2039,4.158,2040,4.85,2041,4.85,2042,6.005,2043,7.007,2044,4.85,2045,4.85,2046,4.85,2047,4.85,2048,4.85,2049,4.85,2050,4.85,2051,4.85,2052,4.85,2053,4.85,2054,4.85,2055,6.523,2056,7.007,2057,4.85,2058,6.818,2059,4.85,2060,4.85,2061,4.85,2062,4.85,2063,6.005,2064,6.005,2065,6.818,2066,4.85,2067,6.005,2068,6.005,2069,4.85,2070,4.85,2071,4.85,2072,4.85,2073,6.005,2074,4.85,2075,4.85,2076,4.85,2077,4.85,2078,4.85,2079,6.523,2080,4.85,2081,4.85,2082,4.85]],["title/modules.html",[270,1.935]],["body/modules.html",[47,0.017,189,0.017,190,0.017,269,3.814,270,2.128,280,3.506,281,3.506,291,5.54,329,3.814,333,3.506,334,3.03,1076,3.814,1080,3.506,1962,3.814,1966,3.506,2083,7.255,2084,7.255,2085,7.556,2086,7.255,2087,7.255]],["title/overview.html",[805,2.756]],["body/overview.html",[1,1.761,2,1.435,47,0.02,153,1.115,160,2.006,162,1.761,165,1.761,167,1.761,169,1.908,172,1.674,174,1.674,175,1.674,177,1.366,179,1.674,181,1.674,183,1.674,185,1.674,189,0.015,190,0.015,193,3.007,251,1.872,268,1.435,269,5.011,270,1.678,271,2.238,272,2.562,273,2.389,274,2.389,275,1.872,276,3.719,277,3.719,278,3.719,279,3.719,280,3.949,281,4.422,282,3.306,283,2.562,284,2.238,301,2.389,329,5.053,330,3.719,331,3.719,332,3.719,333,3.949,334,3.732,353,2.389,436,1.591,463,2.562,584,3.66,598,4.273,677,3.007,688,3.311,805,2.389,1076,5.252,1077,3.719,1078,3.719,1079,3.719,1080,3.949,1776,3.719,1777,3.719,1778,3.719,1962,5.165,1963,3.719,1964,3.719,1965,3.719,1966,3.949,2003,3.719,2088,4.337]],["title/properties.html",[25,0.551,2017,2.335]],["body/properties.html",[25,0.744,47,0.018,189,0.018,190,0.018,2039,5.099,2089,5.947]],["title/routes.html",[301,2.756]],["body/routes.html",[47,0.018,189,0.018,190,0.018,301,3.295]],["title/miscellaneous/variables.html",[1303,3.365,2090,2.622]],["body/miscellaneous/variables.html",[24,0.529,47,0.02,49,0.849,55,1.033,58,1.552,59,1.399,61,2.499,62,2.182,63,3.229,69,2.67,90,2.933,95,2.051,110,3.253,111,3.818,127,1.214,173,1.33,189,0.014,190,0.014,196,2.841,199,2.376,202,2.933,203,3.509,204,2.696,206,4.133,208,2.933,209,2.933,210,2.933,212,1.825,217,2.696,247,1.925,256,1.548,264,2.698,265,2.698,362,4.721,437,3.253,445,3.818,459,3.627,463,2.499,478,2.33,741,3.229,742,3.229,743,3.229,1013,3.229,1045,4.393,1301,4.204,1303,3.229,1695,3.229,1783,3.229,1888,3.627,1978,3.627,1979,4.721,1981,4.721,1982,5.559,2002,3.627,2014,3.627,2090,3.627,2091,6.121,2092,6.121,2093,4.229,2094,4.229,2095,4.229,2096,6.121,2097,4.229,2098,4.229,2099,5.505,2100,4.229,2101,4.229,2102,4.229,2103,4.229,2104,4.229,2105,4.229,2106,4.229,2107,4.229,2108,4.229,2109,4.229,2110,4.229,2111,4.229,2112,4.229,2113,4.229,2114,5.505,2115,4.229,2116,4.229,2117,4.229,2118,4.229,2119,4.229,2120,4.229,2121,4.229]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":641,"title":{},"body":{"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2089,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1613,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["0.13.0",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":1216,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["0.3s",{"_index":1214,"title":{},"body":{"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["0.4s",{"_index":1179,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["0.5",{"_index":940,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["0.6",{"_index":1504,"title":{},"body":{"components/ListPageComponent.html":{}}}],["0.7",{"_index":1163,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["0.75",{"_index":642,"title":{},"body":{"components/CardComponent.html":{}}}],["0.8em",{"_index":947,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["0.9",{"_index":667,"title":{},"body":{"components/CardComponent.html":{}}}],["0/1",{"_index":1980,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1976,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1989,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1977,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["0077d8f4",{"_index":946,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["007bff",{"_index":1011,"title":{},"body":{"components/FavPageComponent.html":{}}}],["00ff00",{"_index":703,"title":{},"body":{"components/CardComponent.html":{}}}],["0d0d0c",{"_index":1226,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["0px",{"_index":1238,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["1",{"_index":436,"title":{"interfaces/Genre-1.html":{},"components/LayoutPageComponent-1.html":{}},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["1.9",{"_index":670,"title":{},"body":{"components/CardComponent.html":{}}}],["10",{"_index":598,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"overview.html":{}}}],["100",{"_index":647,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["100).tofixed(2",{"_index":746,"title":{},"body":{"injectables/CommonService.html":{}}}],["100px",{"_index":1007,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["100vh",{"_index":1607,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["10px",{"_index":1177,"title":{},"body":{"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{}}}],["11px",{"_index":1220,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["12",{"_index":1479,"title":{},"body":{"components/ListPageComponent.html":{}}}],["120px",{"_index":1203,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["12px",{"_index":1490,"title":{},"body":{"components/ListPageComponent.html":{}}}],["14px",{"_index":1164,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["15",{"_index":2088,"title":{},"body":{"overview.html":{}}}],["150px",{"_index":1239,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["15px",{"_index":1209,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["16.2.0",{"_index":2019,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":2040,"title":{},"body":{"index.html":{}}}],["16.2.14",{"_index":2021,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":658,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["17.1.0",{"_index":2026,"title":{},"body":{"dependencies.html":{}}}],["18px",{"_index":1008,"title":{},"body":{"components/FavPageComponent.html":{}}}],["19",{"_index":1235,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["19px",{"_index":1218,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["1a1a1a",{"_index":906,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["1em",{"_index":948,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["1px",{"_index":1197,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["2",{"_index":673,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["2.3.0",{"_index":2029,"title":{},"body":{"dependencies.html":{}}}],["2.9",{"_index":674,"title":{},"body":{"components/CardComponent.html":{}}}],["2/6",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1996,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1234,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["20px",{"_index":1010,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["22",{"_index":1995,"title":{},"body":{"coverage.html":{}}}],["24243e",{"_index":1611,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["24px",{"_index":1162,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["25",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":939,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["25px",{"_index":1188,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["28",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":1510,"title":{},"body":{"components/ListPageComponent.html":{}}}],["2em",{"_index":943,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["2s",{"_index":926,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["3",{"_index":677,"title":{},"body":{"components/CardComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"overview.html":{}}}],["3.9",{"_index":678,"title":{},"body":{"components/CardComponent.html":{}}}],["3/12",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":1570,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["300px",{"_index":922,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["302b63",{"_index":1610,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["30px",{"_index":1511,"title":{},"body":{"components/ListPageComponent.html":{}}}],["31",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2003,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["333",{"_index":1430,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["33ff00",{"_index":699,"title":{},"body":{"components/CardComponent.html":{}}}],["350px",{"_index":1231,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["36",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":648,"title":{},"body":{"components/CardComponent.html":{}}}],["4",{"_index":681,"title":{},"body":{"components/CardComponent.html":{},"components/ListPageComponent.html":{}}}],["4.9",{"_index":682,"title":{},"body":{"components/CardComponent.html":{}}}],["4/10",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["4/11",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1189,"title":{},"body":{"components/FilmPageComponent.html":{},"coverage.html":{}}}],["400",{"_index":1173,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["400px",{"_index":1156,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["404",{"_index":245,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"components/Error404PageComponent.html":{}}}],["40px",{"_index":1612,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["41",{"_index":1998,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":578,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["45px",{"_index":627,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["47a276",{"_index":1500,"title":{},"body":{"components/ListPageComponent.html":{}}}],["4em",{"_index":909,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["4px",{"_index":1491,"title":{},"body":{"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["5",{"_index":579,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/ListPageComponent.html":{}}}],["5.3.2",{"_index":2025,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":931,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["5.9",{"_index":685,"title":{},"body":{"components/CardComponent.html":{}}}],["5/11",{"_index":1994,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":1999,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":637,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["5000",{"_index":142,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["500px",{"_index":1917,"title":{},"body":{"components/UsersComponent.html":{}}}],["50px",{"_index":949,"title":{},"body":{"components/Error404PageComponent.html":{},"components/SearchPageComponent.html":{}}}],["51",{"_index":1240,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["53c08b",{"_index":1497,"title":{},"body":{"components/ListPageComponent.html":{}}}],["555",{"_index":1390,"title":{},"body":{"components/GenreComponent.html":{}}}],["55px",{"_index":1241,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["5deg",{"_index":957,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["5px",{"_index":1196,"title":{},"body":{"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["6",{"_index":688,"title":{},"body":{"components/CardComponent.html":{},"components/ListPageComponent.html":{},"overview.html":{}}}],["6.9",{"_index":689,"title":{},"body":{"components/CardComponent.html":{}}}],["6/10",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1224,"title":{},"body":{"components/FilmPageComponent.html":{},"coverage.html":{}}}],["600",{"_index":936,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["60000",{"_index":760,"title":{},"body":{"injectables/CommonService.html":{}}}],["60px",{"_index":1441,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["63eeab",{"_index":1489,"title":{},"body":{"components/ListPageComponent.html":{}}}],["66",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["666666",{"_index":1627,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["66ff00",{"_index":695,"title":{},"body":{"components/CardComponent.html":{}}}],["69",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":692,"title":{},"body":{"components/CardComponent.html":{}}}],["7.8.0",{"_index":2027,"title":{},"body":{"dependencies.html":{}}}],["7.9",{"_index":693,"title":{},"body":{"components/CardComponent.html":{}}}],["7/22",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":1230,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["768px",{"_index":1223,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["7b1fa2",{"_index":1609,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["8",{"_index":696,"title":{},"body":{"components/CardComponent.html":{}}}],["8.9",{"_index":697,"title":{},"body":{"components/CardComponent.html":{}}}],["80",{"_index":1227,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["85px",{"_index":1232,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["8px",{"_index":1378,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["9",{"_index":700,"title":{},"body":{"components/CardComponent.html":{},"components/LoginPageComponent.html":{}}}],["9.9",{"_index":701,"title":{},"body":{"components/CardComponent.html":{}}}],["9._",{"_index":1563,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["9/13",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1229,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["99ff00",{"_index":691,"title":{},"body":{"components/CardComponent.html":{}}}],["9ac7fa",{"_index":1193,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["9rem",{"_index":937,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["_",{"_index":1474,"title":{},"body":{"components/ListPageComponent.html":{}}}],["a:hover",{"_index":1628,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["absolute",{"_index":625,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["acceder",{"_index":226,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/LoginPageComponent.html":{}}}],["accept",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceso",{"_index":1551,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["access_token",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":1403,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["actions",{"_index":1165,"title":{},"body":{"components/FilmPageComponent.html":{},"components/UsersComponent.html":{}}}],["activada",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["activatedroute",{"_index":1099,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":202,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["activo",{"_index":1501,"title":{},"body":{"components/ListPageComponent.html":{}}}],["actual",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["actualiza",{"_index":1718,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["actualizado",{"_index":1711,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":1124,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["actualmente",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"guards/NoLoginGuard.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Permises.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["add_circle",{"_index":1960,"title":{},"body":{"components/UsersComponent.html":{}}}],["added",{"_index":999,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{}}}],["addfav",{"_index":1016,"title":{},"body":{"injectables/FavService.html":{},"components/FilmPageComponent.html":{}}}],["addfav(id_usuario",{"_index":1021,"title":{},"body":{"injectables/FavService.html":{}}}],["address",{"_index":1601,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["addrol",{"_index":1696,"title":{},"body":{"injectables/RolesService.html":{}}}],["addrol(rol",{"_index":1702,"title":{},"body":{"injectables/RolesService.html":{}}}],["adduser",{"_index":1784,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(user",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["addusercomponent",{"_index":1,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["addusuario",{"_index":1832,"title":{},"body":{"components/UsersComponent.html":{}}}],["adicional",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["adminguard",{"_index":192,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["administrador",{"_index":224,"title":{},"body":{"guards/AdminGuard.html":{},"components/LayoutPageComponent-1.html":{}}}],["adult",{"_index":796,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["agrega",{"_index":64,"title":{},"body":{"components/AddUserComponent.html":{},"components/GenreComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["agregar",{"_index":93,"title":{},"body":{"components/AddUserComponent.html":{},"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["ajusta",{"_index":628,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["al",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["align",{"_index":910,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["alineación",{"_index":1433,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["alinear",{"_index":1438,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["allowed",{"_index":1508,"title":{},"body":{"components/ListPageComponent.html":{}}}],["almacena",{"_index":1035,"title":{},"body":{"injectables/FavService.html":{},"components/SearchPageComponent.html":{}}}],["almacenadas",{"_index":971,"title":{},"body":{"components/FavPageComponent.html":{}}}],["almacenamiento",{"_index":984,"title":{},"body":{"components/FavPageComponent.html":{}}}],["almacenamos",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["almacenar",{"_index":973,"title":{},"body":{"components/FavPageComponent.html":{},"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["alternar",{"_index":1110,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["alternate",{"_index":929,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["ancho",{"_index":651,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["angular",{"_index":2037,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2018,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2020,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":1901,"title":{},"body":{"components/UsersComponent.html":{}}}],["angular/common",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2022,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":100,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":103,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AuthModule.html":{},"components/EditUserComponent.html":{},"modules/FilmModule.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2023,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1660,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1650,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1652,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":1681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":1633,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1658,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":104,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"modules/MaterialModule.html":{},"components/UsersComponent.html":{}}}],["angular/material/form",{"_index":1641,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1662,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1646,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1643,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1638,"title":{},"body":{"modules/MaterialModule.html":{},"components/UsersComponent.html":{}}}],["angular/material/progress",{"_index":1654,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":1679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1648,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":107,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1667,"title":{},"body":{"modules/MaterialModule.html":{},"components/UsersComponent.html":{}}}],["angular/material/stepper",{"_index":1675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1635,"title":{},"body":{"modules/MaterialModule.html":{},"components/UsersComponent.html":{}}}],["angular/material/toolbar",{"_index":1683,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":1677,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":211,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"modules/UsuariosRoutingModule.html":{},"dependencies.html":{}}}],["animates",{"_index":925,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["animatestext",{"_index":941,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["animation",{"_index":924,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["anterior",{"_index":1453,"title":{},"body":{"components/ListPageComponent.html":{}}}],["antes",{"_index":225,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/LoginPageComponent.html":{}}}],["api",{"_index":1271,"title":{},"body":{"injectables/FilmService.html":{},"injectables/RolesService.html":{},"index.html":{}}}],["api_key=917d79645a6fc8e20e34bba9ceb4192d",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_search",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":1260,"title":{},"body":{"injectables/FilmService.html":{}}}],["apiresponse",{"_index":250,"title":{"interfaces/ApiResponse.html":{}},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"injectables/FavService.html":{},"interfaces/Permises.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["aplica",{"_index":1880,"title":{},"body":{"components/UsersComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1620,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["application",{"_index":2048,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":741,"title":{},"body":{"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":784,"title":{},"body":{"injectables/CommonService.html":{}}}],["appmodule",{"_index":269,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":280,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqui",{"_index":903,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["archivo",{"_index":1719,"title":{},"body":{"injectables/RolesService.html":{}}}],["arial",{"_index":1172,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["array",{"_index":981,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["array(n).fill(x",{"_index":765,"title":{},"body":{"injectables/CommonService.html":{}}}],["array.from",{"_index":1472,"title":{},"body":{"components/ListPageComponent.html":{}}}],["arreglo",{"_index":1715,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["artifacts",{"_index":2059,"title":{},"body":{"index.html":{}}}],["asincrona",{"_index":75,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"injectables/FavService.html":{}}}],["asincrono",{"_index":1842,"title":{},"body":{"components/UsersComponent.html":{}}}],["assets/no",{"_index":1074,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["async",{"_index":32,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/UsersComponent.html":{}}}],["atención",{"_index":844,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["autenticación",{"_index":1529,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["autenticado",{"_index":327,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["auth",{"_index":195,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"guards/NoLoginGuard.html":{}}}],["auth.guard",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth.guard.ts",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:16",{"_index":1689,"title":{},"body":{"guards/NoLoginGuard.html":{}}}],["auth.guard.ts:20",{"_index":1690,"title":{},"body":{"guards/NoLoginGuard.html":{}}}],["auth/guards/admin.guard",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/guards/auth.guard",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/guards/no",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":978,"title":{},"body":{"components/FavPageComponent.html":{},"components/UsersComponent.html":{}}}],["auth/login",{"_index":1407,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["authguard",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguardservice",{"_index":305,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authmodule",{"_index":329,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2034,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":742,"title":{},"body":{"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["authroutingmodule",{"_index":333,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":199,"title":{"injectables/AuthService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.checkauthentication",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":944,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["automatically",{"_index":2049,"title":{},"body":{"index.html":{}}}],["available",{"_index":2087,"title":{},"body":{"modules.html":{}}}],["await",{"_index":129,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/UsersComponent.html":{}}}],["añade",{"_index":1024,"title":{},"body":{"injectables/FavService.html":{}}}],["añadir",{"_index":87,"title":{},"body":{"components/AddUserComponent.html":{}}}],["backdrop_path",{"_index":797,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["backend",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{}}}],["background",{"_index":638,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["bandera",{"_index":1750,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["bar",{"_index":108,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{}}}],["barra",{"_index":1368,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["basadas",{"_index":1285,"title":{},"body":{"injectables/FilmService.html":{}}}],["base64toarraybuffer",{"_index":709,"title":{},"body":{"injectables/CommonService.html":{}}}],["base64toarraybuffer(data",{"_index":717,"title":{},"body":{"injectables/CommonService.html":{}}}],["base64topdf",{"_index":710,"title":{},"body":{"injectables/CommonService.html":{}}}],["base64topdf(data",{"_index":719,"title":{},"body":{"injectables/CommonService.html":{}}}],["base_url",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1261,"title":{},"body":{"injectables/FilmService.html":{}}}],["bearer",{"_index":743,"title":{},"body":{"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["belongs_to_collection",{"_index":798,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["black",{"_index":1169,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["blend",{"_index":1183,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["blength",{"_index":791,"title":{},"body":{"injectables/CommonService.html":{}}}],["blob([bufferarray",{"_index":783,"title":{},"body":{"injectables/CommonService.html":{}}}],["blobstore",{"_index":782,"title":{},"body":{"injectables/CommonService.html":{}}}],["block",{"_index":923,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["blur_back",{"_index":1219,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["body",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404PageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["body.append('user",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["bold",{"_index":661,"title":{},"body":{"components/CardComponent.html":{}}}],["boolean",{"_index":258,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"interfaces/Genre.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["bootstrap",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["borde",{"_index":653,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["border",{"_index":635,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["borramos",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["borrar",{"_index":843,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["boton",{"_index":1533,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["botones",{"_index":1371,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["bottom",{"_index":1009,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["botón",{"_index":1398,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["box",{"_index":915,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["bright",{"_index":1237,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["bright_back",{"_index":1242,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["browse",{"_index":2085,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["bstring",{"_index":789,"title":{},"body":{"injectables/CommonService.html":{}}}],["bstring.length",{"_index":792,"title":{},"body":{"injectables/CommonService.html":{}}}],["budget",{"_index":799,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["bufferarray",{"_index":780,"title":{},"body":{"injectables/CommonService.html":{}}}],["build",{"_index":2058,"title":{},"body":{"index.html":{}}}],["buscador",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buscar",{"_index":1853,"title":{},"body":{"components/UsersComponent.html":{}}}],["buscarhabilitados",{"_index":1833,"title":{},"body":{"components/UsersComponent.html":{}}}],["buscarhabilitados(event",{"_index":1851,"title":{},"body":{"components/UsersComponent.html":{}}}],["busqueda",{"_index":1270,"title":{},"body":{"injectables/FilmService.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["busqueda.tolocalelowercase().trim",{"_index":1311,"title":{},"body":{"injectables/FilmService.html":{}}}],["busquedatrim",{"_index":1310,"title":{},"body":{"injectables/FilmService.html":{}}}],["button",{"_index":1367,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["button:hover",{"_index":1496,"title":{},"body":{"components/ListPageComponent.html":{}}}],["button[disabled",{"_index":1502,"title":{},"body":{"components/ListPageComponent.html":{}}}],["bytes",{"_index":793,"title":{},"body":{"injectables/CommonService.html":{}}}],["búsqueda",{"_index":1292,"title":{},"body":{"injectables/FilmService.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["cadena",{"_index":572,"title":{},"body":{"components/CardComponent.html":{},"pipes/FilmImgPipe.html":{}}}],["calificacion",{"_index":590,"title":{},"body":{"components/CardComponent.html":{}}}],["calificación",{"_index":568,"title":{},"body":{"components/CardComponent.html":{}}}],["cambia",{"_index":1882,"title":{},"body":{"components/UsersComponent.html":{}}}],["cambiamos",{"_index":1136,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["cambiar",{"_index":1127,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["cambios",{"_index":870,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["campo",{"_index":1573,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["campos",{"_index":1623,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["canactivate",{"_index":197,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["canactivate(route",{"_index":201,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["canactivatefn",{"_index":208,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivateguard",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cancelar",{"_index":152,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["canmatchfn",{"_index":209,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["canmatchguard",{"_index":1981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cant",{"_index":899,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["capabilities",{"_index":2077,"title":{},"body":{"index.html":{}}}],["card",{"_index":543,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["card'},{'name",{"_index":164,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["card.component.css",{"_index":544,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.html",{"_index":545,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":162,"title":{"components/CardComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["carga",{"_index":1342,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["cargar",{"_index":1331,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["caso",{"_index":68,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"pipes/FilmImgPipe.html":{},"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["catcherror",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilmService.html":{}}}],["catcherror(err",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["ccff00",{"_index":687,"title":{},"body":{"components/CardComponent.html":{}}}],["cee4fd",{"_index":1199,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["center",{"_index":911,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["centro",{"_index":1434,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["cercano",{"_index":602,"title":{},"body":{"components/CardComponent.html":{}}}],["cerrar",{"_index":90,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"miscellaneous/variables.html":{}}}],["cfd6e1",{"_index":1207,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["change",{"_index":2051,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":1100,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["check",{"_index":1534,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["check_usuarios.php",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkadminrole",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkauthentication",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkauthstatus",{"_index":1982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkemailvalidity",{"_index":1516,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkfav",{"_index":1096,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["checkpasstoken",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpasstoken(tokenpasswd",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["children",{"_index":346,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["choice",{"_index":2072,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":831,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["circle",{"_index":623,"title":{},"body":{"components/CardComponent.html":{}}}],["circle[data",{"_index":663,"title":{},"body":{"components/CardComponent.html":{}}}],["circlebottom",{"_index":546,"title":{},"body":{"components/CardComponent.html":{}}}],["circleleft",{"_index":547,"title":{},"body":{"components/CardComponent.html":{}}}],["circulo",{"_index":589,"title":{},"body":{"components/CardComponent.html":{}}}],["clase",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":114,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["clave",{"_index":1294,"title":{},"body":{"injectables/FilmService.html":{}}}],["cli",{"_index":2038,"title":{},"body":{"index.html":{}}}],["click",{"_index":1001,"title":{},"body":{"components/FavPageComponent.html":{}}}],["click)=\"loadmore()\">show",{"_index":1364,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["close",{"_index":110,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filmmodule",{"_index":1077,"title":{},"body":{"modules/FilmModule.html":{},"overview.html":{}}}],["cluster_filmmodule_declarations",{"_index":1079,"title":{},"body":{"modules/FilmModule.html":{},"overview.html":{}}}],["cluster_filmmodule_imports",{"_index":1078,"title":{},"body":{"modules/FilmModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1776,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1778,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1777,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1963,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_declarations",{"_index":1964,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":1965,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2053,"title":{},"body":{"index.html":{}}}],["col",{"_index":1478,"title":{},"body":{"components/ListPageComponent.html":{}}}],["color",{"_index":639,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["color=\"primary",{"_index":1767,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["column",{"_index":1006,"title":{},"body":{"components/FavPageComponent.html":{}}}],["command",{"_index":2073,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}}}],["commonmodule,materialmodule",{"_index":1969,"title":{},"body":{"modules/UsersModule.html":{}}}],["commonservice",{"_index":368,"title":{"injectables/CommonService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["commonservice.concat",{"_index":777,"title":{},"body":{"injectables/CommonService.html":{}}}],["commonservice.fill(d",{"_index":779,"title":{},"body":{"injectables/CommonService.html":{}}}],["commonservice.fill(r",{"_index":778,"title":{},"body":{"injectables/CommonService.html":{}}}],["commonservice.quotrem(n",{"_index":776,"title":{},"body":{"injectables/CommonService.html":{}}}],["como",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/FavService.html":{}}}],["completo",{"_index":1440,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["component",{"_index":0,"title":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component:favpagecomponent",{"_index":1255,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["component:filmpagecomponent",{"_index":1257,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["component:genrecomponent",{"_index":1253,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["component:listpagecomponent",{"_index":1251,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["component:searchpagecomponent",{"_index":1249,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["component_template",{"_index":158,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["componente",{"_index":84,"title":{},"body":{"components/AddUserComponent.html":{},"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/card/card.component",{"_index":1089,"title":{},"body":{"modules/FilmModule.html":{}}}],["comprobacion",{"_index":1536,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["comprobaciones",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["comprobar",{"_index":221,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{}}}],["comprueba",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["con",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"injectables/FavService.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["concat",{"_index":706,"title":{},"body":{"injectables/CommonService.html":{}}}],["configura",{"_index":1540,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["confirmadd",{"_index":33,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["confirmar",{"_index":54,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["console.error('el",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('error",{"_index":1764,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["console.error('la",{"_index":886,"title":{},"body":{"components/EditUserComponent.html":{}}}],["console.error(`error",{"_index":884,"title":{},"body":{"components/EditUserComponent.html":{}}}],["console.log",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('canactivate",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('canmatch",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('map",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('noimg",{"_index":1073,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["console.log(body",{"_index":1050,"title":{},"body":{"injectables/FavService.html":{}}}],["console.log(currentpage",{"_index":1359,"title":{},"body":{"components/GenreComponent.html":{}}}],["console.log(genre",{"_index":1347,"title":{},"body":{"components/GenreComponent.html":{}}}],["console.log(id",{"_index":1135,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["console.log(localstorage['nombre_publico",{"_index":1592,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.log(resolve",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(response",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/FilmPageComponent.html":{}}}],["console.log(this.cookieservice.get('token",{"_index":744,"title":{},"body":{"injectables/CommonService.html":{}}}],["console.log(this.filmarray",{"_index":1358,"title":{},"body":{"components/GenreComponent.html":{}}}],["console.log(this.filmlist",{"_index":1755,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["console.log(this.http.post(`${url_api}/${endpoint}.php",{"_index":1047,"title":{},"body":{"injectables/FavService.html":{}}}],["console.log(this.user",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(value",{"_index":1955,"title":{},"body":{"components/UsersComponent.html":{}}}],["console.log({route",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":127,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsuariosRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["constructor(auth",{"_index":198,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["constructor(authservice",{"_index":1404,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{}}}],["constructor(cookieservice",{"_index":715,"title":{},"body":{"injectables/CommonService.html":{}}}],["constructor(dialog",{"_index":1837,"title":{},"body":{"components/UsersComponent.html":{}}}],["constructor(dialogref",{"_index":38,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["constructor(filmservice",{"_index":551,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["constructor(http",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":591,"title":{},"body":{"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":115,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/DeleteUserComponent.html":{},"guards/NoLoginGuard.html":{}}}],["consulta",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["consultar",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["consultas",{"_index":1553,"title":{},"body":{"components/LoginPageComponent.html":{},"injectables/RolesService.html":{}}}],["container",{"_index":1004,"title":{},"body":{"components/FavPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{}}}],["conten",{"_index":907,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["conten__button",{"_index":945,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["conten__error",{"_index":942,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["conten__img",{"_index":912,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["conten__number",{"_index":930,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["contenedor",{"_index":1605,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["contenido",{"_index":1397,"title":{},"body":{"components/GenreComponent.html":{}}}],["content",{"_index":740,"title":{},"body":{"injectables/CommonService.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["contiene",{"_index":1461,"title":{},"body":{"components/ListPageComponent.html":{},"injectables/RolesService.html":{},"components/UsersComponent.html":{}}}],["contrario",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["contraseña",{"_index":1543,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["controlar",{"_index":1550,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["convertir",{"_index":604,"title":{},"body":{"components/CardComponent.html":{}}}],["cookie",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{}}}],["copia",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["correcta",{"_index":1848,"title":{},"body":{"components/UsersComponent.html":{}}}],["correspondientes",{"_index":1739,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["cover",{"_index":1161,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["coverage",{"_index":1972,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["creados",{"_index":849,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["crear",{"_index":1858,"title":{},"body":{"components/UsersComponent.html":{}}}],["createfilter",{"_index":1834,"title":{},"body":{"components/UsersComponent.html":{}}}],["cuadro",{"_index":869,"title":{},"body":{"components/EditUserComponent.html":{}}}],["cual",{"_index":1846,"title":{},"body":{"components/UsersComponent.html":{}}}],["cualquier",{"_index":348,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{}}}],["cuando",{"_index":865,"title":{},"body":{"components/EditUserComponent.html":{},"components/GenreComponent.html":{},"components/UsersComponent.html":{}}}],["cuenta",{"_index":753,"title":{},"body":{"injectables/CommonService.html":{}}}],["cumple",{"_index":1863,"title":{},"body":{"components/UsersComponent.html":{}}}],["currentgenre",{"_index":1321,"title":{},"body":{"components/GenreComponent.html":{}}}],["currentpage",{"_index":1322,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["currentpage).subscribe((films",{"_index":1355,"title":{},"body":{"components/GenreComponent.html":{}}}],["currentuser",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{}}}],["curretuser",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":620,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["custom",{"_index":1772,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["customizaciones",{"_index":1687,"title":{},"body":{"modules/MaterialModule.html":{}}}],["círculo",{"_index":630,"title":{},"body":{"components/CardComponent.html":{}}}],["d",{"_index":769,"title":{},"body":{"injectables/CommonService.html":{}}}],["data",{"_index":145,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Permises.html":{},"components/UsersComponent.html":{}}}],["datafilm",{"_index":554,"title":{"interfaces/DataFilm.html":{}},"body":{"components/CardComponent.html":{},"interfaces/DataFilm.html":{},"components/FavPageComponent.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{},"coverage.html":{}}}],["datasource",{"_index":1821,"title":{},"body":{"components/UsersComponent.html":{}}}],["date",{"_index":729,"title":{},"body":{"injectables/CommonService.html":{},"components/FilmPageComponent.html":{}}}],["date(inputdefecha).gettime",{"_index":758,"title":{},"body":{"injectables/CommonService.html":{}}}],["date(inputdefecha).gettimezoneoffset",{"_index":759,"title":{},"body":{"injectables/CommonService.html":{}}}],["date(new",{"_index":757,"title":{},"body":{"injectables/CommonService.html":{}}}],["dateadapter",{"_index":1631,"title":{},"body":{"modules/MaterialModule.html":{}}}],["datos",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["dd",{"_index":751,"title":{},"body":{"injectables/CommonService.html":{}}}],["de",{"_index":57,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["declarations",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoration",{"_index":950,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["decorators",{"_index":835,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["deep",{"_index":1617,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["default",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["definida",{"_index":577,"title":{},"body":{"components/CardComponent.html":{}}}],["definido",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["del",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["delay",{"_index":1215,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["delete",{"_index":166,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Permises.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["deletefav",{"_index":1017,"title":{},"body":{"injectables/FavService.html":{},"components/FilmPageComponent.html":{}}}],["deletefav(id_usuario",{"_index":1028,"title":{},"body":{"injectables/FavService.html":{}}}],["deleterol",{"_index":1697,"title":{},"body":{"injectables/RolesService.html":{}}}],["deleterol(idrol",{"_index":1705,"title":{},"body":{"injectables/RolesService.html":{}}}],["deleteuser",{"_index":822,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["deleteusercomponent",{"_index":165,"title":{"components/DeleteUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["deleteusuario",{"_index":1785,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["deleteusuario(this.user",{"_index":841,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["deleteusuario(user",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["dentro",{"_index":1614,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["dependencies",{"_index":271,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":1272,"title":{},"body":{"injectables/FilmService.html":{}}}],["deprecated",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["description",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["descubrimientos",{"_index":1286,"title":{},"body":{"injectables/FilmService.html":{}}}],["desde",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/UsersComponent.html":{}}}],["deseado",{"_index":1485,"title":{},"body":{"components/ListPageComponent.html":{}}}],["desencadena",{"_index":1856,"title":{},"body":{"components/UsersComponent.html":{}}}],["deshabilitados",{"_index":1507,"title":{},"body":{"components/ListPageComponent.html":{}}}],["deshabilitar",{"_index":852,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["desplazamiento",{"_index":1369,"title":{},"body":{"components/GenreComponent.html":{}}}],["después",{"_index":1126,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["detalles",{"_index":560,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{}}}],["dev",{"_index":2045,"title":{},"body":{"index.html":{}}}],["development",{"_index":2041,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["devolviendo",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["devuelve",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{}}}],["dialog",{"_index":1822,"title":{},"body":{"components/UsersComponent.html":{}}}],["dialogo",{"_index":832,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["dialogref",{"_index":27,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["dialogref.afterclosed().topromise",{"_index":1920,"title":{},"body":{"components/UsersComponent.html":{}}}],["direction",{"_index":1005,"title":{},"body":{"components/FavPageComponent.html":{}}}],["directive",{"_index":156,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":187,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2057,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2062,"title":{},"body":{"index.html":{}}}],["dirigir",{"_index":897,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["display",{"_index":913,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["displayedcolumns",{"_index":1823,"title":{},"body":{"components/UsersComponent.html":{}}}],["displaytable",{"_index":1824,"title":{},"body":{"components/UsersComponent.html":{}}}],["disponible",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404PageComponent.html":{}}}],["disponibles",{"_index":81,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/GenreComponent.html":{},"injectables/RolesService.html":{}}}],["dist",{"_index":2061,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":707,"title":{},"body":{"injectables/CommonService.html":{}}}],["dividecurrencyevenly",{"_index":711,"title":{},"body":{"injectables/CommonService.html":{}}}],["dividecurrencyevenly(numerator",{"_index":721,"title":{},"body":{"injectables/CommonService.html":{}}}],["divideevenly",{"_index":712,"title":{},"body":{"injectables/CommonService.html":{}}}],["divideevenly(numerator",{"_index":725,"title":{},"body":{"injectables/CommonService.html":{}}}],["divisor",{"_index":722,"title":{},"body":{"injectables/CommonService.html":{}}}],["diálogo",{"_index":91,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["documentation",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["dologin",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologin(data",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologout",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["donde",{"_index":76,"title":{},"body":{"components/AddUserComponent.html":{}}}],["duration",{"_index":141,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["dynamic",{"_index":2024,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":772,"title":{},"body":{"injectables/CommonService.html":{}}}],["e2e",{"_index":2070,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1493,"title":{},"body":{"components/ListPageComponent.html":{}}}],["edicion",{"_index":871,"title":{},"body":{"components/EditUserComponent.html":{}}}],["edición",{"_index":858,"title":{},"body":{"components/EditUserComponent.html":{}}}],["edit",{"_index":168,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Permises.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["edita",{"_index":1710,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["editar",{"_index":854,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["editrol",{"_index":1698,"title":{},"body":{"injectables/RolesService.html":{}}}],["editrol(rol",{"_index":1708,"title":{},"body":{"injectables/RolesService.html":{}}}],["editusercomponent",{"_index":167,"title":{"components/EditUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["editusuario",{"_index":889,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["editusuario(user",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["ejecuta",{"_index":574,"title":{},"body":{"components/CardComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["el",{"_index":55,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":155,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["elementos",{"_index":1488,"title":{},"body":{"components/ListPageComponent.html":{}}}],["elementref",{"_index":1545,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["elimina",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"injectables/FavService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["eliminación",{"_index":1868,"title":{},"body":{"components/UsersComponent.html":{}}}],["eliminar",{"_index":833,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/FilmPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["ellipsis",{"_index":615,"title":{},"body":{"components/CardComponent.html":{}}}],["email",{"_index":1535,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["emite",{"_index":1027,"title":{},"body":{"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["empty",{"_index":1003,"title":{},"body":{"components/FavPageComponent.html":{}}}],["emptystate",{"_index":997,"title":{},"body":{"components/FavPageComponent.html":{},"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["en",{"_index":67,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["encarga",{"_index":1459,"title":{},"body":{"components/ListPageComponent.html":{}}}],["encontradas",{"_index":1749,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["encuentra",{"_index":996,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FilmService.html":{}}}],["end",{"_index":1166,"title":{},"body":{"components/FilmPageComponent.html":{},"index.html":{}}}],["endpage",{"_index":1469,"title":{},"body":{"components/ListPageComponent.html":{}}}],["endpoint",{"_index":1045,"title":{},"body":{"injectables/FavService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enlace",{"_index":1624,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["entero",{"_index":600,"title":{},"body":{"components/CardComponent.html":{}}}],["entrada",{"_index":587,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["entre",{"_index":1380,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["enviando",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment",{"_index":1301,"title":{},"body":{"injectables/FilmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.base_url",{"_index":1299,"title":{},"body":{"injectables/FilmService.html":{}}}],["environment.movies_api_headers",{"_index":1313,"title":{},"body":{"injectables/FilmService.html":{}}}],["environment.token",{"_index":1298,"title":{},"body":{"injectables/FilmService.html":{}}}],["environments/environment",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["envuelvan",{"_index":1374,"title":{},"body":{"components/GenreComponent.html":{}}}],["envía",{"_index":859,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{}}}],["err",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":69,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["error('method",{"_index":594,"title":{},"body":{"components/CardComponent.html":{}}}],["error404",{"_index":170,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["error404pagecomponent",{"_index":169,"title":{"components/Error404PageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"modules/SharedModule.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["es",{"_index":62,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["esa",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["esas",{"_index":974,"title":{},"body":{"components/FavPageComponent.html":{}}}],["ese",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["esos",{"_index":1554,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["espaciado",{"_index":1431,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["espacio",{"_index":1379,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["especificados",{"_index":1865,"title":{},"body":{"components/UsersComponent.html":{}}}],["específica",{"_index":1457,"title":{},"body":{"components/ListPageComponent.html":{}}}],["específico",{"_index":1327,"title":{},"body":{"components/GenreComponent.html":{}}}],["espera",{"_index":1571,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["est",{"_index":326,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{}}}],["esta",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["establecer",{"_index":1590,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["estado",{"_index":234,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/FilmPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/UsersComponent.html":{}}}],["estan",{"_index":1349,"title":{},"body":{"components/GenreComponent.html":{}}}],["este",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404PageComponent.html":{},"components/UsersComponent.html":{}}}],["estilo",{"_index":652,"title":{},"body":{"components/CardComponent.html":{}}}],["estilos",{"_index":1604,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["esto",{"_index":846,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["estructura",{"_index":1544,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["evalúa",{"_index":1862,"title":{},"body":{"components/UsersComponent.html":{}}}],["event",{"_index":1854,"title":{},"body":{"components/UsersComponent.html":{}}}],["event.value",{"_index":1952,"title":{},"body":{"components/UsersComponent.html":{}}}],["eventemitter",{"_index":1523,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["evento",{"_index":1855,"title":{},"body":{"components/UsersComponent.html":{}}}],["evita",{"_index":1373,"title":{},"body":{"components/GenreComponent.html":{}}}],["exceden",{"_index":1372,"title":{},"body":{"components/GenreComponent.html":{}}}],["execute",{"_index":2067,"title":{},"body":{"index.html":{}}}],["existente",{"_index":867,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["export",{"_index":113,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["exports",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"overview.html":{}}}],["eyjhbgcioijiuzi1nij9.eyjhdwqioii5mtdknzk2ndvhnmzjoguymguzngjiytljzwi0mtkyzcisinn1yii6ijy1zdbim2q0mzazyzg1mde4oduyytu0osisinnjb3blcyi6wyjhcglfcmvhzcjdlcj2zxjzaw9uijoxfq.tcd0ktb6wlgwgwd1fbnrtjq3tbnidrtfuuhjnqj8hpa",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f1f1f1",{"_index":1608,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["f1f1f100",{"_index":1385,"title":{},"body":{"components/GenreComponent.html":{}}}],["fallo",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":149,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["falso",{"_index":883,"title":{},"body":{"components/EditUserComponent.html":{}}}],["family",{"_index":932,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["fav",{"_index":173,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["fav.id_pelicula.tostring",{"_index":1132,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favlist",{"_index":1014,"title":{},"body":{"injectables/FavService.html":{}}}],["favmovies",{"_index":1130,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favmovies.includes(id_pelicula?.tostring",{"_index":1133,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favorita",{"_index":1026,"title":{},"body":{"injectables/FavService.html":{}}}],["favoritas",{"_index":968,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{}}}],["favorite",{"_index":1153,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favorite_border",{"_index":1425,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["favorites",{"_index":1140,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favorito",{"_index":1111,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["favoritos",{"_index":1025,"title":{},"body":{"injectables/FavService.html":{},"components/FilmPageComponent.html":{}}}],["favpagecomponent",{"_index":172,"title":{"components/FavPageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favs",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LayoutPageComponent-1.html":{}}}],["favservice",{"_index":964,"title":{"injectables/FavService.html":{}},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"coverage.html":{}}}],["fb",{"_index":1520,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["fecha",{"_index":747,"title":{},"body":{"injectables/CommonService.html":{}}}],["fechaformateada",{"_index":713,"title":{},"body":{"injectables/CommonService.html":{}}}],["fechaformateada(inputdefecha",{"_index":728,"title":{},"body":{"injectables/CommonService.html":{}}}],["ff0000",{"_index":665,"title":{},"body":{"components/CardComponent.html":{}}}],["ff3300",{"_index":669,"title":{},"body":{"components/CardComponent.html":{}}}],["ff6600",{"_index":672,"title":{},"body":{"components/CardComponent.html":{}}}],["ff9900",{"_index":676,"title":{},"body":{"components/CardComponent.html":{}}}],["ffcc00",{"_index":680,"title":{},"body":{"components/CardComponent.html":{}}}],["fff",{"_index":1191,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["ffff00",{"_index":684,"title":{},"body":{"components/CardComponent.html":{}}}],["ffffff",{"_index":662,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/GenreComponent.html":{}}}],["field",{"_index":1619,"title":{},"body":{"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"components/SearchPageComponent.html":{}}}],["fijar",{"_index":1435,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["filas",{"_index":1486,"title":{},"body":{"components/ListPageComponent.html":{}}}],["filas.habilitado",{"_index":1957,"title":{},"body":{"components/UsersComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{}}}],["files",{"_index":2052,"title":{},"body":{"index.html":{}}}],["fill",{"_index":644,"title":{},"body":{"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/LoginPageComponent.html":{}}}],["film",{"_index":163,"title":{"interfaces/Film.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Page.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["film.backdrop_path",{"_index":1244,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["film.genres[i].name",{"_index":1150,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["film.original_title",{"_index":609,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["film.overview",{"_index":1151,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["film.release_date",{"_index":1146,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["film.release_date.slice(0,4",{"_index":610,"title":{},"body":{"components/CardComponent.html":{}}}],["film.runtime",{"_index":1148,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["film.service",{"_index":1044,"title":{},"body":{"injectables/FavService.html":{}}}],["film.tagline",{"_index":1147,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["filmapp",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutPageComponent-1.html":{},"index.html":{}}}],["filmarray",{"_index":960,"title":{},"body":{"components/FavPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["filmimg",{"_index":1058,"title":{},"body":{"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{}}}],["filmimgpipe",{"_index":584,"title":{"pipes/FilmImgPipe.html":{}},"body":{"components/CardComponent.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"coverage.html":{},"overview.html":{}}}],["filmlist",{"_index":1733,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["filmlistids",{"_index":961,"title":{},"body":{"components/FavPageComponent.html":{}}}],["filmmodule",{"_index":1076,"title":{"modules/FilmModule.html":{}},"body":{"modules/FilmModule.html":{},"modules.html":{},"overview.html":{}}}],["filmpagecomponent",{"_index":174,"title":{"components/FilmPageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filmroutingmodule",{"_index":1080,"title":{"modules/FilmRoutingModule.html":{}},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["films",{"_index":998,"title":{},"body":{"components/FavPageComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["films.results",{"_index":1357,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["films.total_pages",{"_index":1465,"title":{},"body":{"components/ListPageComponent.html":{}}}],["filmservice",{"_index":552,"title":{"injectables/FilmService.html":{}},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["filter",{"_index":1926,"title":{},"body":{"components/UsersComponent.html":{}}}],["filterfunction",{"_index":1927,"title":{},"body":{"components/UsersComponent.html":{}}}],["filtervalues",{"_index":1825,"title":{},"body":{"components/UsersComponent.html":{}}}],["filtro",{"_index":1859,"title":{},"body":{"components/UsersComponent.html":{}}}],["filtros",{"_index":1878,"title":{},"body":{"components/UsersComponent.html":{}}}],["final",{"_index":1064,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["find",{"_index":900,"title":{},"body":{"components/Error404PageComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["finder",{"_index":1746,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["finder.trim",{"_index":1757,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["first",{"_index":2075,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":908,"title":{},"body":{"components/Error404PageComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["flash_on",{"_index":1421,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["flex",{"_index":918,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["flexbox",{"_index":917,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["float",{"_index":1201,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["fondo",{"_index":643,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["font",{"_index":656,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["footer",{"_index":1429,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["forgot",{"_index":1603,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["form",{"_index":1618,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["formato",{"_index":748,"title":{},"body":{"injectables/CommonService.html":{}}}],["formbuilder",{"_index":1521,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formcontrol",{"_index":101,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["formcontrol(null",{"_index":119,"title":{},"body":{"components/AddUserComponent.html":{}}}],["formcontrol(number(this.user.habilitado",{"_index":880,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formcontrol(this.user.id_rol",{"_index":881,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formcontrol(this.user.id_usuario",{"_index":876,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formcontrol(this.user.nombre_publico",{"_index":878,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formcontrol(this.user.observaciones",{"_index":882,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formcontrol(this.user.usuario",{"_index":877,"title":{},"body":{"components/EditUserComponent.html":{}}}],["formdata",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["formgroup",{"_index":97,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["formsmodule",{"_index":1092,"title":{},"body":{"modules/FilmModule.html":{},"modules/MaterialModule.html":{}}}],["formulario",{"_index":61,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"miscellaneous/variables.html":{}}}],["fuente",{"_index":1881,"title":{},"body":{"components/UsersComponent.html":{}}}],["full",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["funcion",{"_index":74,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["función",{"_index":1526,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["further",{"_index":2078,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1377,"title":{},"body":{"components/GenreComponent.html":{}}}],["generar",{"_index":1450,"title":{},"body":{"components/ListPageComponent.html":{}}}],["generate",{"_index":2055,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2036,"title":{},"body":{"index.html":{}}}],["generatenewpass(data",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatepagenumbers",{"_index":1445,"title":{},"body":{"components/ListPageComponent.html":{}}}],["genero",{"_index":1329,"title":{},"body":{"components/GenreComponent.html":{}}}],["generos",{"_index":1343,"title":{},"body":{"components/GenreComponent.html":{}}}],["genre",{"_index":816,"title":{"interfaces/Genre.html":{},"interfaces/Genre-1.html":{}},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"interfaces/Page.html":{},"coverage.html":{},"index.html":{}}}],["genre'},{'name",{"_index":176,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["genre.component.css",{"_index":1319,"title":{},"body":{"components/GenreComponent.html":{}}}],["genre.component.html",{"_index":1320,"title":{},"body":{"components/GenreComponent.html":{}}}],["genre.genres",{"_index":1346,"title":{},"body":{"components/GenreComponent.html":{}}}],["genre.name",{"_index":1363,"title":{},"body":{"components/GenreComponent.html":{}}}],["genrecomponent",{"_index":175,"title":{"components/GenreComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genreid",{"_index":1328,"title":{},"body":{"components/GenreComponent.html":{}}}],["genres",{"_index":800,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"interfaces/Genre.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Page.html":{}}}],["gestiona",{"_index":1530,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["getallroles",{"_index":887,"title":{},"body":{"components/EditUserComponent.html":{},"injectables/RolesService.html":{}}}],["getallusuarios",{"_index":1786,"title":{},"body":{"injectables/UserService.html":{}}}],["getbygenre",{"_index":1262,"title":{},"body":{"injectables/FilmService.html":{},"components/GenreComponent.html":{}}}],["getbygenre(genreid",{"_index":1325,"title":{},"body":{"components/GenreComponent.html":{}}}],["getbygenre(idgenero",{"_index":1268,"title":{},"body":{"injectables/FilmService.html":{}}}],["getcurrentuser",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrenuser",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdatafilm",{"_index":962,"title":{},"body":{"components/FavPageComponent.html":{}}}],["getfavs",{"_index":1018,"title":{},"body":{"injectables/FavService.html":{}}}],["getfavs(id_usuario",{"_index":1030,"title":{},"body":{"injectables/FavService.html":{}}}],["getfilm",{"_index":1097,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["getfilm(id",{"_index":1106,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["getfilmbyid",{"_index":548,"title":{},"body":{"components/CardComponent.html":{},"injectables/FilmService.html":{}}}],["getfilmbyid(id",{"_index":556,"title":{},"body":{"components/CardComponent.html":{},"injectables/FilmService.html":{}}}],["getfilms",{"_index":1263,"title":{},"body":{"injectables/FilmService.html":{}}}],["getfilms(page",{"_index":1283,"title":{},"body":{"injectables/FilmService.html":{}}}],["getgenres",{"_index":1264,"title":{},"body":{"injectables/FilmService.html":{}}}],["getheaders",{"_index":714,"title":{},"body":{"injectables/CommonService.html":{}}}],["getidsfavoritas",{"_index":963,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{}}}],["getidsfavoritas(id_usuario",{"_index":1033,"title":{},"body":{"injectables/FavService.html":{}}}],["getmoviesbyquery",{"_index":1265,"title":{},"body":{"injectables/FilmService.html":{}}}],["getmoviesbyquery(busqueda",{"_index":1290,"title":{},"body":{"injectables/FilmService.html":{}}}],["getpercentagerating",{"_index":549,"title":{},"body":{"components/CardComponent.html":{}}}],["getpercentagerating(film.vote_average",{"_index":607,"title":{},"body":{"components/CardComponent.html":{}}}],["getpercentagerating(voteaverage",{"_index":565,"title":{},"body":{"components/CardComponent.html":{}}}],["getratedfilms",{"_index":1266,"title":{},"body":{"injectables/FilmService.html":{}}}],["getratedfilms(page",{"_index":1295,"title":{},"body":{"injectables/FilmService.html":{}}}],["getroles",{"_index":34,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["getting",{"_index":2032,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["getusers",{"_index":1835,"title":{},"body":{"components/UsersComponent.html":{}}}],["gill",{"_index":933,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["go",{"_index":2080,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":1225,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["graph",{"_index":2086,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":1236,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["guard",{"_index":191,"title":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["guardar",{"_index":151,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["guards",{"_index":193,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"overview.html":{}}}],["género",{"_index":1277,"title":{},"body":{"injectables/FilmService.html":{},"components/GenreComponent.html":{}}}],["géneros",{"_index":1289,"title":{},"body":{"injectables/FilmService.html":{},"components/GenreComponent.html":{}}}],["h1",{"_index":1190,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["h2",{"_index":1622,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["h3",{"_index":1245,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["h4",{"_index":1192,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["habilitado",{"_index":879,"title":{},"body":{"components/EditUserComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["hara",{"_index":1849,"title":{},"body":{"components/UsersComponent.html":{}}}],["hay",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":1158,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["headers",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":634,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["help",{"_index":2079,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1171,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["here",{"_index":1002,"title":{},"body":{"components/FavPageComponent.html":{}}}],["hidden",{"_index":613,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["homepage",{"_index":801,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["horarias",{"_index":756,"title":{},"body":{"injectables/CommonService.html":{}}}],["horizontal",{"_index":1370,"title":{},"body":{"components/GenreComponent.html":{}}}],["hover",{"_index":1180,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["html",{"_index":154,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{}}}],["http://143.47.54.181/dev/app.radfpd.es",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2047,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":737,"title":{},"body":{"injectables/CommonService.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["https://api.themoviedb.org/3",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.themoviedb.org/3/search/movie",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://image.tmdb.org/t/p/w500",{"_index":1075,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["id",{"_index":564,"title":{},"body":{"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Page.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["id_film",{"_index":1095,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["id_pelicula",{"_index":990,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{}}}],["id_pelicula).topromise",{"_index":1138,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["id_rol",{"_index":123,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{}}}],["id_rol=1",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["id_usuario",{"_index":875,"title":{},"body":{"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["identifier",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["idfilmlist",{"_index":1015,"title":{},"body":{"injectables/FavService.html":{}}}],["idfilter",{"_index":1826,"title":{},"body":{"components/UsersComponent.html":{}}}],["idgenero",{"_index":1273,"title":{},"body":{"injectables/FilmService.html":{}}}],["idrol",{"_index":1707,"title":{},"body":{"injectables/RolesService.html":{}}}],["ids",{"_index":970,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{}}}],["iduser",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["id}.pdf",{"_index":788,"title":{},"body":{"injectables/CommonService.html":{}}}],["if(!this.user",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(isauthenticated",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(posterpath?.endswith(\"null",{"_index":1072,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["ignore",{"_index":786,"title":{},"body":{"injectables/CommonService.html":{}}}],["image",{"_index":1159,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["image.jpg",{"_index":1066,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["imagen",{"_index":1068,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["imdb",{"_index":1599,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["imdb_id",{"_index":802,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["img",{"_index":619,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["img.pipe",{"_index":586,"title":{},"body":{"components/CardComponent.html":{},"modules/FilmModule.html":{}}}],["img.pipe.ts",{"_index":1057,"title":{},"body":{"pipes/FilmImgPipe.html":{},"coverage.html":{}}}],["img.pipe.ts:18",{"_index":1060,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["implemented",{"_index":595,"title":{},"body":{"components/CardComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["import",{"_index":99,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["import('./auth/auth.module').then(m=>m.authmodule",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./film/film.module').then(m=>m.filmmodule",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./users/users.module').then(m=>m.usersmodule",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1228,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["imports",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["impostor",{"_index":1600,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["incorrectas",{"_index":1597,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["indexfilter",{"_index":1728,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["indexof(searchterms.id_usuario.tolowercase",{"_index":1932,"title":{},"body":{"components/UsersComponent.html":{}}}],["indexof(searchterms.nombre_publico.tolowercase",{"_index":1937,"title":{},"body":{"components/UsersComponent.html":{}}}],["indexof(searchterms.usuario.tolowercase",{"_index":1935,"title":{},"body":{"components/UsersComponent.html":{}}}],["indica",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{}}}],["indicar",{"_index":1113,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["inferior",{"_index":1437,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["infinite",{"_index":928,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["info_section",{"_index":1182,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["ingresaremos",{"_index":1847,"title":{},"body":{"components/UsersComponent.html":{}}}],["inhabilitado",{"_index":1596,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inicializa",{"_index":866,"title":{},"body":{"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{}}}],["inicialización",{"_index":874,"title":{},"body":{"components/EditUserComponent.html":{}}}],["inicializamos",{"_index":86,"title":{},"body":{"components/AddUserComponent.html":{}}}],["inicializar",{"_index":575,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["iniciamos",{"_index":83,"title":{},"body":{"components/AddUserComponent.html":{}}}],["iniciar",{"_index":1527,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inicio",{"_index":350,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["inject",{"_index":216,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"guards/NoLoginGuard.html":{},"index.html":{}}}],["inject(authservice",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(mat_dialog_data",{"_index":836,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["inject(router",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":215,"title":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1195,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["input",{"_index":581,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["inputdefecha",{"_index":731,"title":{},"body":{"injectables/CommonService.html":{}}}],["inputs",{"_index":550,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["insert",{"_index":56,"title":{},"body":{"components/AddUserComponent.html":{}}}],["inserta",{"_index":1038,"title":{},"body":{"injectables/FavService.html":{}}}],["insertarfav",{"_index":1019,"title":{},"body":{"injectables/FavService.html":{}}}],["insertarfav(id_usuario",{"_index":1036,"title":{},"body":{"injectables/FavService.html":{}}}],["interface",{"_index":249,"title":{"interfaces/ApiResponse.html":{},"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":251,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/film",{"_index":582,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["interfaces/genre",{"_index":1302,"title":{},"body":{"injectables/FilmService.html":{},"components/ListPageComponent.html":{}}}],["interfaces/user.interface",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaz",{"_index":1873,"title":{},"body":{"components/UsersComponent.html":{}}}],["interno",{"_index":1432,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["introducido",{"_index":1537,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["invalid_form",{"_index":111,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["isauthenticated(url",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloged",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["islogged",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuseradmin",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["italic",{"_index":1246,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["item.icon",{"_index":1419,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["item.id_pelicula",{"_index":991,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{}}}],["item.label",{"_index":1420,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["items",{"_index":921,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["izquierda",{"_index":1439,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["json.parse(filter",{"_index":1929,"title":{},"body":{"components/UsersComponent.html":{}}}],["json.stringify",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{}}}],["json.stringify(data",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(formulariocorreo",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(rol",{"_index":1721,"title":{},"body":{"injectables/RolesService.html":{}}}],["json.stringify(this.filtervalues",{"_index":1945,"title":{},"body":{"components/UsersComponent.html":{}}}],["json.stringify(user",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":920,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["karma",{"_index":2069,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":952,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["l",{"_index":1394,"title":{},"body":{"components/GenreComponent.html":{}}}],["la",{"_index":231,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["lanza",{"_index":1867,"title":{},"body":{"components/UsersComponent.html":{}}}],["lanzara",{"_index":1843,"title":{},"body":{"components/UsersComponent.html":{}}}],["las",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{}}}],["lateral",{"_index":1384,"title":{},"body":{"components/GenreComponent.html":{}}}],["layout",{"_index":178,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["layoutpagecomponent",{"_index":177,"title":{"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["le",{"_index":1274,"title":{},"body":{"injectables/FilmService.html":{}}}],["left",{"_index":646,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["legend",{"_index":153,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"modules/SharedModule.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1473,"title":{},"body":{"components/ListPageComponent.html":{}}}],["lg",{"_index":1482,"title":{},"body":{"components/ListPageComponent.html":{}}}],["li",{"_index":1212,"title":{},"body":{"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["li.active",{"_index":1499,"title":{},"body":{"components/ListPageComponent.html":{}}}],["linear",{"_index":927,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["lista",{"_index":863,"title":{},"body":{"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/ListPageComponent.html":{},"components/UsersComponent.html":{}}}],["listpagecomponent",{"_index":179,"title":{"components/ListPageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["llama",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/UsersComponent.html":{}}}],["llamada",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{}}}],["llamamos",{"_index":1747,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["llamando",{"_index":1740,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["lo",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{},"components/LayoutPageComponent-1.html":{}}}],["loadchildren",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadfilms",{"_index":1736,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["loadminus",{"_index":1446,"title":{},"body":{"components/ListPageComponent.html":{}}}],["loadmore",{"_index":1323,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["loadpage",{"_index":1447,"title":{},"body":{"components/ListPageComponent.html":{}}}],["loadpage(page",{"_index":1455,"title":{},"body":{"components/ListPageComponent.html":{}}}],["local",{"_index":985,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/UserService.html":{}}}],["localhost:4200/auth",{"_index":345,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["localstorage",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["localstorage.clear",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(\"id_rol",{"_index":1414,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["localstorage.getitem(\"nombre_publico",{"_index":1412,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["localstorage.getitem('id_usuario",{"_index":983,"title":{},"body":{"components/FavPageComponent.html":{}}}],["localstorage.getitem('token",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{}}}],["localstorage.getitem('usuario",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('id_rol",{"_index":1586,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["localstorage.setitem('id_usuario",{"_index":1588,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["localstorage.setitem('nombre_publico",{"_index":1580,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["localstorage.setitem('token",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["localstorage.setitem('ultimaopcion",{"_index":1582,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["localstorage.setitem('ultimogrupo",{"_index":1584,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["localstorage.setitem('usuario",{"_index":1578,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["locandina",{"_index":1200,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["logado",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["logeado",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":182,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["loginform",{"_index":1513,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginpagecomponent",{"_index":181,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{}}}],["logueado",{"_index":1691,"title":{},"body":{"guards/NoLoginGuard.html":{}}}],["los",{"_index":80,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["línea",{"_index":1376,"title":{},"body":{"components/GenreComponent.html":{}}}],["maneja",{"_index":861,"title":{},"body":{"components/EditUserComponent.html":{}}}],["manejar",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{}}}],["map",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{}}}],["map(isauthenticated",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(user",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(user2",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["margen",{"_index":1484,"title":{},"body":{"components/ListPageComponent.html":{}}}],["margin",{"_index":904,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["mario",{"_index":1426,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"index.html":{}}}],["mas",{"_index":1332,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["mat",{"_index":611,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["mat_date_locale",{"_index":1632,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mat_dialog_data",{"_index":838,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["matautocompletemodule",{"_index":1659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1649,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1651,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":190,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":1680,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":1657,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":1838,"title":{},"body":{"components/UsersComponent.html":{}}}],["matdialogmodule",{"_index":1639,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":39,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["material/material.module",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/UsersModule.html":{}}}],["materialmodule",{"_index":334,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/MaterialModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["matformfieldmodule",{"_index":1640,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.floor(n",{"_index":770,"title":{},"body":{"injectables/CommonService.html":{}}}],["math.floor(this.pagestoshow",{"_index":1468,"title":{},"body":{"components/ListPageComponent.html":{}}}],["math.max(1",{"_index":1467,"title":{},"body":{"components/ListPageComponent.html":{}}}],["math.min(this.totalpages",{"_index":1470,"title":{},"body":{"components/ListPageComponent.html":{}}}],["math.pow(10",{"_index":773,"title":{},"body":{"injectables/CommonService.html":{}}}],["math.round(voteaverage",{"_index":597,"title":{},"body":{"components/CardComponent.html":{}}}],["maticonmodule",{"_index":1645,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1642,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1630,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginator",{"_index":1892,"title":{},"body":{"components/UsersComponent.html":{}}}],["matpaginatorcustom",{"_index":1663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatorintl",{"_index":1637,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":1636,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1656,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1653,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":1678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1647,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":43,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["matsnackbarmodule",{"_index":1644,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsort",{"_index":1897,"title":{},"body":{"components/UsersComponent.html":{}}}],["matsortmodule",{"_index":1666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":1674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabledatasource",{"_index":1883,"title":{},"body":{"components/UsersComponent.html":{}}}],["mattablemodule",{"_index":1634,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":1155,"title":{},"body":{"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["md",{"_index":1481,"title":{},"body":{"components/ListPageComponent.html":{}}}],["media",{"_index":1221,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["mejor",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilmService.html":{}}}],["mensaje",{"_index":71,"title":{},"body":{"components/AddUserComponent.html":{}}}],["menu",{"_index":1418,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["message",{"_index":254,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/Permises.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["metodo",{"_index":1023,"title":{},"body":{"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/UsersComponent.html":{}}}],["min",{"_index":1149,"title":{},"body":{"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["minpartsize",{"_index":726,"title":{},"body":{"injectables/CommonService.html":{}}}],["minutes",{"_index":1194,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["miscellaneous",{"_index":2090,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["misma",{"_index":1351,"title":{},"body":{"components/GenreComponent.html":{}}}],["mismo",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/GenreComponent.html":{}}}],["mm",{"_index":750,"title":{},"body":{"injectables/CommonService.html":{}}}],["mode",{"_index":1184,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["mode_edit",{"_index":1961,"title":{},"body":{"components/UsersComponent.html":{}}}],["modifica",{"_index":1065,"title":{},"body":{"pipes/FilmImgPipe.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["modificada",{"_index":1070,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["module",{"_index":268,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":270,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1000,"title":{},"body":{"components/FavPageComponent.html":{}}}],["momento",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["montserrat",{"_index":1170,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["more",{"_index":1365,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["mostrando",{"_index":1350,"title":{},"body":{"components/GenreComponent.html":{}}}],["mostrar",{"_index":826,"title":{},"body":{"components/DeleteUserComponent.html":{},"pipes/FilmImgPipe.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["mouse",{"_index":1392,"title":{},"body":{"components/GenreComponent.html":{}}}],["movie",{"_index":1154,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["movie_card",{"_index":1175,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["movie_desc",{"_index":1206,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["movie_header",{"_index":1187,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["movie_social",{"_index":1208,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["movies_api_headers",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":916,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["muestra",{"_index":70,"title":{},"body":{"components/AddUserComponent.html":{}}}],["multiply",{"_index":1185,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["más",{"_index":601,"title":{},"body":{"components/CardComponent.html":{}}}],["método",{"_index":52,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{}}}],["mínimo",{"_index":1381,"title":{},"body":{"components/GenreComponent.html":{}}}],["n",{"_index":763,"title":{},"body":{"injectables/CommonService.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["navegación",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{}}}],["navigate",{"_index":2046,"title":{},"body":{"index.html":{}}}],["necesario",{"_index":1382,"title":{},"body":{"components/GenreComponent.html":{}}}],["necesidades",{"_index":633,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":2074,"title":{},"body":{"index.html":{}}}],["new",{"_index":118,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":1477,"title":{},"body":{"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["ng",{"_index":1616,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AddUserComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["ngx",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"dependencies.html":{}}}],["nologinguard",{"_index":309,"title":{"guards/NoLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/NoLoginGuard.html":{},"coverage.html":{}}}],["nombre",{"_index":1410,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"injectables/RolesService.html":{}}}],["nombre_publico",{"_index":124,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["nombre_usuario",{"_index":1401,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["nombrefilter",{"_index":1827,"title":{},"body":{"components/UsersComponent.html":{}}}],["none",{"_index":951,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["nota",{"_index":666,"title":{},"body":{"components/CardComponent.html":{}}}],["nowrap",{"_index":618,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{}}}],["nuestro",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["nueva",{"_index":1844,"title":{},"body":{"components/UsersComponent.html":{}}}],["nuevo",{"_index":1704,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["null",{"_index":259,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"interfaces/DataFilm.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"interfaces/Genre.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"injectables/RolesService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["number",{"_index":557,"title":{},"body":{"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"interfaces/Page.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{}}}],["number(event.value",{"_index":1953,"title":{},"body":{"components/UsersComponent.html":{}}}],["number(idrol",{"_index":1726,"title":{},"body":{"injectables/RolesService.html":{}}}],["number(iduser",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["number(rol.id_rol",{"_index":1725,"title":{},"body":{"injectables/RolesService.html":{}}}],["number(user.id_usuario",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["numerator",{"_index":724,"title":{},"body":{"injectables/CommonService.html":{}}}],["numero",{"_index":1341,"title":{},"body":{"components/GenreComponent.html":{}}}],["número",{"_index":1278,"title":{},"body":{"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["números",{"_index":1451,"title":{},"body":{"components/ListPageComponent.html":{}}}],["o",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{}}}],["object",{"_index":1888,"title":{},"body":{"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":1282,"title":{},"body":{"injectables/FilmService.html":{}}}],["objetos",{"_index":1280,"title":{},"body":{"injectables/FilmService.html":{}}}],["observable",{"_index":212,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observaciones",{"_index":125,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Rol.html":{},"interfaces/User.html":{}}}],["obtener",{"_index":559,"title":{},"body":{"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["obtenidos",{"_index":1874,"title":{},"body":{"components/UsersComponent.html":{}}}],["obtiene",{"_index":78,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["obtienen",{"_index":1032,"title":{},"body":{"injectables/FavService.html":{}}}],["ocultar",{"_index":1752,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["ocurri",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(false",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(structuredclone(this.user",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(undefined",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilmService.html":{}}}],["ok",{"_index":144,"title":{},"body":{"components/AddUserComponent.html":{},"interfaces/ApiResponse.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Permises.html":{}}}],["olvidaste",{"_index":1625,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["onchanges",{"_index":1836,"title":{},"body":{"components/UsersComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddUserComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["onlogout",{"_index":1402,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["onnoclick",{"_index":36,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["opacidad",{"_index":1505,"title":{},"body":{"components/ListPageComponent.html":{}}}],["opacity",{"_index":1503,"title":{},"body":{"components/ListPageComponent.html":{}}}],["opcional",{"_index":1395,"title":{},"body":{"components/GenreComponent.html":{},"injectables/UserService.html":{}}}],["operación",{"_index":828,"title":{},"body":{"components/DeleteUserComponent.html":{},"injectables/RolesService.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["original",{"_index":1071,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["original_language",{"_index":803,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["original_title",{"_index":804,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["otra",{"_index":1067,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["otro",{"_index":850,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["out",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/Error404PageComponent.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1548,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["outputs",{"_index":1518,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["overflow",{"_index":612,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["overlay",{"_index":1839,"title":{},"body":{"components/UsersComponent.html":{}}}],["overview",{"_index":805,"title":{"overview.html":{}},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":771,"title":{},"body":{"injectables/CommonService.html":{},"components/FavPageComponent.html":{}}}],["pack",{"_index":919,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["package",{"_index":2017,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":905,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page",{"_index":818,"title":{"interfaces/Page.html":{}},"body":{"interfaces/DataFilm.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/Page.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"coverage.html":{},"index.html":{}}}],["page'},{'name",{"_index":171,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["page.component",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["page.component.css",{"_index":892,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.html",{"_index":893,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts",{"_index":891,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1748,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:13",{"_index":1448,"title":{},"body":{"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:14",{"_index":1408,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:15",{"_index":976,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["page.component.ts:16",{"_index":977,"title":{},"body":{"components/FavPageComponent.html":{},"components/ListPageComponent.html":{}}}],["page.component.ts:17",{"_index":965,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:18",{"_index":1101,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page.component.ts:19",{"_index":1737,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:22",{"_index":1524,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:23",{"_index":975,"title":{},"body":{"components/FavPageComponent.html":{}}}],["page.component.ts:24",{"_index":1458,"title":{},"body":{"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":1547,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:26",{"_index":1522,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:27",{"_index":1108,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["page.component.ts:30",{"_index":972,"title":{},"body":{"components/FavPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["page.component.ts:34",{"_index":1449,"title":{},"body":{"components/ListPageComponent.html":{}}}],["page.component.ts:36",{"_index":1409,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["page.component.ts:38",{"_index":1744,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:40",{"_index":966,"title":{},"body":{"components/FavPageComponent.html":{}}}],["page.component.ts:41",{"_index":1539,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:43",{"_index":1454,"title":{},"body":{"components/ListPageComponent.html":{}}}],["page.component.ts:44",{"_index":1405,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["page.component.ts:45",{"_index":1109,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page.component.ts:49",{"_index":1541,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:51",{"_index":1452,"title":{},"body":{"components/ListPageComponent.html":{}}}],["page.component.ts:54",{"_index":1738,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:57",{"_index":1103,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page.component.ts:61",{"_index":1531,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:62",{"_index":1456,"title":{},"body":{"components/ListPageComponent.html":{}}}],["page.component.ts:71",{"_index":1107,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page.component.ts:76",{"_index":1743,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["page.component.ts:77",{"_index":1525,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:79",{"_index":1105,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page.component.ts:96",{"_index":1102,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["page/error404",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/Error404PageComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["page/fav",{"_index":959,"title":{},"body":{"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"coverage.html":{}}}],["page/film",{"_index":1083,"title":{},"body":{"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"coverage.html":{}}}],["page/genre.component",{"_index":1091,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["page/genre.component.ts",{"_index":1318,"title":{},"body":{"components/GenreComponent.html":{},"coverage.html":{}}}],["page/genre.component.ts:14",{"_index":1337,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:15",{"_index":1338,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:16",{"_index":1336,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:17",{"_index":1324,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:21",{"_index":1335,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:32",{"_index":1326,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/genre.component.ts:52",{"_index":1330,"title":{},"body":{"components/GenreComponent.html":{}}}],["page/layout",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{}}}],["page/list",{"_index":1086,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"components/ListPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/search",{"_index":1088,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["pages/error404",{"_index":1780,"title":{},"body":{"modules/SharedModule.html":{}}}],["pages/fav",{"_index":1093,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["pages/film",{"_index":1082,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["pages/genre",{"_index":1090,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["pages/layout",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/list",{"_index":1085,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["pages/login",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/search",{"_index":1087,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{}}}],["pagestoshow",{"_index":1443,"title":{},"body":{"components/ListPageComponent.html":{}}}],["pagina",{"_index":1352,"title":{},"body":{"components/GenreComponent.html":{}}}],["pagination",{"_index":1487,"title":{},"body":{"components/ListPageComponent.html":{}}}],["paginator",{"_index":1828,"title":{},"body":{"components/UsersComponent.html":{}}}],["palabra",{"_index":1293,"title":{},"body":{"injectables/FilmService.html":{}}}],["panel",{"_index":853,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["pantalla",{"_index":1555,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["para",{"_index":53,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["param",{"_index":230,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["parametros",{"_index":1276,"title":{},"body":{"injectables/FilmService.html":{}}}],["parsefloat((v",{"_index":745,"title":{},"body":{"injectables/CommonService.html":{}}}],["parte",{"_index":1436,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["parámetros",{"_index":1114,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["pasa",{"_index":1391,"title":{},"body":{"components/GenreComponent.html":{}}}],["pasar",{"_index":1498,"title":{},"body":{"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["pasemos",{"_index":1275,"title":{},"body":{"injectables/FilmService.html":{}}}],["password",{"_index":122,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{}}}],["passwordinput",{"_index":1514,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["path",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["path:':id",{"_index":1256,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["path:'favs",{"_index":1254,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["path:'genre",{"_index":1252,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["path:'list",{"_index":1250,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["path:'search",{"_index":1248,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["pathmatch",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pelicula",{"_index":994,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["peliculas",{"_index":1333,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["peliculas_favs",{"_index":1782,"title":{},"body":{"interfaces/User.html":{}}}],["película",{"_index":561,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{}}}],["películas",{"_index":967,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["percentage",{"_index":596,"title":{},"body":{"components/CardComponent.html":{}}}],["percentage.tostring",{"_index":603,"title":{},"body":{"components/CardComponent.html":{}}}],["permises",{"_index":255,"title":{"interfaces/Permises.html":{}},"body":{"interfaces/ApiResponse.html":{},"interfaces/Permises.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["permisos",{"_index":223,"title":{},"body":{"guards/AdminGuard.html":{}}}],["permite",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["permitido",{"_index":1509,"title":{},"body":{"components/ListPageComponent.html":{}}}],["personalizado",{"_index":1860,"title":{},"body":{"components/UsersComponent.html":{}}}],["pipe",{"_index":463,"title":{"pipes/FilmImgPipe.html":{}},"body":{"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe(catcherror(error",{"_index":1315,"title":{},"body":{"injectables/FilmService.html":{}}}],["pipes",{"_index":1055,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["pipes/film",{"_index":585,"title":{},"body":{"components/CardComponent.html":{},"modules/FilmModule.html":{}}}],["pipetransform",{"_index":1062,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["platform",{"_index":2071,"title":{},"body":{"index.html":{}}}],["please",{"_index":901,"title":{},"body":{"components/Error404PageComponent.html":{},"components/SearchPageComponent.html":{}}}],["poco",{"_index":1396,"title":{},"body":{"components/GenreComponent.html":{}}}],["pointer",{"_index":621,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["popularity",{"_index":806,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["por",{"_index":562,"title":{},"body":{"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{}}}],["porcentaje",{"_index":567,"title":{},"body":{"components/CardComponent.html":{}}}],["posiciones",{"_index":588,"title":{},"body":{"components/CardComponent.html":{}}}],["position",{"_index":624,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["poster_path",{"_index":807,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["posterpath",{"_index":1061,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["prev",{"_index":1476,"title":{},"body":{"components/ListPageComponent.html":{}}}],["primera",{"_index":1460,"title":{},"body":{"components/ListPageComponent.html":{}}}],["principal",{"_index":1606,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["privadas",{"_index":1304,"title":{},"body":{"injectables/FilmService.html":{}}}],["private",{"_index":116,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["project",{"_index":2035,"title":{},"body":{"index.html":{}}}],["promedio",{"_index":570,"title":{},"body":{"components/CardComponent.html":{}}}],["promesa",{"_index":236,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{}}}],["promise",{"_index":207,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{}}}],["promise((resolve",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"properties.html":{}}}],["propiedad",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["protegida",{"_index":229,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{}}}],["provide",{"_index":1684,"title":{},"body":{"modules/MaterialModule.html":{}}}],["providedin",{"_index":219,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["publicguard",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["puedes",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["pulgar",{"_index":1387,"title":{},"body":{"components/GenreComponent.html":{}}}],["pulsar",{"_index":1532,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["push",{"_index":1850,"title":{},"body":{"components/UsersComponent.html":{}}}],["put",{"_index":1770,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["página",{"_index":244,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["pérez",{"_index":1427,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"index.html":{}}}],["q",{"_index":774,"title":{},"body":{"injectables/CommonService.html":{}}}],["que",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["quiera",{"_index":896,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["quintero",{"_index":1428,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"index.html":{}}}],["quotrem",{"_index":708,"title":{},"body":{"injectables/CommonService.html":{}}}],["r",{"_index":775,"title":{},"body":{"injectables/CommonService.html":{}}}],["radio",{"_index":1388,"title":{},"body":{"components/GenreComponent.html":{}}}],["radius",{"_index":636,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["rate",{"_index":608,"title":{},"body":{"components/CardComponent.html":{}}}],["rated",{"_index":1422,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"index.html":{}}}],["rating",{"_index":622,"title":{},"body":{"components/CardComponent.html":{}}}],["rating=\"10",{"_index":702,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"0",{"_index":664,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"1",{"_index":668,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"2",{"_index":671,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"3",{"_index":675,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"4",{"_index":679,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"5",{"_index":683,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"6",{"_index":686,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"7",{"_index":690,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"8",{"_index":694,"title":{},"body":{"components/CardComponent.html":{}}}],["rating^=\"9",{"_index":698,"title":{},"body":{"components/CardComponent.html":{}}}],["rea",{"_index":1615,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["reactiveformsmodule",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/MaterialModule.html":{},"modules/UsersModule.html":{}}}],["realiza",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilmService.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["realizados",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["realizamos",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["realizando",{"_index":1741,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["realizar",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{}}}],["realizara",{"_index":825,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["realizo",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["reciba",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{}}}],["recibe",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["recibidos",{"_index":1552,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["recibir",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["recoge",{"_index":1745,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["recogemos",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["recoger",{"_index":1305,"title":{},"body":{"injectables/FilmService.html":{},"components/LoginPageComponent.html":{}}}],["recomendable",{"_index":851,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["reconocida",{"_index":349,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["red",{"_index":1174,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["redirecciona",{"_index":1406,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["redireccionar",{"_index":347,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPageComponent.html":{}}}],["redirectto",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["redirectto:'404",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto:'list",{"_index":1258,"title":{},"body":{"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["redirigir",{"_index":895,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["redirigirlo",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{}}}],["redondeado",{"_index":1492,"title":{},"body":{"components/ListPageComponent.html":{}}}],["redondear",{"_index":599,"title":{},"body":{"components/CardComponent.html":{}}}],["reducida",{"_index":1506,"title":{},"body":{"components/ListPageComponent.html":{}}}],["reference",{"_index":2081,"title":{},"body":{"index.html":{}}}],["reject",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["relacionadas",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["relative",{"_index":1157,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["release",{"_index":1145,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["release_date",{"_index":808,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["reload",{"_index":2050,"title":{},"body":{"index.html":{}}}],["removerol",{"_index":1699,"title":{},"body":{"injectables/RolesService.html":{}}}],["removerol(idrol",{"_index":1713,"title":{},"body":{"injectables/RolesService.html":{}}}],["removeusuario",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["removeusuario(iduser",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["repeat",{"_index":1176,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["representa",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":1602,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["reset",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassword(formulariocorreo",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(false",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(response.ok",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(true",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["resp",{"_index":136,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["resp.data",{"_index":146,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["resp.message",{"_index":138,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["resp.ok",{"_index":139,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["respecto",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":128,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["response.data",{"_index":132,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["response.data.grupo",{"_index":1585,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.id_rol",{"_index":1587,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.id_usuario",{"_index":1589,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.map((fav",{"_index":1131,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["response.data.map((item",{"_index":989,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{}}}],["response.data.nombre_publico",{"_index":1581,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.opcion",{"_index":1583,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.token",{"_index":1577,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.usuario",{"_index":1579,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.data.valido",{"_index":1594,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response.message",{"_index":885,"title":{},"body":{"components/EditUserComponent.html":{}}}],["response.ok",{"_index":131,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["response.permises",{"_index":1053,"title":{},"body":{"injectables/FavService.html":{},"components/UsersComponent.html":{}}}],["response.ts",{"_index":253,"title":{},"body":{"interfaces/ApiResponse.html":{},"interfaces/Permises.html":{},"coverage.html":{}}}],["respuesta",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["result",{"_index":1769,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["resultado",{"_index":827,"title":{},"body":{"components/DeleteUserComponent.html":{},"injectables/RolesService.html":{}}}],["resultados",{"_index":1279,"title":{},"body":{"injectables/FilmService.html":{}}}],["results",{"_index":189,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":247,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":72,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["revenue",{"_index":809,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["rgb(20",{"_index":1233,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["rgba(0",{"_index":640,"title":{},"body":{"components/CardComponent.html":{},"components/LoginPageComponent.html":{}}}],["rgba(0,0,0,0.5",{"_index":1205,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["rgba(255",{"_index":938,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["rgba(255,255,255,0.13",{"_index":1198,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["rgba(255,255,255,0.4",{"_index":1213,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["rgba(255,255,255,0.8",{"_index":1217,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["right",{"_index":1202,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["rol",{"_index":95,"title":{"interfaces/Rol.html":{}},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"interfaces/User.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rol.id_rol",{"_index":1729,"title":{},"body":{"injectables/RolesService.html":{}}}],["rol.rol",{"_index":150,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["roles",{"_index":28,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/RolesService.html":{}}}],["rolesservice",{"_index":41,"title":{"injectables/RolesService.html":{}},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/RolesService.html":{},"coverage.html":{}}}],["rolfilter",{"_index":1829,"title":{},"body":{"components/UsersComponent.html":{}}}],["rolfilter.id_rol",{"_index":1730,"title":{},"body":{"injectables/RolesService.html":{}}}],["root",{"_index":220,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["rotate",{"_index":956,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["rotate(5deg",{"_index":955,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["route",{"_index":206,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["route=${route",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["router",{"_index":196,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/film",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":352,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":204,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":301,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/UsersModule.html":{}}}],["routing.module.ts",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["run",{"_index":2043,"title":{},"body":{"index.html":{}}}],["running",{"_index":2063,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":810,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["ruta",{"_index":228,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"guards/NoLoginGuard.html":{},"injectables/UserService.html":{}}}],["rutaseleccionada",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["rutaseleccionada.split('/')[0",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs",{"_index":213,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/FavPageComponent.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"guards/NoLoginGuard.html":{},"injectables/RolesService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":218,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["s",{"_index":1959,"title":{},"body":{"components/UsersComponent.html":{}}}],["saber",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["sacame",{"_index":902,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["sans",{"_index":934,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["scaffolding",{"_index":2054,"title":{},"body":{"index.html":{}}}],["scale(1.02",{"_index":1181,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["screen",{"_index":1222,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["scrollbar",{"_index":1383,"title":{},"body":{"components/GenreComponent.html":{}}}],["scrollstrategy",{"_index":1918,"title":{},"body":{"components/UsersComponent.html":{}}}],["se",{"_index":77,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["sea",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"pipes/FilmImgPipe.html":{},"components/GenreComponent.html":{},"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["search",{"_index":184,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["searchform",{"_index":1734,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["searchinput",{"_index":1754,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["searchpagecomponent",{"_index":183,"title":{"components/SearchPageComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchresponse",{"_index":1773,"title":{"interfaces/SearchResponse.html":{}},"body":{"interfaces/SearchResponse.html":{},"coverage.html":{}}}],["searchterms",{"_index":1928,"title":{},"body":{"components/UsersComponent.html":{}}}],["searchterms.habilitado",{"_index":1939,"title":{},"body":{"components/UsersComponent.html":{}}}],["segments",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segundos",{"_index":1572,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["según",{"_index":631,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/UsersComponent.html":{}}}],["seleccionado",{"_index":1334,"title":{},"body":{"components/GenreComponent.html":{},"components/UsersComponent.html":{}}}],["select",{"_index":1366,"title":{},"body":{"components/GenreComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["semanales",{"_index":1287,"title":{},"body":{"injectables/FilmService.html":{}}}],["serif",{"_index":935,"title":{},"body":{"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["serve",{"_index":2044,"title":{},"body":{"index.html":{}}}],["server",{"_index":2042,"title":{},"body":{"index.html":{}}}],["service",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"dependencies.html":{}}}],["services/auth.service",{"_index":214,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{}}}],["services/fav.service",{"_index":979,"title":{},"body":{"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{}}}],["services/film.service",{"_index":583,"title":{},"body":{"components/CardComponent.html":{},"components/FavPageComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["services/roles.service",{"_index":105,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["services/users.service",{"_index":106,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/UsersComponent.html":{}}}],["servicio",{"_index":66,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["servicioroles",{"_index":40,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["servidor",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["sesión",{"_index":351,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPageComponent.html":{}}}],["setform",{"_index":1517,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["settimeout",{"_index":1568,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["shadow",{"_index":1204,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["share",{"_index":1152,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["shared/interfaces/api",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"components/UsersComponent.html":{}}}],["shared/pages/error404",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/pages/layout",{"_index":1084,"title":{},"body":{"modules/FilmModule.html":{},"modules/FilmRoutingModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["shared/shared.module",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":281,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["showloadmorebtn",{"_index":1735,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["si",{"_index":60,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["siguiente",{"_index":1375,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["sin",{"_index":92,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["sino",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["sirve",{"_index":847,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["size",{"_index":657,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["sizing",{"_index":1168,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["sm",{"_index":1480,"title":{},"body":{"components/ListPageComponent.html":{}}}],["snackbar",{"_index":29,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["sobre",{"_index":1393,"title":{},"body":{"components/GenreComponent.html":{},"components/SearchPageComponent.html":{}}}],["solicitud",{"_index":860,"title":{},"body":{"components/EditUserComponent.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{}}}],["solicitudes",{"_index":1591,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["solid",{"_index":649,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["something",{"_index":1771,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["sort",{"_index":1830,"title":{},"body":{"components/UsersComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"modules/FilmModule.html":{},"components/FilmPageComponent.html":{},"modules/FilmRoutingModule.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"modules/SharedModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"index.html":{}}}],["space",{"_index":617,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{}}}],["spinner",{"_index":1655,"title":{},"body":{"modules/MaterialModule.html":{}}}],["split('t')[0",{"_index":762,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/.../environment.ts",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fav.service.ts",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../messages.ts",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../public.guard.ts",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.service.ts",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":344,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/guards/admin.guard.ts",{"_index":194,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/auth/guards/admin.guard.ts:18",{"_index":200,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/guards/admin.guard.ts:22",{"_index":205,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/auth/guards/auth.guard.ts",{"_index":323,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/auth/guards/auth.guard.ts:17",{"_index":324,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/auth/guards/auth.guard.ts:21",{"_index":325,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/auth/guards/no",{"_index":1688,"title":{},"body":{"guards/NoLoginGuard.html":{},"coverage.html":{}}}],["src/app/auth/guards/public.guard.ts",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/interfaces/user.interface",{"_index":839,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"components/LayoutPageComponent-1.html":{},"injectables/UserService.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":1781,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/pages/layout",{"_index":1399,"title":{},"body":{"components/LayoutPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/pages/login",{"_index":1512,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service",{"_index":980,"title":{},"body":{"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/LayoutPageComponent-1.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:111",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:134",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:150",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:168",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:182",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:20",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:36",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:46",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:57",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:76",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:96",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/film/components/card/card.component.ts",{"_index":542,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/film/components/card/card.component.ts:13",{"_index":555,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/components/card/card.component.ts:16",{"_index":580,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/components/card/card.component.ts:17",{"_index":553,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/components/card/card.component.ts:25",{"_index":573,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/components/card/card.component.ts:34",{"_index":566,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/components/card/card.component.ts:43",{"_index":558,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/film/film",{"_index":1247,"title":{},"body":{"modules/FilmRoutingModule.html":{}}}],["src/app/film/film.module.ts",{"_index":1081,"title":{},"body":{"modules/FilmModule.html":{}}}],["src/app/film/interfaces/film.ts",{"_index":795,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{},"coverage.html":{}}}],["src/app/film/interfaces/genre",{"_index":1339,"title":{},"body":{"components/GenreComponent.html":{}}}],["src/app/film/interfaces/genre.ts",{"_index":1316,"title":{},"body":{"interfaces/Genre-1.html":{},"coverage.html":{}}}],["src/app/film/interfaces/search.ts",{"_index":1774,"title":{},"body":{"interfaces/SearchResponse.html":{},"coverage.html":{}}}],["src/app/film/pages/fav",{"_index":958,"title":{},"body":{"components/FavPageComponent.html":{},"coverage.html":{}}}],["src/app/film/pages/film",{"_index":1094,"title":{},"body":{"components/FilmPageComponent.html":{},"coverage.html":{}}}],["src/app/film/pages/genre",{"_index":1317,"title":{},"body":{"components/GenreComponent.html":{},"coverage.html":{}}}],["src/app/film/pages/list",{"_index":1442,"title":{},"body":{"components/ListPageComponent.html":{},"coverage.html":{}}}],["src/app/film/pages/search",{"_index":1732,"title":{},"body":{"components/SearchPageComponent.html":{},"coverage.html":{}}}],["src/app/film/pipes/film",{"_index":1056,"title":{},"body":{"pipes/FilmImgPipe.html":{},"coverage.html":{}}}],["src/app/film/services/fav.service.ts",{"_index":1013,"title":{},"body":{"injectables/FavService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/film/services/fav.service.ts:20",{"_index":1041,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:21",{"_index":1042,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:22",{"_index":1039,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:24",{"_index":1040,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:25",{"_index":1020,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:39",{"_index":1031,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:49",{"_index":1022,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:60",{"_index":1029,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:70",{"_index":1037,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/fav.service.ts:81",{"_index":1034,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/film/services/film.service",{"_index":1340,"title":{},"body":{"components/GenreComponent.html":{}}}],["src/app/film/services/film.service.ts",{"_index":1259,"title":{},"body":{"injectables/FilmService.html":{},"coverage.html":{}}}],["src/app/film/services/film.service.ts:15",{"_index":1300,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:16",{"_index":1267,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:26",{"_index":1284,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:35",{"_index":1296,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:46",{"_index":1269,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:54",{"_index":1288,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:64",{"_index":1291,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/film/services/film.service.ts:76",{"_index":1281,"title":{},"body":{"injectables/FilmService.html":{}}}],["src/app/material/material.module.ts",{"_index":1629,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/interfaces/api",{"_index":252,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/FavService.html":{},"interfaces/Permises.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/rol",{"_index":109,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/RolesService.html":{}}}],["src/app/shared/interfaces/rol.ts",{"_index":1694,"title":{},"body":{"interfaces/Rol.html":{},"coverage.html":{}}}],["src/app/shared/messages",{"_index":112,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["src/app/shared/messages.ts",{"_index":2002,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/pages/error404",{"_index":890,"title":{},"body":{"components/Error404PageComponent.html":{},"coverage.html":{}}}],["src/app/shared/pages/layout",{"_index":1400,"title":{},"body":{"components/LayoutPageComponent-1.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1779,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/validators/common.service",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["src/app/shared/validators/common.service.ts",{"_index":704,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/shared/validators/common.service.ts:20",{"_index":727,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:27",{"_index":723,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:35",{"_index":730,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:41",{"_index":736,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:44",{"_index":734,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:47",{"_index":738,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:53",{"_index":735,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:66",{"_index":733,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:73",{"_index":720,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:81",{"_index":718,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:9",{"_index":716,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/shared/validators/common.service.ts:92",{"_index":732,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/users/add",{"_index":10,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/users/delete",{"_index":820,"title":{},"body":{"components/DeleteUserComponent.html":{},"coverage.html":{}}}],["src/app/users/edit",{"_index":855,"title":{},"body":{"components/EditUserComponent.html":{},"coverage.html":{}}}],["src/app/users/services/roles.service.ts",{"_index":1695,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/services/roles.service.ts:18",{"_index":1701,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:27",{"_index":1712,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:36",{"_index":1703,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:46",{"_index":1709,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:56",{"_index":1706,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:64",{"_index":1714,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/roles.service.ts:74",{"_index":1717,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/app/users/services/users.service",{"_index":1043,"title":{},"body":{"injectables/FavService.html":{}}}],["src/app/users/services/users.service.ts",{"_index":1783,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/users/services/users.service.ts:15",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:24",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:33",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:44",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:59",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:67",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/services/users.service.ts:77",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/users/users",{"_index":1971,"title":{},"body":{"modules/UsuariosRoutingModule.html":{}}}],["src/app/users/users.component.ts",{"_index":1818,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/users/users.component.ts:111",{"_index":1870,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:132",{"_index":1866,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:151",{"_index":1857,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:178",{"_index":1876,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:204",{"_index":1852,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:22",{"_index":1894,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:23",{"_index":1899,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:25",{"_index":1884,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:26",{"_index":1895,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:32",{"_index":1890,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:33",{"_index":1900,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:34",{"_index":1891,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:35",{"_index":1896,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:37",{"_index":1887,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:39",{"_index":1886,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:40",{"_index":1889,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:46",{"_index":1840,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:49",{"_index":1885,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:54",{"_index":1875,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:62",{"_index":1872,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.component.ts:91",{"_index":1841,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/users/users.module.ts",{"_index":1967,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/environments/environment",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.ts",{"_index":2014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2033,"title":{"index.html":{}},"body":{}}],["startpage",{"_index":1466,"title":{},"body":{"components/ListPageComponent.html":{}}}],["state",{"_index":203,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"components/FavPageComponent.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":705,"title":{},"body":{"injectables/CommonService.html":{},"components/UsersComponent.html":{}}}],["status",{"_index":811,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["stored",{"_index":2060,"title":{},"body":{"index.html":{}}}],["string",{"_index":256,"title":{},"body":{"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["stroked",{"_index":1766,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["structuredclone",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["structuredclone(this.user",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["style",{"_index":1211,"title":{},"body":{"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["su",{"_index":563,"title":{},"body":{"components/CardComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/UsersComponent.html":{}}}],["suave",{"_index":1495,"title":{},"body":{"components/ListPageComponent.html":{}}}],["subject",{"_index":1423,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["subscribe",{"_index":1742,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["subscribe((response",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["superadmin",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["supervisor_account",{"_index":1424,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["support",{"_index":2083,"title":{},"body":{"modules.html":{}}}],["suscripciones",{"_index":1877,"title":{},"body":{"components/UsersComponent.html":{}}}],["svg",{"_index":2084,"title":{},"body":{"modules.html":{}}}],["símbolo",{"_index":605,"title":{},"body":{"components/CardComponent.html":{}}}],["tabla",{"_index":1861,"title":{},"body":{"components/UsersComponent.html":{}}}],["table",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["tagline",{"_index":812,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["tamaño",{"_index":629,"title":{},"body":{"components/CardComponent.html":{}}}],["tap",{"_index":217,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["tap(user",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["teniendo",{"_index":752,"title":{},"body":{"injectables/CommonService.html":{}}}],["termina",{"_index":1069,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["test",{"_index":2066,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2076,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2065,"title":{},"body":{"index.html":{}}}],["text",{"_index":614,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["texto",{"_index":659,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1115,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id')?.tostring",{"_index":1128,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.addfav",{"_index":1122,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.auth.isauthenticated(state.url",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{}}}],["this.auth.isloged",{"_index":1692,"title":{},"body":{"guards/NoLoginGuard.html":{}}}],["this.authservice.dologin(data).topromise",{"_index":1576,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.authservice.dologout",{"_index":1415,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["this.authservice.getcurrentuser",{"_index":1417,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["this.base64toarraybuffer(data",{"_index":781,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.baseurl",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.baseurl}/users/1",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.busqueda",{"_index":1759,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":1123,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.checkfav",{"_index":1119,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.commonservice.getheaders",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{}}}],["this.commonservice.headers",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["this.cookieservice.deleteall",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createfilter",{"_index":1914,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.currentgenre",{"_index":1353,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.currentpage",{"_index":1360,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/SearchPageComponent.html":{}}}],["this.currentpage).subscribe",{"_index":1762,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.currentpage).subscribe((films",{"_index":1361,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.datasource.data",{"_index":1908,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.filter",{"_index":1944,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.filtereddata.filter(filas",{"_index":1956,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1913,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.paginator",{"_index":1911,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.datasource.sort",{"_index":1909,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.deletefav",{"_index":1121,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.dialog.open(addusercomponent",{"_index":1916,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.dialog.open(deleteusercomponent",{"_index":1924,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.dialog.open(editusercomponent",{"_index":1922,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.dialogref.close",{"_index":143,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.dialogref.close({ok",{"_index":148,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{}}}],["this.displayedcolumns",{"_index":1906,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.fav",{"_index":1120,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.favservice.addfav(localstorage.getitem('id_usuario",{"_index":1142,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.favservice.deletefav(localstorage.getitem('id_usuario",{"_index":1137,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.favservice.getfavs(localstorage.getitem('id_usuario')).subscribe((response",{"_index":1129,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.favservice.getfavs(this.id_usuario).topromise",{"_index":987,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.fb.group",{"_index":1558,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.film",{"_index":592,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{}}}],["this.filmarray",{"_index":1356,"title":{},"body":{"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["this.filmarray.length",{"_index":1462,"title":{},"body":{"components/ListPageComponent.html":{}}}],["this.filmarray.push(pelicula",{"_index":995,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.filmlist",{"_index":1760,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.filmlistids",{"_index":988,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.filmservice.getbygenre(genreid",{"_index":1354,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.filmservice.getfilmbyid(id",{"_index":606,"title":{},"body":{"components/CardComponent.html":{}}}],["this.filmservice.getfilmbyid(id).subscribe(data",{"_index":1134,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.filmservice.getfilmbyid(this.filmlistids[i]).subscribe",{"_index":993,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.filmservice.getfilmbyid(this.id_film).subscribe((respuesta",{"_index":1117,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.filmservice.getgenres().subscribe((genre",{"_index":1344,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.filmservice.getmoviesbyquery(this.busqueda",{"_index":1761,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.filmservice.getratedfilms(page).subscribe((films",{"_index":1475,"title":{},"body":{"components/ListPageComponent.html":{}}}],["this.filmservice.getratedfilms(this.currentpage).subscribe((films",{"_index":1463,"title":{},"body":{"components/ListPageComponent.html":{}}}],["this.filtervalues.habilitado",{"_index":1954,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.filtervalues.id_usuario",{"_index":1943,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.filtervalues.nombre_publico",{"_index":1949,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.filtervalues.rol",{"_index":1951,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.filtervalues.usuario",{"_index":1947,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.genres",{"_index":1345,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.getbygenre(this.currentgenre",{"_index":1362,"title":{},"body":{"components/GenreComponent.html":{}}}],["this.getcurrentuser",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getdatafilm",{"_index":992,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.getfavs(id_usuario).topromise",{"_index":1052,"title":{},"body":{"injectables/FavService.html":{}}}],["this.getidsfavoritas",{"_index":986,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.getroles",{"_index":126,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.getuser().pipe",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getusers",{"_index":1903,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.headers",{"_index":739,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.http.delete(`${url_api}/${endpoint}.php?id=${idrol",{"_index":1723,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.delete(`${url_api}/${endpoint}.php?id=${user.id_usuario",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`${url_api}/fav.php?id_usuario=${id_usuario}&id_pelicula=${id_pelicula",{"_index":1049,"title":{},"body":{"injectables/FavService.html":{}}}],["this.http.get",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.baseurl}discover/movie?page=${page.tostring()}${this.apikey",{"_index":1306,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${this.baseurl}discover/movie?with_genres=${idgenero}&page=${page}${this.apikey",{"_index":1308,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${this.baseurl}genre/movie/list?&${this.apikey",{"_index":1309,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${this.baseurl}movie/${id}${this.apikey",{"_index":1314,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${this.baseurl}movie/top_rated?page=${page.tostring()}${this.apikey",{"_index":1307,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${this.baseurl}search/movie?query=${busquedatrim}&page=${page}${this.apikey",{"_index":1312,"title":{},"body":{"injectables/FilmService.html":{}}}],["this.http.get(`${url_api}/${endpoint}.php",{"_index":1720,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["this.http.get(`${url_api}/${endpoint}.php?id_usuario=${id_usuario",{"_index":1046,"title":{},"body":{"injectables/FavService.html":{}}}],["this.http.get(`${url_api}/check_usuarios.php?ruta=${rutaseleccionada",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${url_api}/check_usuarios.php?ruta=inicio",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${url_api}/${endpoint}.php",{"_index":1051,"title":{},"body":{"injectables/FavService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{}}}],["this.http.post(`${url_api}/${endpoint}.php?id_usuario=${id_usuario}&id_pelicula=${id_pelicula",{"_index":1048,"title":{},"body":{"injectables/FavService.html":{}}}],["this.http.post(`${url_api}/check_token_passwd.php",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${url_api}/login.php",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${url_api}/logout.php",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${url_api}/olvidar_pwd.php",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(`${url_api}/${endpoint}.php",{"_index":1722,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.put(`${url_api}/${endpoint}.php${route",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${url_api}/reset_pass.php",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.get(`${url_api}/usuario.php",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.id_film",{"_index":1116,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.id_rol",{"_index":1413,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["this.id_usuario",{"_index":982,"title":{},"body":{"components/FavPageComponent.html":{}}}],["this.idfilmlist",{"_index":1054,"title":{},"body":{"injectables/FavService.html":{}}}],["this.idfilter.valuechanges.subscribe((value",{"_index":1942,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.loadfilms",{"_index":1758,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.loginform",{"_index":1557,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.get('username",{"_index":1566,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1574,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1575,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.nombre_usuario",{"_index":1411,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["this.nombrefilter.valuechanges.subscribe((value",{"_index":1948,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.onchanges",{"_index":1915,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.overlay.scrollstrategies.noop",{"_index":1919,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.pagestoshow",{"_index":1471,"title":{},"body":{"components/ListPageComponent.html":{}}}],["this.paginator",{"_index":1912,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.permises",{"_index":1905,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.roles",{"_index":133,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/RolesService.html":{}}}],["this.roles.filter((rolfilter",{"_index":1727,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roles.filter(rol",{"_index":1724,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roles[index",{"_index":1731,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolfilter.valuechanges.subscribe((value",{"_index":1950,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.router.navigate(['./404",{"_index":246,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.router.navigate(['./auth/login",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/auth/login",{"_index":1416,"title":{},"body":{"components/LayoutPageComponent-1.html":{}}}],["this.router.navigate(['/film",{"_index":1693,"title":{},"body":{"guards/NoLoginGuard.html":{}}}],["this.router.navigate(['/film/list",{"_index":1118,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.router.navigate(['auth/login",{"_index":328,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.router.navigate([`/film",{"_index":1593,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.searchform",{"_index":1753,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.searchform.get('searchinput')!.value",{"_index":1756,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.servicioroles.getallroles().topromise",{"_index":130,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.setform",{"_index":1556,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.showloadmorebtn",{"_index":1763,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.showloadmorebtn=false",{"_index":1765,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["this.snackbar.open(\"film",{"_index":1143,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.snackbar.open(\"removed",{"_index":1139,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.snackbar.open('add",{"_index":1144,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.snackbar.open('removed",{"_index":1141,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["this.snackbar.open('usuario",{"_index":1595,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.snackbar.open(invalid_form",{"_index":147,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.snackbar.open(resp.message",{"_index":140,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.sort",{"_index":1910,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.totalpages",{"_index":1464,"title":{},"body":{"components/ListPageComponent.html":{}}}],["this.user",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usernameentered",{"_index":1569,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.users",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.filter((usuariofilter",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.filter(user",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users[index",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice",{"_index":840,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["this.userservice.adduser(usuario).topromise",{"_index":137,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.userservice.editusuario(usuario).topromise",{"_index":888,"title":{},"body":{"components/EditUserComponent.html":{}}}],["this.userservice.getallusuarios().topromise",{"_index":1904,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.removeusuario(resp.data",{"_index":1925,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.updateusuario(resp.data",{"_index":1923,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.users",{"_index":1907,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.users.push(resp.data",{"_index":1921,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usuariofilter.valuechanges.subscribe((value",{"_index":1946,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.usuarioform",{"_index":117,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.usuarioform.valid",{"_index":134,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["this.usuarioform.value",{"_index":135,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["throw",{"_index":593,"title":{},"body":{"components/CardComponent.html":{}}}],["thumb",{"_index":1386,"title":{},"body":{"components/GenreComponent.html":{}}}],["thumb:hover",{"_index":1389,"title":{},"body":{"components/GenreComponent.html":{}}}],["tiene",{"_index":222,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{}}}],["title",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"components/FilmPageComponent.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["tmdb",{"_index":2082,"title":{},"body":{"index.html":{}}}],["todo",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["todos",{"_index":79,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["togglefav",{"_index":1098,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["toisostring",{"_index":761,"title":{},"body":{"injectables/CommonService.html":{}}}],["token",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["tokenpasswd",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["tolowercase",{"_index":1934,"title":{},"body":{"components/UsersComponent.html":{}}}],["top",{"_index":645,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"index.html":{}}}],["topromise",{"_index":842,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["tostring",{"_index":1931,"title":{},"body":{"components/UsersComponent.html":{}}}],["total_pages",{"_index":819,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{},"interfaces/SearchResponse.html":{}}}],["total_results",{"_index":1775,"title":{},"body":{"interfaces/SearchResponse.html":{}}}],["totalpages",{"_index":1444,"title":{},"body":{"components/ListPageComponent.html":{}}}],["transform",{"_index":654,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{}}}],["transform(posterpath",{"_index":1059,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["transforma",{"_index":1063,"title":{},"body":{"pipes/FilmImgPipe.html":{}}}],["transición",{"_index":1494,"title":{},"body":{"components/ListPageComponent.html":{}}}],["transition",{"_index":1178,"title":{},"body":{"components/FilmPageComponent.html":{},"components/ListPageComponent.html":{}}}],["translate",{"_index":655,"title":{},"body":{"components/CardComponent.html":{}}}],["translatex",{"_index":954,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["translatex(5",{"_index":953,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["transparent",{"_index":650,"title":{},"body":{"components/CardComponent.html":{},"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["tratar",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["true",{"_index":248,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["ts",{"_index":785,"title":{},"body":{"injectables/CommonService.html":{}}}],["tslib",{"_index":2028,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1626,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tus",{"_index":632,"title":{},"body":{"components/CardComponent.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"interfaces/ApiResponse.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"interfaces/DataFilm.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"interfaces/Film.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"interfaces/Genre.html":{},"interfaces/Genre-1.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/Page.html":{},"interfaces/Permises.html":{},"interfaces/Rol.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"interfaces/SearchResponse.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["términos",{"_index":1864,"title":{},"body":{"components/UsersComponent.html":{}}}],["título",{"_index":1621,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["u",{"_index":1751,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["uint8array(blength",{"_index":794,"title":{},"body":{"injectables/CommonService.html":{}}}],["ul",{"_index":1210,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["un",{"_index":58,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["una",{"_index":227,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/Error404PageComponent.html":{},"injectables/FavService.html":{},"pipes/FilmImgPipe.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["undefined",{"_index":257,"title":{},"body":{"interfaces/ApiResponse.html":{},"injectables/AuthService.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/Permises.html":{}}}],["underline",{"_index":1012,"title":{},"body":{"components/FavPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["unit",{"_index":2064,"title":{},"body":{"index.html":{}}}],["update",{"_index":1871,"title":{},"body":{"components/UsersComponent.html":{}}}],["updaterol",{"_index":1700,"title":{},"body":{"injectables/RolesService.html":{}}}],["updaterol(rol",{"_index":1716,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateusuario",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["updateusuario(user",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["upssss",{"_index":898,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["url",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"components/Error404PageComponent.html":{},"injectables/FilmService.html":{}}}],["url(\"https://image.tmdb.org/t/p/original/a0eqmm4wzpzfxpdodoqiccpzsq1.jpg",{"_index":1160,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["url('https://fonts.googleapis.com/css?family=montserrat:300,400,700,800",{"_index":1167,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["url('https://image.tmdb.org/t/p/w500",{"_index":1243,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["url.substring(1",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["url_api",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavService.html":{},"injectables/RolesService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url_base",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url_base}/api/private",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlsegment",{"_index":210,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"guards/NoLoginGuard.html":{},"miscellaneous/variables.html":{}}}],["usa",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/UsersComponent.html":{}}}],["usamos",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["usando",{"_index":969,"title":{},"body":{"components/FavPageComponent.html":{}}}],["usar",{"_index":894,"title":{},"body":{"components/Error404PageComponent.html":{}}}],["use",{"_index":2056,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1685,"title":{},"body":{"modules/MaterialModule.html":{}}}],["user",{"_index":19,"title":{"interfaces/User.html":{}},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/LayoutPageComponent-1.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":159,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["user.component",{"_index":1902,"title":{},"body":{"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["user.component.css",{"_index":21,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.html",{"_index":23,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts",{"_index":12,"title":{},"body":{"components/AddUserComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:102",{"_index":868,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:13",{"_index":823,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user.component.ts:15",{"_index":834,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user.component.ts:16",{"_index":837,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user.component.ts:17",{"_index":98,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:18",{"_index":45,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:20",{"_index":94,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:21",{"_index":829,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{}}}],["user.component.ts:23",{"_index":96,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":872,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:25",{"_index":873,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:28",{"_index":824,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user.component.ts:29",{"_index":82,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:32",{"_index":864,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:44",{"_index":73,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:45",{"_index":830,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user.component.ts:56",{"_index":51,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:58",{"_index":862,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.component.ts:77",{"_index":89,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:78",{"_index":857,"title":{},"body":{"components/EditUserComponent.html":{}}}],["user.id.tostring",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id_rol",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id_usuario",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["user.usuario",{"_index":845,"title":{},"body":{"components/DeleteUserComponent.html":{}}}],["user/add",{"_index":11,"title":{},"body":{"components/AddUserComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user/delete",{"_index":821,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user/edit",{"_index":856,"title":{},"body":{"components/EditUserComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user2",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["user2.id_rol",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":1559,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamecontrol",{"_index":1565,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernamecontrol?.valid",{"_index":1567,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["usernameentered",{"_index":1515,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["users",{"_index":186,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{}}}],["users.component",{"_index":1968,"title":{},"body":{"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{}}}],["users.component.css",{"_index":1819,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1820,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/1",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/1`).pipe",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/services/users.service",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscomponent",{"_index":185,"title":{"components/UsersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{},"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["userscomponent,addusercomponent,editusercomponent,deleteusercomponent",{"_index":1970,"title":{},"body":{"modules/UsersModule.html":{}}}],["userservice",{"_index":42,"title":{"injectables/UserService.html":{}},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"injectables/FavService.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["usersmodule",{"_index":1962,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usevalue",{"_index":1686,"title":{},"body":{"modules/MaterialModule.html":{}}}],["usuario",{"_index":59,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"guards/NoLoginGuard.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["usuario.habilitado",{"_index":1940,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.habilitado.indexof(searchterms.habilitado",{"_index":1941,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.id_usuario",{"_index":1930,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.nombre_publico",{"_index":1936,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.rol",{"_index":1958,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.rol.tolowercase().indexof(searchterms.rol.tolowercase",{"_index":1938,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuario.usuario",{"_index":1933,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuariofilter",{"_index":1831,"title":{},"body":{"components/UsersComponent.html":{}}}],["usuariofilter.id_usuario",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["usuarioform",{"_index":30,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["usuarios",{"_index":848,"title":{},"body":{"components/DeleteUserComponent.html":{},"components/LoginPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["usuariosroutingmodule",{"_index":1966,"title":{"modules/UsuariosRoutingModule.html":{}},"body":{"modules/UsersModule.html":{},"modules/UsuariosRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["utc",{"_index":754,"title":{},"body":{"injectables/CommonService.html":{}}}],["utilizando",{"_index":65,"title":{},"body":{"components/AddUserComponent.html":{},"components/FilmPageComponent.html":{}}}],["va",{"_index":1869,"title":{},"body":{"components/UsersComponent.html":{}}}],["vacío",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"components/ListPageComponent.html":{}}}],["validacion",{"_index":1542,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators",{"_index":102,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{}}}],["validators.email",{"_index":121,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{}}}],["validators.pattern(/[a",{"_index":1560,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["validators.required",{"_index":120,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"components/LoginPageComponent.html":{}}}],["validez",{"_index":1528,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["valido",{"_index":1538,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["valor",{"_index":1483,"title":{},"body":{"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["valoradas",{"_index":1297,"title":{},"body":{"injectables/FilmService.html":{}}}],["valores",{"_index":1879,"title":{},"body":{"components/UsersComponent.html":{}}}],["value",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"components/FilmPageComponent.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["valuechange",{"_index":1519,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["var",{"_index":157,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/Error404PageComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1112,"title":{},"body":{"components/FilmPageComponent.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1303,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/FilmService.html":{},"miscellaneous/variables.html":{}}}],["ventana",{"_index":1845,"title":{},"body":{"components/UsersComponent.html":{}}}],["verifica",{"_index":576,"title":{},"body":{"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/LayoutPageComponent-1.html":{}}}],["verificaautenticacion",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["verificar",{"_index":1104,"title":{},"body":{"components/FilmPageComponent.html":{},"components/GenreComponent.html":{}}}],["version",{"_index":2039,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2068,"title":{},"body":{"index.html":{}}}],["video",{"_index":813,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["viewchild",{"_index":1549,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild('passwordinput",{"_index":1546,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["viewchild(matpaginator",{"_index":1893,"title":{},"body":{"components/UsersComponent.html":{}}}],["viewchild(matsort",{"_index":1898,"title":{},"body":{"components/UsersComponent.html":{}}}],["vista",{"_index":1125,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["void",{"_index":88,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"injectables/CommonService.html":{},"components/DeleteUserComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/ListPageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/RolesService.html":{},"components/SearchPageComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["vote_average",{"_index":814,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["vote_average:number",{"_index":817,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["vote_count",{"_index":815,"title":{},"body":{"interfaces/DataFilm.html":{},"interfaces/Film.html":{},"interfaces/Genre.html":{},"interfaces/Page.html":{}}}],["voteaverage",{"_index":569,"title":{},"body":{"components/CardComponent.html":{}}}],["votos",{"_index":571,"title":{},"body":{"components/CardComponent.html":{}}}],["válido",{"_index":63,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditUserComponent.html":{},"miscellaneous/variables.html":{}}}],["waiting",{"_index":1768,"title":{},"body":{"components/SearchPageComponent.html":{}}}],["webkit",{"_index":914,"title":{},"body":{"components/Error404PageComponent.html":{},"components/GenreComponent.html":{}}}],["weight",{"_index":660,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{}}}],["welcome",{"_index":1598,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["white",{"_index":616,"title":{},"body":{"components/CardComponent.html":{},"components/GenreComponent.html":{},"components/ListPageComponent.html":{}}}],["width",{"_index":626,"title":{},"body":{"components/CardComponent.html":{},"components/Error404PageComponent.html":{},"components/FilmPageComponent.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["window.atob(data",{"_index":790,"title":{},"body":{"injectables/CommonService.html":{}}}],["window.navigator.mssaveoropenblob(blobstore",{"_index":787,"title":{},"body":{"injectables/CommonService.html":{}}}],["x",{"_index":764,"title":{},"body":{"injectables/CommonService.html":{},"components/GenreComponent.html":{}}}],["xs",{"_index":766,"title":{},"body":{"injectables/CommonService.html":{}}}],["xs.concat(ys",{"_index":768,"title":{},"body":{"injectables/CommonService.html":{}}}],["y",{"_index":85,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthService.html":{},"components/CardComponent.html":{},"components/EditUserComponent.html":{},"components/FavPageComponent.html":{},"injectables/FavService.html":{},"injectables/FilmService.html":{},"components/GenreComponent.html":{},"components/LayoutPageComponent-1.html":{},"components/LoginPageComponent.html":{},"modules/MaterialModule.html":{},"components/SearchPageComponent.html":{},"components/UsersComponent.html":{}}}],["ya",{"_index":1348,"title":{},"body":{"components/GenreComponent.html":{}}}],["yes",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["ys",{"_index":767,"title":{},"body":{"injectables/CommonService.html":{}}}],["yyyy",{"_index":749,"title":{},"body":{"injectables/CommonService.html":{}}}],["z",{"_index":1186,"title":{},"body":{"components/FilmPageComponent.html":{}}}],["z0",{"_index":1562,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["z]{2,4",{"_index":1564,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["za",{"_index":1561,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["zonas",{"_index":755,"title":{},"body":{"injectables/CommonService.html":{}}}],["zone.js",{"_index":2030,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FilmModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/add-user/add-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n\n\n            \n                styleUrls\n                ./add-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                roles\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                usuarioForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmAdd\n                            \n                            \n                                    Async\n                                getRoles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, servicioRoles: RolesService, userService: UserService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/add-user/add-user.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        servicioRoles\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmAdd\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/add-user/add-user.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Método para confirmar el insert de un usuario.\nSi el formulario es válido, agrega el usuario utilizando el servicio UserService.\nEn caso de error muestra el mensaje en un snackbar.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/add-user/add-user.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Funcion asincrona donde se obtiene todos los roles disponibles.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/add-user/add-user.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Iniciamos el componente y inicializamos el formulario para añadir un usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/add-user/add-user.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Método para cerrar el diálogo sin agregar el usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/add-user/add-user.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/add-user/add-user.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/add-user/add-user.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/add-user/add-user.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { RolesService } from '../services/roles.service';\nimport { UserService} from '../services/users.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { CLOSE, INVALID_FORM } from 'src/app/shared/messages';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  usuarioForm!: FormGroup;\n  roles!: Rol[];\n\n  constructor(public dialogRef: MatDialogRef,\n              private servicioRoles: RolesService,\n              private userService: UserService,\n              public snackBar: MatSnackBar\n  ) { }\n\n  /**\n   * Iniciamos el componente y inicializamos el formulario para añadir un usuario.\n   */\n  ngOnInit() {\n    this.usuarioForm = new FormGroup({\n      usuario: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required]),\n      id_rol: new FormControl(null, [Validators.required]),\n      nombre_publico: new FormControl(null),\n      observaciones: new FormControl(null)\n    });\n\n    this.getRoles();\n  }\n\n  /**\n   * Funcion asincrona donde se obtiene todos los roles disponibles.\n   */\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE && RESPONSE.ok && RESPONSE.data) {\n      this.roles = RESPONSE.data as Rol[];\n    }\n  }\n\n  /**\n   * Método para confirmar el insert de un usuario.\n   * Si el formulario es válido, agrega el usuario utilizando el servicio UserService.\n   * En caso de error muestra el mensaje en un snackbar.\n   */\n  async confirmAdd() {\n    if (this.usuarioForm.valid) {\n      const usuario = this.usuarioForm.value;\n\n      const RESP = await this.userService.addUser(usuario).toPromise();\n      if (RESP && RESP.message) {\n        if (RESP.ok) {\n          this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n          this.dialogRef.close({ ok: RESP.ok, data: RESP.data });\n        } else {\n          this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n        }\n      } else {\n        this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n      }\n    }\n  }\n\n  /**\n   * Método para cerrar el diálogo sin agregar el usuario.\n   */\n  onNoClick(): void {\n    this.dialogRef.close({ok: false});\n  }\n\n\n}\n\n    \n\n    \n        \n  Añadir usuario\n\n  \n\n      \n          \n              \n          \n      \n\n      \n          \n              \n          \n      \n\n      \n          \n              \n          \n      \n\n      \n          \n              Rol\n              \n                  \n                      {{rol.rol}}\n                  \n              \n          \n      \n\n      \n          \n              \n          \n      \n\n      \n          Guardar\n          Cancelar\n      \n\n  \n\n\n    \n\n    \n                \n                    ./add-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Añadir usuario                                                                                                                                                                          Rol                                                      {{rol.rol}}                                                                                                              Guardar          Cancelar        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/admin.guard.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/guards/admin.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ActivatedRouteSnapshot, CanActivate, CanActivateFn, CanMatchFn, Route, Router, RouterStateSnapshot, UrlSegment } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { Injectable, inject } from \"@angular/core\";\nimport { tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n   * Método canActivate para comprobar si el usuario tiene permisos de administrador antes de acceder a una ruta protegida.\n   * @param route La ruta activada actualmente.\n   * @param state El estado de la ruta actual.\n   * @returns Promise Promesa que indica si se permite o no la navegación.\n   */\nexport class AdminGuard implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const response = await this.auth.isAuthenticated(state.url);\n\n    if (!response) {\n      // Si el usuario no tiene permisos de administrador, redirigirlo a la página de error 404 ('./404')\n      this.router.navigate(['./404']);\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponse.html":{"url":"interfaces/ApiResponse.html","title":"interface - ApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/api-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            ok\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permises\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ok\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ok:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permises\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permises:         Permises | undefined | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permises | undefined | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n    ok: boolean;\n    message?: string | undefined;\n    data?: any;\n    permises?: Permises | undefined | null;\n}\n\nexport interface Permises {\n    add: boolean;\n    edit: boolean;\n    delete: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FilmApp'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FilmApp';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Error404PageComponent } from './shared/pages/error404-page/error404-page.component';\nimport {AuthGuardService as AuthGuard } from './auth/guards/auth.guard';\nimport { AdminGuard } from './auth/guards/admin.guard';\nimport { NoLoginGuard } from './auth/guards/no-auth.guard';\n\nconst routes: Routes = [\n  {\n    path : 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then(m=>m.AuthModule)\",\n    canActivate : [NoLoginGuard]\n  },\n  {\n    path : 'film',\n    loadChildren: () => \"import('./film/film.module').then(m=>m.FilmModule)\",\n    canActivate : [AuthGuard]\n  },\n  {\n    path : 'favs',\n    loadChildren: () => \"import('./film/film.module').then(m=>m.FilmModule)\",\n    canActivate : [AuthGuard]\n  },\n  {\n    path : 'users',\n    loadChildren: () => \"import('./users/users.module').then(m=>m.UsersModule)\",\n    canActivate : [AdminGuard]\n  },\n  {\n    path : '404',\n    component: Error404PageComponent\n\n  },\n  {\n    path : '',\n    redirectTo: 'film',\n    pathMatch: 'full'\n  },\n  {\n    path : '**',\n    redirectTo:'404'\n  }\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/guards/auth.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ActivatedRouteSnapshot, CanActivate, CanActivateFn, CanMatchFn, Route, Router, RouterStateSnapshot, UrlSegment } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\nimport { Injectable, inject } from \"@angular/core\";\nimport { tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n   * Método canActivate para comprobar si el usuario está autenticado antes de acceder a una ruta protegida.\n   * @param route La ruta activada actualmente.\n   * @param state El estado de la ruta actual.\n   * @returns Promise Promesa que indica si se permite o no la navegación.\n   */\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const response = await this.auth.isAuthenticated(state.url);\n\n    if (!response) {\n      this.router.navigate(['auth/login']);\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLayoutPageComponent\n\nLayoutPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLayoutPageComponent->AuthModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayoutPageComponent\n                        \n                        \n                            LoginPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { MaterialModule } from '../material/material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    LayoutPageComponent,\n    LoginPageComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AuthRoutingModule,\n    ReactiveFormsModule\n  ],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutPageComponent } from './pages/layout-page/layout-page.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\n\n\nconst routes: Routes = [\n  {\n    //localhost:4200/auth/\n    path: '',\n    component: LayoutPageComponent,\n    children: [\n      { path: 'login', component: LoginPageComponent },\n      { path: '**', redirectTo: 'login' }, // Redireccionar cualquier ruta no reconocida a la página de inicio de sesión\n    ]\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAdminRole\n                            \n                            \n                                checkAuthentication\n                            \n                            \n                                checkPassToken\n                            \n                            \n                                doLogin\n                            \n                            \n                                doLogout\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                getUser\n                            \n                            \n                                    Public\n                                    Async\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                    Async\n                                isLoged\n                            \n                            \n                                isUserAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, commonService: CommonService, userService: UserService, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAdminRole\n                        \n                    \n                \n            \n            \n                \ncheckAdminRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:150\n                        \n                    \n\n\n            \n                \n                        FUNCION DEPRECATED REALIZO UNA MEJOR LLAMADA isUserAdmin()\nFuncion checkAdminRole(), comprueba si el usuario logado, tiene como id_rol=1 para saber si es superadmin.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                boolean: True en caso de que el id_rol=1, en caso contrario devolverá false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthentication\n                        \n                    \n                \n            \n            \n                \ncheckAuthentication()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Funcion checkAuthentication(), se usa en el publicGuard, esa clase no se usa. Usamos isAuthenticated(url).\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPassToken\n                        \n                    \n                \n            \n            \n                \ncheckPassToken(tokenPasswd: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenPasswd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogin\n                        \n                    \n                \n            \n            \n                \ndoLogin(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Realiza el inicio de sesión enviando los datos al backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Los datos del formulario de inicio de sesión.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que representa la respuesta del backend.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogout\n                        \n                    \n                \n            \n            \n                \ndoLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:111\n                        \n                    \n\n\n            \n                \n                         Funcion doLogout() que realiza el logout del usuario logado en ese momento. Elimina el localStorage\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Realiza la consulta al backend para realizar el logout\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n                         Funcion getCurrenUser(), obtiene el usuario actual y devuelve una \"copia\" del user.\n\n\n                        \n                            Returns :         User | undefined\n\n                        \n                            \n                                User que representa al usuario actual si esta definido y undefined en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Funcion getUser(), Crea un structuredClone del usuario que reciba el servicio.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Devuelve una copia del usuario logado, o undefined en caso de que no este disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Funcion asincrona isAuthenticated(url) recibe la ruta para comprobar si el usuario esta autenticado o no, se usa para realizar comprobaciones en los guard.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RouterStateSnapshot que recibirá en los Guard.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True en caso de que el usuario este autenticado y false en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isLoged\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLoged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Funcion asincrona isLoged() Se usa en no-auth.guard.ts\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                boolean: true en caso de que el usuario este logeado y false en caso de que no lo este\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserAdmin\n                        \n                    \n                \n            \n            \n                \nisUserAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:182\n                        \n                    \n\n\n            \n                \n                         Funcion isUserAdmin() comprueba si el usuario logado tiene id_rol=1, superadmin.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Devuelve true en caso de que el id_rol sea '1' o false en caso contrario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { URL_API } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { User } from '../interfaces/user.interface';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\nimport { URL_BASE } from '../../../environments/environment';\nimport { ApiResponse } from '../../shared/interfaces/api-response';\nimport { CommonService } from 'src/app/shared/validators/common.service';\nimport { UserService } from '../../users/services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n// Servicio AuthService que realizará consultar al backend relacionadas con el usuario.\nexport class AuthService {\n\n  private user?: User | undefined;\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private commonService: CommonService,\n    private userService: UserService,\n    private httpClient: HttpClient\n  ) { }\n\n\n  /**\n   * Realiza el inicio de sesión enviando los datos al backend.\n   * @param data Los datos del formulario de inicio de sesión.\n   * @returns Un Observable que representa la respuesta del backend.\n   */\n  doLogin(data: any) {\n    const body = JSON.stringify(data);\n    return this.http.post(`${URL_API}/login.php`, body);\n  }\n\n\n  /**\n   *  Funcion getCurrenUser(), obtiene el usuario actual y devuelve una \"copia\" del user.\n   * @returns User que representa al usuario actual si esta definido y undefined en caso contrario.\n   */\n  getCurrentUser(): User | undefined {\n    if (!this.user) {\n      return undefined;\n    }\n    return structuredClone(this.user)\n  }\n\n  /**\n   * Funcion checkAuthentication(), se usa en el publicGuard, esa clase no se usa. Usamos isAuthenticated(url).\n   * @returns\n   */\n  checkAuthentication(): Observable {\n    // Si no hay token se devuelve false\n    if (!localStorage.getItem('token')) return of(false);\n\n    const TOKEN = localStorage.getItem('token');\n\n    return this.httpClient.get(`${URL_API}/usuario.php`)\n      .pipe(\n        tap(user => this.user = user), // Almacenamos el usuario en la propiedad de nuestro servicio.\n        map(user => !!user), // Es lo mismo que \"map ( user => user? true : false)\", si hay user se devuelve true, sino false\n        catchError(err => of(false))\n      )\n  }\n\n  /**\n   * Funcion asincrona isAuthenticated(url) recibe la ruta para comprobar si el usuario esta autenticado o no, se usa para realizar comprobaciones en los guard.\n   * @param url RouterStateSnapshot que recibirá en los Guard.\n   * @returns True en caso de que el usuario este autenticado y false en caso contrario.\n   */\n  public async isAuthenticated(url: string): Promise {\n    let rutaSeleccionada: string;\n    const promise = new Promise((resolve, reject) => {\n\n      rutaSeleccionada = url.substring(1);\n      rutaSeleccionada = rutaSeleccionada.split('/')[0];\n\n      this.http.get(`${URL_API}/check_usuarios.php?ruta=${rutaSeleccionada}`, { headers: this.commonService.getHeaders() }) //Llama a check_usuarios.php y realiza las comprobaciones respecto al usuario.\n        .subscribe((response: ApiResponse) => {\n          console.log(response)\n          resolve(response.ok);\n        });\n    });\n    return promise;\n  }\n\n  /**\n   * Funcion asincrona isLoged() Se usa en no-auth.guard.ts\n   * @returns boolean: true en caso de que el usuario este logeado y false en caso de que no lo este\n   */\n  public async isLoged(): Promise {\n    const promise = new Promise((resolve, reject) => {\n      this.http.get(`${URL_API}/check_usuarios.php?ruta=inicio`, { headers: this.commonService.getHeaders() })\n        .subscribe((response: ApiResponse) => {\n          console.log(response)\n          resolve(response.ok);\n        });\n    });\n    return promise;\n  }\n\n  /**\n   *  Funcion doLogout() que realiza el logout del usuario logado en ese momento. Elimina el localStorage\n   * @returns Realiza la consulta al backend para realizar el logout\n   */\n  doLogout() {\n    const body = new FormData();\n    const usuario = localStorage.getItem('usuario');\n    if (usuario !== null) {\n      body.append('user', usuario);\n    } else {\n      // Tratar el caso en que usuario sea null\n      console.error('El usuario no está definido en el localStorage.');\n      return;\n    }\n    // Borramos los datos del localStorage.\n    this.cookieService.deleteAll();\n    localStorage.clear();\n    // Realizamos el logout desde el backend.\n    return this.http.post(`${URL_API}/logout.php`, body);\n  }\n\n  // TODO\n  // resetPassword(formularioCorreo) {\n  //   const body = JSON.stringify(formularioCorreo);\n  //   return this.http.post(`${URL_API}/olvidar_pwd.php`, body, {headers: this.commonService.headers});\n  // }\n\n  checkPassToken(tokenPasswd: string) {\n    const body = JSON.stringify({ token: tokenPasswd });\n    return this.http.post(`${URL_API}/check_token_passwd.php`, body);\n  }\n\n  //TODO\n  // generateNewPass(data: any) {\n  //   const body = JSON.stringify(data);\n  //   return this.http.put(`${URL_API}/reset_pass.php`, body);\n  // }\n\n\n  /** FUNCION DEPRECATED REALIZO UNA MEJOR LLAMADA isUserAdmin()\n   * Funcion checkAdminRole(), comprueba si el usuario logado, tiene como id_rol=1 para saber si es superadmin.\n   * @returns boolean: True en caso de que el id_rol=1, en caso contrario devolverá false.\n   */\n  checkAdminRole(): Promise {\n    return new Promise((resolve, reject) => {\n      const user = this.getCurrentUser();\n      console.log(user)\n      if (user && user.id_rol == '1') {\n        resolve(true);\n      } else {\n        resolve(false)\n      }\n      console.log(resolve)\n    })\n  }\n\n  //Comprobaciones para AdminGuard, recogemos la id_rol del usuario actual.\n  /**\n   * Funcion getUser(), Crea un structuredClone del usuario que reciba el servicio.\n   * @returns Devuelve una copia del usuario logado, o undefined en caso de que no este disponible.\n   */\n  getUser(): Observable {\n    console.log(this.user)\n    if (this.user) {\n      return of(structuredClone(this.user));\n    } else {\n      // Si el usuario no está disponible, puedes devolver un observable vacío o un observable de 'undefined'\n      return of(undefined);\n    }\n  }\n\n  /**\n   *  Funcion isUserAdmin() comprueba si el usuario logado tiene id_rol=1, superadmin.\n   * @returns Devuelve true en caso de que el id_rol sea '1' o false en caso contrario.\n   */\n  isUserAdmin(): Observable {\n    return this.getUser().pipe(\n      map(user2 => !!user2 && user2.id_rol == '1'),\n      catchError(() => of(false)) // Manejar cualquier error devolviendo false\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// get curretUser(): User | undefined {\n//   if ( !this.user ) return undefined;\n\n//   return structuredClone( this.user )\n// }\n\n// constructor( private http: HttpClient,\n//              private router: Router) { }\n\n// login(): Observable {\n//   return this.http.get(`${ this.baseUrl }/users/1`)\n//     .pipe(\n//       tap ( user => this.user = user),\n//       tap ( user => localStorage.setItem('token', user.id.toString()))\n//     );\n// }\n\n\n\n// get currentUser(): User | undefined{\n//   if(!this.user) return undefined;\n//   return structuredClone( this.user )\n// }\n\n// logout() : void{\n//   this.user = undefined\n//   localStorage.clear()\n// }\n\n// isLogged() : boolean {\n//   return !!this.user\n// }\n\n// checkAuthentication() : Observable {\n//   if (!localStorage.getItem('token')) return of (false);\n\n//   const token = localStorage.getItem('token')\n\n//   return this.http.get(`${ this.baseUrl}/users/1`)\n//   .pipe(\n//     tap( user => this.user = user),\n//     map( user => !!user),\n//     catchError ( err => of(false))\n//     )\n// }\n\n\n// logout(): void {\n//   this.user = undefined;\n//   localStorage.removeItem('token');\n//   this.router.navigate(['./auth/login']);\n// }\n\n//   verificaAutenticacion(): Observable{\n\n//     if ( !localStorage.getItem('token' )){\n//       return of (false);\n//     }\n\n//     return this.http.get(`${ this.baseUrl }/users/1`).pipe(\n//       map( user => {\n//         console.log('map', user);\n//         this.user = user;\n//         return true;\n//       })\n//     );\n//   }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/components/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                film-card\n            \n\n\n\n            \n                styleUrls\n                ./card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                circleBottom\n                            \n                            \n                                circleLeft\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilmById\n                            \n                            \n                                getPercentageRating\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                film\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/components/card/card.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        film\n                    \n                \n                \n                    \n                        Type :     Film | DataFilm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/film/components/card/card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilmById\n                        \n                    \n                \n            \n            \n                \ngetFilmById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/components/card/card.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Método getFilmById para obtener detalles de una película por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPercentageRating\n                        \n                    \n                \n            \n            \n                \ngetPercentageRating(voteAverage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/components/card/card.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Método getPercentageRating para obtener el porcentaje de calificación de la película.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                voteAverage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El promedio de votos de la película.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                La calificación de la película como un porcentaje (cadena).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/components/card/card.component.ts:25\n                        \n                    \n\n\n            \n                \n                        Método ngOnInit que se ejecuta al inicializar el componente.\nVerifica si la propiedad film está definida.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        circleBottom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 45\n                    \n                \n                    \n                        \n                                Defined in src/app/film/components/card/card.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        circleLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/film/components/card/card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { DataFilm, Film } from '../../interfaces/film';\nimport { FilmService } from '../../services/film.service';\nimport { FilmImgPipe } from '../../pipes/film-img.pipe';\n\n@Component({\n  selector: 'film-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n  @Input()\n  public film!: Film | DataFilm; // Propiedad de entrada para recibir datos de película\n\n  //Posiciones del circulo de calificacion.\n  circleLeft: number = 5;\n  circleBottom: number = 45;\n\n  constructor(private filmService: FilmService) { }\n\n  /**\n   * Método ngOnInit que se ejecuta al inicializar el componente.\n   * Verifica si la propiedad film está definida.\n   */\n  ngOnInit(): void {\n    if (!this.film) throw new Error('Method not implemented.');\n  }\n\n  /**\n   * Método getPercentageRating para obtener el porcentaje de calificación de la película.\n   * @param voteAverage El promedio de votos de la película.\n   * @returns La calificación de la película como un porcentaje (cadena).\n   */\n  getPercentageRating(voteAverage: number): string {\n    const percentage = Math.round(voteAverage * 10); // Redondear al entero más cercano\n    return percentage.toString(); // Convertir a cadena y agregar el símbolo de porcentaje\n  }\n\n  /**\n   * Método getFilmById para obtener detalles de una película por su ID.\n   * @param id El ID de la película.\n   */\n  getFilmById(id: number): void {\n    this.filmService.getFilmById(id)\n  }\n}\n\n\n\n    \n\n    \n        \n  \n  \n    \n    {{\n      getPercentageRating(film.vote_average) }}\n    No rate\n  \n  \n\n  \n    \n       {{ film.original_title}}\n      \n      {{ film.release_date.slice(0,4) }}\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./card.component.css\n                \n                .mat-card-title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nimg{\n  cursor: pointer;\n}\n\n\n.rating-circle {\n  position: absolute;\n  width: 45px; /* Ajusta el tamaño del círculo según tus necesidades */\n  height: 45px; /* Ajusta el tamaño del círculo según tus necesidades */\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.75); /* Color de fondo del círculo */\n  overflow: hidden;\n}\n\n.border-fill {\n  position: absolute;\n  top: 5;\n  left: 5;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 3px solid transparent; /* Ancho y estilo del borde */\n}\n\n.rating-text {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 16px; /* Ajusta el tamaño del texto según tus necesidades */\n  font-weight: bold;\n  color: #ffffff; /* Color del texto */\n}\n.no-rate {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%); /* Ajusta el tamaño del texto según tus necesidades */\n  color: #ffffff; /* Color del texto */\n}\n\n.rating-circle[data-rating^=\"0.\"] .border-fill { border-color: #ff0000; } /* Color del borde para nota 0-0.9 */\n.rating-circle[data-rating^=\"1.\"] .border-fill { border-color: #ff3300; } /* Color del borde para nota 1-1.9 */\n.rating-circle[data-rating^=\"2.\"] .border-fill { border-color: #ff6600; } /* Color del borde para nota 2-2.9 */\n.rating-circle[data-rating^=\"3.\"] .border-fill { border-color: #ff9900; } /* Color del borde para nota 3-3.9 */\n.rating-circle[data-rating^=\"4.\"] .border-fill { border-color: #ffcc00; } /* Color del borde para nota 4-4.9 */\n.rating-circle[data-rating^=\"5.\"] .border-fill { border-color: #ffff00; } /* Color del borde para nota 5-5.9 */\n.rating-circle[data-rating^=\"6.\"] .border-fill { border-color: #ccff00; } /* Color del borde para nota 6-6.9 */\n.rating-circle[data-rating^=\"7.\"] .border-fill { border-color: #99ff00; } /* Color del borde para nota 7-7.9 */\n.rating-circle[data-rating^=\"8.\"] .border-fill { border-color: #66ff00; } /* Color del borde para nota 8-8.9 */\n.rating-circle[data-rating^=\"9.\"] .border-fill { border-color: #33ff00; } /* Color del borde para nota 9-9.9 */\n.rating-circle[data-rating=\"10\"] .border-fill { border-color: #00ff00; } /* Color del borde para nota 10 */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{      getPercentageRating(film.vote_average) }}    No rate                 {{ film.original_title}}            {{ film.release_date.slice(0,4) }}        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/validators/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                concat\n                            \n                            \n                                    Static\n                                distribute\n                            \n                            \n                                    Static\n                                fill\n                            \n                            \n                                headers\n                            \n                            \n                                    Static\n                                quotrem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64ToArrayBuffer\n                            \n                            \n                                base64toPDF\n                            \n                            \n                                    Static\n                                divideCurrencyEvenly\n                            \n                            \n                                    Static\n                                divideEvenly\n                            \n                            \n                                    Static\n                                fechaFormateada\n                            \n                            \n                                fechaFormateada\n                            \n                            \n                                getHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/validators/common.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        base64ToArrayBuffer\n                        \n                    \n                \n            \n            \n                \nbase64ToArrayBuffer(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64toPDF\n                        \n                    \n                \n            \n            \n                \nbase64toPDF(data: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        divideCurrencyEvenly\n                        \n                    \n                \n            \n            \n                \n                        \n                    divideCurrencyEvenly(numerator: number, divisor: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                numerator\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                divisor\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        divideEvenly\n                        \n                    \n                \n            \n            \n                \n                        \n                    divideEvenly(numerator: number, minPartSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                numerator\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minPartSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fechaFormateada\n                        \n                    \n                \n            \n            \n                \n                        \n                    fechaFormateada(inputDeFecha: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputDeFecha\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fechaFormateada\n                        \n                    \n                \n            \n            \n                \nfechaFormateada(inputDeFecha: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputDeFecha\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/validators/common.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        concat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validators/common.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        distribute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validators/common.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fill\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validators/common.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpHeaders\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validators/common.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        quotrem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/validators/common.service.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  headers: HttpHeaders;\n\n  constructor(private cookieService: CookieService) {\n    this.headers = new HttpHeaders({\n      'Content-Type':  'application/json',\n      Authorization : `Bearer ${localStorage.getItem('token')}`\n    });\n\n    // console.log(this.cookieService.get('token'));\n   }\n\n  public static divideEvenly(numerator: number, minPartSize: number): number[] {\n    if (numerator / minPartSize  {\n      return parseFloat((v / 100).toFixed(2));\n    });\n  }\n\n  // devuelve la fecha en formato YYYY-MM-DD (string) teniendo en cuenta el UTC para las zonas horarias\n  public static fechaFormateada(inputDeFecha: Date): string {\n    return new Date(new Date(inputDeFecha).getTime() - (new Date(inputDeFecha).getTimezoneOffset() * 60000))\n      .toISOString()\n      .split('T')[0];\n  }\n\n  public static fill = (n: number, x: any): any[] =>\n    Array(n).fill(x)\n\n  public static concat = (xs: any[], ys: any[]): any[] =>\n    xs.concat(ys)\n\n  public static quotrem = (n: number, d: number): [number, number] =>\n    [Math.floor(n / d)\n      , Math.floor(n % d\n        )\n    ]\n\n  public static distribute = (p: number, d: number, n: number): number[] => {\n    const e =\n      Math.pow(10, p);\n\n    const [q, r] =\n      CommonService.quotrem(n * e, d);\n\n    return CommonService.concat\n      (CommonService.fill(r, (q + 1) / e)\n        , CommonService.fill(d - r, q / e)\n      );\n  }\n\n  getHeaders() {\n    return new HttpHeaders({\n      'Content-Type':  'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    });\n  }\n\n  base64toPDF(data: string, id: string): void {\n    const bufferArray = this.base64ToArrayBuffer(data);\n    const blobStore = new Blob([bufferArray], { type: 'application/pdf' });\n    //@ts-ignore\n    window.navigator.msSaveOrOpenBlob(blobStore, `${id}.pdf`);\n    return;\n  }\n\n  base64ToArrayBuffer(data: any) {\n      const bString = window.atob(data);\n      const bLength = bString.length;\n      const bytes = new Uint8Array(bLength);\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataFilm.html":{"url":"interfaces/DataFilm.html","title":"interface - DataFilm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataFilm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/film.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            adult\n                                        \n                                \n                                \n                                        \n                                            backdrop_path\n                                        \n                                \n                                \n                                        \n                                            belongs_to_collection\n                                        \n                                \n                                \n                                        \n                                            budget\n                                        \n                                \n                                \n                                        \n                                            genres\n                                        \n                                \n                                \n                                        \n                                            homepage\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imdb_id\n                                        \n                                \n                                \n                                        \n                                            original_language\n                                        \n                                \n                                \n                                        \n                                            original_title\n                                        \n                                \n                                \n                                        \n                                            overview\n                                        \n                                \n                                \n                                        \n                                            popularity\n                                        \n                                \n                                \n                                        \n                                            poster_path\n                                        \n                                \n                                \n                                        \n                                            release_date\n                                        \n                                \n                                \n                                        \n                                            revenue\n                                        \n                                \n                                \n                                        \n                                            runtime\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tagline\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                                \n                                        \n                                            vote_average\n                                        \n                                \n                                \n                                        \n                                            vote_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adult\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adult:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop_path:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        belongs_to_collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        belongs_to_collection:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:     Genre[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Genre[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homepage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homepage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imdb_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imdb_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popularity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popularity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poster_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        poster_path:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revenue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revenue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runtime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        runtime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tagline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vote_average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vote_average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vote_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vote_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Film {\n  id: number,\n  original_language: string,\n  original_title: string,\n  overview: string,\n  popularity: number,\n  poster_path: string,\n  release_date: string,\n  title: string,\n  video: boolean,\n  vote_average:number,\n  vote_count: number,\n  backdrop_path: string | null\n}\n\nexport interface Page{\n  total_pages: number;\n}\n\nexport interface DataFilm {\n  adult: boolean;\n  backdrop_path: string | null;\n  belongs_to_collection: any;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string | null;\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteUserComponent.html":{"url":"components/DeleteUserComponent.html","title":"component - DeleteUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/delete-user/delete-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-user\n            \n\n\n\n            \n                styleUrls\n                ./delete-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./delete-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, user: User, userService: UserService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/delete-user/delete-user.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/delete-user/delete-user.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Funcion que elimina un usuario, realizara una llamada al UserService.\nMostrará un snackbar con el resultado de la operación.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/delete-user/delete-user.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/delete-user/delete-user.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Método que cierra el dialogo sin eliminar el usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/delete-user/delete-user.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/delete-user/delete-user.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from '../services/users.service';\nimport { User } from 'src/app/auth/interfaces/user.interface';\nimport { CLOSE } from 'src/app/shared/messages';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private userService: UserService,\n    private snackBar: MatSnackBar\n) { }\n\nngOnInit() {\n}\n\n/**\n * Funcion que elimina un usuario, realizara una llamada al UserService.\n * Mostrará un snackbar con el resultado de la operación.\n */\nasync deleteUser() {\n  const RESP = await this.userService\n    .deleteUsuario(this.user)\n    .toPromise();\n  if (RESP && RESP.message) {\n    if (RESP.ok) {\n      this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n      this.dialogRef.close({ ok: RESP.ok, data: RESP.data });\n    } else {\n      this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n    }\n  }\n}\n\n/**\n * Método que cierra el dialogo sin eliminar el usuario.\n */\nonNoClick() {\nthis.dialogRef.close({ok: false});\n}\n}\n\n    \n\n    \n        \n  Borrar usuario\n\n  ¡Atención! Se eliminará el usuario: {{user.usuario}} \n\n   Esto sirve para eliminar usuarios creados por error, en otro caso es recomendable deshabilitar el usuario desde el panel de editar.\n\n  \n      Eliminar\n      Cancelar\n  \n\n\n    \n\n    \n                \n                    ./delete-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Borrar usuario  ¡Atención! Se eliminará el usuario: {{user.usuario}}    Esto sirve para eliminar usuarios creados por error, en otro caso es recomendable deshabilitar el usuario desde el panel de editar.        Eliminar      Cancelar  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeleteUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserComponent.html":{"url":"components/EditUserComponent.html","title":"component - EditUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/edit-user/edit-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user\n            \n\n\n\n            \n                styleUrls\n                ./edit-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                roles\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    \n                                    Public\n                                user\n                            \n                            \n                                usuarioForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmAdd\n                            \n                            \n                                    Async\n                                getRoles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, servicioRoles: RolesService, userService: UserService, snackBar: MatSnackBar, user: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/edit-user/edit-user.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        servicioRoles\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmAdd\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/edit-user/edit-user.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Método para confirmar la edición de usuario.\nVerifica si el formulario es válido, envía la solicitud de edición al servicio y maneja la respuesta.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getRoles\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/edit-user/edit-user.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Método para obtener la lista de roles disponibles.\nLlama al servicio para obtener los roles y maneja la respuesta.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/edit-user/edit-user.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Método que se llama cuando se inicializa el componente.\nInicializa el formulario para editar un usuario existente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/edit-user/edit-user.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Método para cerrar el cuadro de diálogo sin guardar los cambios de edicion.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/edit-user/edit-user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/edit-user/edit-user.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/edit-user/edit-user.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/edit-user/edit-user.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/edit-user/edit-user.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { RolesService } from '../services/roles.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from '../services/users.service';\nimport { User } from 'src/app/auth/interfaces/user.interface';\nimport { CLOSE, INVALID_FORM } from 'src/app/shared/messages';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  usuarioForm!: FormGroup; // Formulario para editar usuario\n  roles!: Rol[]; // Lista de roles disponibles\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private servicioRoles: RolesService,\n    private userService: UserService,\n    public snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public user: User\n  ) { }\n\n  /**\n   * Método que se llama cuando se inicializa el componente.\n   * Inicializa el formulario para editar un usuario existente.\n   */\n  ngOnInit() {\n    // Inicialización del formulario\n    this.usuarioForm = new FormGroup({\n      id_usuario: new FormControl(this.user.id_usuario, [\n        Validators.required,\n      ]),\n      usuario: new FormControl(this.user.usuario, [\n        Validators.required,\n        Validators.email,\n      ]),\n      nombre_publico: new FormControl(this.user.nombre_publico),\n      password: new FormControl(''),\n      habilitado: new FormControl(Number(this.user.habilitado) === 1, [\n        Validators.required,\n      ]),\n      id_rol: new FormControl(this.user.id_rol, [Validators.required]),\n      observaciones: new FormControl(this.user.observaciones),\n    });\n\n    this.getRoles();\n  }\n\n  /**\n   * Método para obtener la lista de roles disponibles.\n   * Llama al servicio para obtener los roles y maneja la respuesta.\n   */\n  async getRoles() {\n    const RESPONSE = await this.servicioRoles.getAllRoles().toPromise();\n    if (RESPONSE) {\n      if (RESPONSE.ok) {\n        this.roles = RESPONSE.data as Rol[];\n      } else {\n        // Manejar el caso en el que RESPONSE.ok es falso\n        console.error(`Error al obtener roles: ${RESPONSE.message}`);\n      }\n    } else {\n      // Manejar el caso en el que RESPONSE es undefined\n      console.error('La respuesta de getAllRoles es undefined');\n    }\n  }\n\n\n  /**\n   * Método para confirmar la edición de usuario.\n   * Verifica si el formulario es válido, envía la solicitud de edición al servicio y maneja la respuesta.\n   */\n  async confirmAdd() {\n    if (this.usuarioForm.valid) {\n      const usuario = this.usuarioForm.value;\n\n      const RESP = await this.userService.editUsuario(usuario).toPromise();\n      if (RESP && RESP.message) {\n        if (RESP.ok) {\n          this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n          this.dialogRef.close({ ok: RESP.ok, data: RESP.data });\n        } else {\n          this.snackBar.open(RESP.message, CLOSE, { duration: 5000 });\n        }\n      } else {\n        // Manejar el caso en el que RESP es undefined\n        console.error('La respuesta de editUsuario es undefined');\n      }\n    } else {\n      this.snackBar.open(INVALID_FORM, CLOSE, { duration: 5000 });\n    }\n  }\n\n  /**\n   * Método para cerrar el cuadro de diálogo sin guardar los cambios de edicion.\n   */\n  onNoClick(): void {\n    this.dialogRef.close({ ok: false });\n  }\n\n}\n\n    \n\n    \n        \n  Editar usuario\n\n  \n\n      \n          \n              \n          \n      \n\n      \n          \n              \n          \n      \n\n      \n          \n              \n          \n      \n\n      \n          \n              Rol\n              \n                  \n                      {{rol.rol}}\n                  \n              \n          \n      \n\n      \n          Usuario habilitado\n      \n\n      \n          \n              \n          \n      \n\n      \n          Guardar\n          Cancelar\n      \n\n  \n\n\n    \n\n    \n                \n                    ./edit-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Editar usuario                                                                                                                                                                          Rol                                                      {{rol.rol}}                                                                Usuario habilitado                                                                    Guardar          Cancelar        '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Error404PageComponent.html":{"url":"components/Error404PageComponent.html","title":"component - Error404PageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Error404PageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/error404-page/error404-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error404-page\n            \n\n\n\n            \n                styleUrls\n                ./error404-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error404-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error404-page',\n  templateUrl: './error404-page.component.html',\n  styleUrls: ['./error404-page.component.css']\n})\n\n/**\n * Class Error404PageComponent\n * Se usará para redirigir a este componente en caso de que se quiera dirigir a una url no disponible.\n */\n\nexport class Error404PageComponent {\n\n}\n\n    \n\n    \n        \n  \n      \n      \n          404\n      \n  \n  \n      \n          UPSSSS!!!! We cant find this url, please get out.\n      \n  SACAME DE AQUI!.\n  \n\n\n    \n\n    \n                \n                    ./error404-page.component.css\n                \n                body {\n  margin: 0;\n  padding: 0;\n  background-color: #1a1a1a; }\n\n.conten {\n  position: fixed;\n  top: 4em;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  background-color: #1a1a1a;  }\n  .conten__img {\n    width: 100%;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center; }\n    .conten__img img {\n      width: 300px;\n      display: block;\n      -webkit-animation: animates 2s linear infinite alternate;\n      animation: animates 2s linear infinite alternate; }\n  .conten__number {\n    position: absolute;\n    font-size: 5.5rem;\n    font-family: \"Gill Sans\", sans-serif;\n    font-weight: 600;\n    top: 9rem;\n    color: rgba(255, 255, 255, 0.5);\n    -webkit-animation: animatestext 2s linear infinite alternate;\n    animation: animatestext 2s linear infinite alternate; }\n  .conten__error {\n    color: #ffffff;\n    width: 50%;\n    margin: 2em auto;\n    font-family: \"Gill Sans\", sans-serif; }\n  .conten__button {\n    background-color: #0077d8f4;\n    color: #ffffff;\n    font-weight: 600;\n    font-family: \"Gill Sans\", sans-serif;\n    padding: 0.8em 1em;\n    border-radius: 50px;\n    text-decoration: none; }\n\n@-webkit-keyframes animates {\n  0% {\n    -webkit-transform: translateX(5%);\n    transform: translateX(5%); }\n  100% {\n    -webkit-transform: translateX(-5%);\n    transform: translateX(-5%); } }\n\n@keyframes animates {\n  0% {\n    -webkit-transform: translateX(5%);\n    transform: translateX(5%); }\n  100% {\n    -webkit-transform: translateX(-5%);\n    transform: translateX(-5%); } }\n\n@-webkit-keyframes animatestext {\n  0% {\n    -webkit-transform: rotate(5deg);\n    transform: rotate(5deg); }\n  100% {\n    -webkit-transform: rotate(-5deg);\n    transform: rotate(-5deg); } }\n\n@keyframes animatestext {\n  0% {\n    -webkit-transform: rotate(5deg);\n    transform: rotate(5deg); }\n  100% {\n    -webkit-transform: rotate(-5deg);\n    transform: rotate(-5deg); } }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                          UPSSSS!!!! We cant find this url, please get out.        SACAME DE AQUI!.  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Error404PageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavPageComponent.html":{"url":"components/FavPageComponent.html","title":"component - FavPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/pages/fav-page/fav-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fav-page\n            \n\n\n\n            \n                styleUrls\n                ./fav-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./fav-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filmArray\n                            \n                            \n                                filmListIds\n                            \n                            \n                                id_usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDataFilm\n                            \n                            \n                                    Async\n                                getIdsFavoritas\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService, favService: FavService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/pages/fav-page/fav-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favService\n                                                  \n                                                        \n                                                                        FavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDataFilm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDataFilm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/fav-page/fav-page.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Método para obtener los detalles de las películas favoritas, usando las ids almacenadas en filmListIds[]\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getIdsFavoritas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIdsFavoritas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/fav-page/fav-page.component.ts:30\n                        \n                    \n\n\n            \n                \n                         Método para obtener los IDs de las películas favoritas del usuario actual y almacenar esas ids en el filmListIds[]\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/fav-page/fav-page.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filmArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataFilm[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/fav-page/fav-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filmListIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/fav-page/fav-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/fav-page/fav-page.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataFilm, Film } from '../../interfaces/film';\nimport { User } from '../../../auth/interfaces/user.interface';\nimport { FavService } from '../../services/fav.service';\nimport { FilmService } from '../../services/film.service';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'fav-page',\n  templateUrl: './fav-page.component.html',\n  styleUrls: ['./fav-page.component.css']\n})\nexport class FavPageComponent {\n  public filmArray: DataFilm[] = []; // Array para almacenar las películas favoritas\n  filmListIds: number[] = []\n  id_usuario: string | null; // ID del usuario actual\n\n  constructor(private filmService: FilmService, private favService: FavService, private authService: AuthService) {\n    this.id_usuario = localStorage.getItem('id_usuario') // Obtener el ID del usuario del almacenamiento local\n  }\n\n  ngOnInit() {\n    this.getIdsFavoritas()\n  }\n\n  /**\n   *  Método para obtener los IDs de las películas favoritas del usuario actual y almacenar esas ids en el filmListIds[]\n   */\n  async getIdsFavoritas() {\n    const RESPONSE = await this.favService.getFavs(this.id_usuario).toPromise();\n    if (RESPONSE) {\n      this.filmListIds = RESPONSE.data.map((item: { id_pelicula: any }) => item.id_pelicula);\n    }\n    this.getDataFilm();\n  }\n  /**\n   * Método para obtener los detalles de las películas favoritas, usando las ids almacenadas en filmListIds[]\n   */\n  async getDataFilm() {\n    for (let i in this.filmListIds) {\n      const RESPONSE = await this.filmService.getFilmById(this.filmListIds[i]).subscribe(\n        (pelicula) => {\n          if (pelicula != null) {\n            this.filmArray.push(pelicula) // Agregar la película a la lista de películas favoritas si se encuentra\n          }\n        }\n      )\n    }\n  }\n}\n\n    \n\n    \n        \n   0; else emptyState\">\n    \n      \n    \n  \n  \n    \n      No films added at this moment, click here to search search\n    \n  \n\n\n    \n\n    \n                \n                    ./fav-page.component.css\n                \n                .empty-state-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 100px;\n}\n\n.empty-state-container p {\n  font-size: 18px;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.empty-state-container a {\n  color: #007bff;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0; else emptyState\">                            No films added at this moment, click here to search search      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavService.html":{"url":"injectables/FavService.html","title":"injectable - FavService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/services/fav.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                favList\n                            \n                            \n                                idFilmList\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFav\n                            \n                            \n                                deleteFav\n                            \n                            \n                                getFavs\n                            \n                            \n                                    Async\n                                getIdsFavoritas\n                            \n                            \n                                insertarFav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, commonService: CommonService, userService: UserService, filmService: FilmService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/services/fav.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFav\n                        \n                    \n                \n            \n            \n                \naddFav(id_usuario: string | null, id_pelicula: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/fav.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Metodo que añade una película a la lista de favoritos de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id_usuario\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario al que se añade la película como favorita.\n\n                                            \n                                        \n                                        \n                                                id_pelicula\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película que se añade como favorita.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite una ApiResponse.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFav\n                        \n                    \n                \n            \n            \n                \ndeleteFav(id_usuario: string | null, id_pelicula: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/fav.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Metodo que elimina una película de la lista de favoritos de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id_usuario\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario del que se elimina la película favorita.\n\n                                            \n                                        \n                                        \n                                                id_pelicula\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película que se elimina de la lista de favoritos.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite una ApiResponse.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavs\n                        \n                    \n                \n            \n            \n                \ngetFavs(id_usuario: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/fav.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Metodo que obtiene las películas favoritas de un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id_usuario\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario del que se obtienen las películas favoritas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite una ApiResponse con las películas favoritas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getIdsFavoritas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIdsFavoritas(id_usuario: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/fav.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Funcion asincrona que obtiene los IDs de las películas favoritas de un usuario y las almacena en idFilmList[]\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id_usuario\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario del que se obtienen las películas favoritas.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertarFav\n                        \n                    \n                \n            \n            \n                \ninsertarFav(id_usuario: string | null, id_pelicula: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/fav.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Metodo que inserta una película como favorita para un usuario en el backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id_usuario\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario al que se añade la película como favorita.\n\n                                            \n                                        \n                                        \n                                                id_pelicula\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película que se añade como favorita.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite una ApiResponse.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/fav.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Film[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/fav.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFilmList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[] | number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/fav.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/fav.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/fav.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from 'src/app/auth/interfaces/user.interface';\nimport { Film } from '../interfaces/film';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonService } from 'src/app/shared/validators/common.service';\nimport { UserService } from 'src/app/users/services/users.service';\nimport { FilmService } from './film.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiResponse } from 'src/app/shared/interfaces/api-response';\nimport { URL_API } from 'src/environments/environment';\nimport { AuthService } from 'src/app/auth/services/auth.service';\n\nconst ENDPOINT = 'fav';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavService {\n  user!: User;\n  users: User[] = [];\n  currentUser!: User;\n\n  idFilmList: string[] | number[] = [];\n  favList: Film[] = [];\n\n  constructor(private http: HttpClient,\n              private commonService: CommonService,\n              private userService: UserService,\n              private filmService: FilmService,\n              private authService : AuthService,\n              ) { }\n\n/**\n   * Metodo que obtiene las películas favoritas de un usuario.\n   * @param id_usuario El ID del usuario del que se obtienen las películas favoritas.\n   * @returns Un Observable que emite una ApiResponse con las películas favoritas.\n   */\n  getFavs(id_usuario: string  | null) {\n    return this.http.get(`${URL_API}/${ENDPOINT}.php?id_usuario=${id_usuario}` , { headers: this.commonService.getHeaders() });\n  }\n\n  /**\n   * Metodo que añade una película a la lista de favoritos de un usuario.\n   * @param id_usuario El ID del usuario al que se añade la película como favorita.\n   * @param id_pelicula El ID de la película que se añade como favorita.\n   * @returns Un Observable que emite una ApiResponse.\n   */\n  addFav(id_usuario: string | null , id_pelicula: string| null) {\n    console.log(this.http.post(`${URL_API}/${ENDPOINT}.php`,  { headers: this.commonService.headers }))\n    return this.http.post(`${URL_API}/${ENDPOINT}.php?id_usuario=${id_usuario}&id_pelicula=${id_pelicula}`, { headers: this.commonService.getHeaders() });\n  }\n\n  /**\n   * Metodo que elimina una película de la lista de favoritos de un usuario.\n   * @param id_usuario El ID del usuario del que se elimina la película favorita.\n   * @param id_pelicula El ID de la película que se elimina de la lista de favoritos.\n   * @returns Un Observable que emite una ApiResponse.\n   */\n  deleteFav(id_usuario: string |null , id_pelicula : string | null) {\n    return this.http.delete(`${URL_API}/fav.php?id_usuario=${id_usuario}&id_pelicula=${id_pelicula}`, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Metodo que inserta una película como favorita para un usuario en el backend.\n   * @param id_usuario El ID del usuario al que se añade la película como favorita.\n   * @param id_pelicula El ID de la película que se añade como favorita.\n   * @returns Un Observable que emite una ApiResponse.\n   */\n  insertarFav(id_usuario: string | null , id_pelicula: string| null) {\n    const body = JSON.stringify({ id_usuario: id_usuario, id_pelicula: id_pelicula });\n    console.log(body)\n\n    return this.http.post(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Funcion asincrona que obtiene los IDs de las películas favoritas de un usuario y las almacena en idFilmList[]\n   * @param id_usuario El ID del usuario del que se obtienen las películas favoritas.\n   */\n  async getIdsFavoritas(id_usuario: string) {\n    const RESPONSE = await this.getFavs(id_usuario).toPromise();\n    if (RESPONSE !== undefined && RESPONSE.permises !== undefined && RESPONSE.ok) {\n      this.idFilmList = RESPONSE.data.map((item: { id_pelicula: any }) => item.id_pelicula);\n    }\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Film.html":{"url":"interfaces/Film.html","title":"interface - Film","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Film\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/film.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backdrop_path\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            original_language\n                                        \n                                \n                                \n                                        \n                                            original_title\n                                        \n                                \n                                \n                                        \n                                            overview\n                                        \n                                \n                                \n                                        \n                                            popularity\n                                        \n                                \n                                \n                                        \n                                            poster_path\n                                        \n                                \n                                \n                                        \n                                            release_date\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                                \n                                        \n                                            vote_average\n                                        \n                                \n                                \n                                        \n                                            vote_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backdrop_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backdrop_path:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        original_title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        original_title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overview:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popularity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popularity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        poster_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        poster_path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        release_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        release_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vote_average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vote_average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vote_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vote_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Film {\n  id: number,\n  original_language: string,\n  original_title: string,\n  overview: string,\n  popularity: number,\n  poster_path: string,\n  release_date: string,\n  title: string,\n  video: boolean,\n  vote_average:number,\n  vote_count: number,\n  backdrop_path: string | null\n}\n\nexport interface Page{\n  total_pages: number;\n}\n\nexport interface DataFilm {\n  adult: boolean;\n  backdrop_path: string | null;\n  belongs_to_collection: any;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string | null;\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilmImgPipe.html":{"url":"pipes/FilmImgPipe.html","title":"pipe - FilmImgPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilmImgPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/film/pipes/film-img.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filmImg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(posterPath: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pipes/film-img.pipe.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                posterPath\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Film } from '../interfaces/film';\nimport { FilmService } from '../services/film.service';\n\n@Pipe({\n  name: 'filmImg'\n})\n\n\n//FilmImgPipe que transforma una cadena de string, en caso de que lo que reciba, su final sea \"null\" modifica la ruta a no-image.jpg para mostrar otra imagen\n/**\n   * Transforma la ruta de la imagen de la película.\n   * Si la ruta termina en \"null\", se modifica para mostrar una imagen de \"no-image.jpg\".\n   * @param posterPath Ruta de la imagen de la película.\n   * @returns La ruta modificada o la original.\n   */\nexport class FilmImgPipe implements PipeTransform {\n  transform(posterPath : string | null): string {\n      if(posterPath?.endsWith(\"null\")){\n        console.log('noimg')\n        return '/assets/no-image.jpg';\n      }else{\n       return \"https://image.tmdb.org/t/p/w500/\" + posterPath\n      }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilmModule.html":{"url":"modules/FilmModule.html","title":"module - FilmModule","body":"\n                   \n\n\n\n\n    Modules\n    FilmModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilmModule\n\n\n\ncluster_FilmModule_imports\n\n\n\ncluster_FilmModule_declarations\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nFilmModule\n\nFilmModule\n\nFilmModule -->\n\nCardComponent->FilmModule\n\n\n\n\n\nFavPageComponent\n\nFavPageComponent\n\nFilmModule -->\n\nFavPageComponent->FilmModule\n\n\n\n\n\nFilmImgPipe\n\nFilmImgPipe\n\nFilmModule -->\n\nFilmImgPipe->FilmModule\n\n\n\n\n\nFilmPageComponent\n\nFilmPageComponent\n\nFilmModule -->\n\nFilmPageComponent->FilmModule\n\n\n\n\n\nGenreComponent\n\nGenreComponent\n\nFilmModule -->\n\nGenreComponent->FilmModule\n\n\n\n\n\nListPageComponent\n\nListPageComponent\n\nFilmModule -->\n\nListPageComponent->FilmModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nFilmModule -->\n\nSearchPageComponent->FilmModule\n\n\n\n\n\nFilmRoutingModule\n\nFilmRoutingModule\n\nFilmModule -->\n\nFilmRoutingModule->FilmModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFilmModule -->\n\nMaterialModule->FilmModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/film/film.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            FavPageComponent\n                        \n                        \n                            FilmImgPipe\n                        \n                        \n                            FilmPageComponent\n                        \n                        \n                            GenreComponent\n                        \n                        \n                            ListPageComponent\n                        \n                        \n                            SearchPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilmRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilmPageComponent } from './pages/film-page/film-page.component';\nimport { LayoutPageComponent } from '../shared/pages/layout-page/layout-page.component';\nimport { ListPageComponent } from './pages/list-page/list-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { CardComponent } from './components/card/card.component';\nimport { MaterialModule } from '../material/material.module';\nimport { FilmRoutingModule } from './film-routing.module';\nimport { FilmImgPipe } from './pipes/film-img.pipe';\nimport { GenreComponent } from './pages/genre-page/genre.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FavPageComponent } from './pages/fav-page/fav-page.component';\n\n\n\n@NgModule({\n  declarations: [\n    FilmPageComponent,\n    LayoutPageComponent,\n    ListPageComponent,\n    SearchPageComponent,\n    GenreComponent,\n    CardComponent,\n    FilmImgPipe,\n    FavPageComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FilmRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers : [\n    FilmImgPipe\n  ]\n})\nexport class FilmModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilmPageComponent.html":{"url":"components/FilmPageComponent.html","title":"component - FilmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/pages/film-page/film-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                film-page\n            \n\n\n\n            \n                styleUrls\n                ./film-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./film-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fav\n                            \n                            \n                                id_film\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFav\n                            \n                            \n                                checkFav\n                            \n                            \n                                    Async\n                                deleteFav\n                            \n                            \n                                getFilm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                film\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService, activatedRoute: ActivatedRoute, router: Router, snackBar: MatSnackBar, favService: FavService, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/pages/film-page/film-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        favService\n                                                  \n                                                        \n                                                                        FavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        film\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/film/pages/film-page/film-page.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFav\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Metodo para agregar la pelicula a la lista de favoritos del usuario actual.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkFav\n                        \n                    \n                \n            \n            \n                \ncheckFav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Método para verificar si la película está en la lista de favoritos del usuario actual.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFav\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Metodo para eliminar la película de la lista de favoritos del usuario actual.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilm\n                        \n                    \n                \n            \n            \n                \ngetFilm(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Método para obtener los detalles de una película por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFav\n                        \n                    \n                \n            \n            \n                \ntoggleFav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/film-page/film-page.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Método para alternar el estado de favorito de la película.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fav\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/film-page/film-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id_film\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/film-page/film-page.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { DataFilm, Film } from '../../interfaces/film';\nimport { FilmService } from '../../services/film.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FavService } from '../../services/fav.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'film-page',\n  templateUrl: './film-page.component.html',\n  styleUrls: ['./film-page.component.css']\n})\nexport class FilmPageComponent implements OnInit {\n  @Input()\n  public film?: any; // Propiedad de entrada para recibir datos de película\n\n  id_film: string | number = \"\"; // ID de la película actual\n  public fav: boolean = false; // Variable para indicar si la película está en favoritos o no\n\n  constructor(private filmService: FilmService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private favService: FavService,\n    private changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    // Obtener el ID de la película de los parámetros de la ruta\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n    if (id !== null) {\n      this.id_film = id\n      // Obtener los detalles de la película por su ID\n      this.filmService.getFilmById(this.id_film).subscribe((respuesta) => {\n        if (!respuesta) return this.router.navigate(['/film/list']);\n        this.film = respuesta\n        this.checkFav() // Verificar si la película está en favoritos\n        return\n      })\n    }\n  }\n\n  /**\n  * Método para alternar el estado de favorito de la película.\n  */\n  toggleFav() {\n    if (this.fav) {\n      this.deleteFav()\n    } else {\n      this.addFav()\n    }\n    this.changeDetectorRef.detectChanges(); // Actualizar la vista después de cambiar el estado de favoritos\n  }\n\n  /**\n   * Método para verificar si la película está en la lista de favoritos del usuario actual.\n   */\n  checkFav() {\n    const id_pelicula = this.activatedRoute.snapshot.paramMap.get('id')?.toString();\n    // Obtener la lista de películas favoritas del usuario actual\n    this.favService.getFavs(localStorage.getItem('id_usuario')).subscribe((response) => {\n      const favMovies = response.data.map((fav: any) => fav.id_pelicula.toString());\n      // Verificar si la película actual está en la lista de favoritos\n      this.fav = favMovies.includes(id_pelicula?.toString());\n    });\n  }\n\n  /**\n   * Método para obtener los detalles de una película por su ID.\n   * @param id El ID de la película.\n   */\n  getFilm(id: number): void {\n    this.filmService.getFilmById(id).subscribe(data => this.film)\n    console.log(id)\n  }\n\n  /**\n   * Metodo para eliminar la película de la lista de favoritos del usuario actual.\n   */\n  async deleteFav() {\n    this.fav = !this.fav; //Cambiamos estado de favorito.\n    const id_pelicula = this.activatedRoute.snapshot.paramMap.get('id');\n    // Eliminar la película de la lista de favoritos utilizando el servicio FavService\n    const response = await this.favService.deleteFav(localStorage.getItem('id_usuario'), id_pelicula).toPromise();\n    if (response) {\n      this.snackBar.open(\"Removed from Favorites \", 'Close', { duration: 5000 });\n    } else {\n      this.snackBar.open('Removed Error...', 'Close', { duration: 5000 });\n    }\n\n\n  }\n\n  /**\n   * Metodo para agregar la pelicula a la lista de favoritos del usuario actual.\n   */\n  async addFav() {\n    this.fav = !this.fav; //Cambiamos estado de favorito.\n    const id_pelicula = this.activatedRoute.snapshot.paramMap.get('id');\n    // Agregar la pelicula a la lista de favoritos utilizando el servicio FavService\n    const response = await this.favService.addFav(localStorage.getItem('id_usuario'), id_pelicula).toPromise();\n    console.log(response)\n    if (response) {\n      this.snackBar.open(\"Film added to favorites\", 'Close', { duration: 5000 });\n    } else {\n      this.snackBar.open('Add Error', 'Close', { duration: 5000 });\n    }\n  }\n}\n\n\n\n    \n\n    \n        \n\n\n  \n    \n      \n      {{film.original_title}}\n      Release date: {{film.release_date}}\n      \"{{film.tagline}}\"\n      {{film.runtime}} min\n      {{film.genres[i].name}}\n\n    \n    \n      {{film.overview}}\n    \n    \n      \n        share\n        \n          \n            favorite\n          \n        \n      \n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./film-page.component.css\n                \n                /* .movie-card {\n  max-width: 400px;\n  margin: 20px;\n  position: relative;\n}\n\n.movie-header-img {\n  background-image: url(\"https://image.tmdb.org/t/p/original/A0EqMM4WZpzfxpdoDoqICCpzSQ1.jpg\");\n  background-size: cover;\n  background-position: center;\n}\n\n.movie-title {\n  font-size: 24px;\n}\n\n.movie-genres {\n  font-size: 16px;\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.movie-description {\n  font-size: 14px;\n}\n\n.mat-card-actions {\n  justify-content: flex-end;\n} */\n\n\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400,700,800');\n\n*{\n  box-sizing: border-box;\n  margin: 0;\n}\n\nhtml, body{\n  margin: 0;\n  background: black;\n  font-family: 'Montserrat', helvetica, arial, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n.red {\n  color: red;\n}\n\n.movie_card{\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  display: block;\n  width: 100%;\n  margin: 100px auto;\n  overflow: hidden;\n  border-radius: 10px;\n  transition: all 0.4s;\n  &:hover{\n    transform: scale(1.02);\n    transition: all 0.4s;\n  }\n  .info_section{\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-blend-mode: multiply;\n    z-index: 2;\n    border-radius: 10px;\n    .movie_header{\n      position: relative;\n      padding: 25px;\n      height: 40%;\n      h1{\n        color: #fff;\n        font-weight: 400;\n      }\n      h4{\n        color: #9ac7fa;\n        font-weight: 400;\n      }\n      .minutes{\n        display: inline-block;\n        margin-top: 10px;\n        color: #fff;\n        padding: 5px;\n        border-radius: 5px;\n        border: 1px solid rgba(255,255,255,0.13);\n      }\n      .type{\n        display: inline-block;\n        color: #cee4fd;\n        margin-left: 10px;\n      }\n      .locandina{\n        position: relative;\n        float: left;\n        margin-right: 20px;\n        height: 120px;\n        box-shadow: 0 0 20px -10px rgba(0,0,0,0.5);\n      }\n    }\n    .movie_desc{\n      padding: 25px;\n      height: 50%;\n      .text{\n        color: #cfd6e1;\n      }\n    }\n    .movie_social{\n      height: 10%;\n      padding-left: 15px;\n      padding-bottom: 20px;\n      ul{\n        list-style: none;\n        padding: 0;\n        li{\n          display: inline-block;\n          color: rgba(255,255,255,0.4);\n          transition: color 0.3s;\n          transition-delay: 0.15s;\n          margin: 0 10px;\n          &:hover{\n            transition: color 0.3s;\n            color: rgba(255,255,255,0.8);\n          }\n          i{\n            font-size: 19px;\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n  .blur_back{\n    position: absolute;\n    top: 0;\n    z-index: 1;\n    height: 100%; right: 0;\n    background-size: cover;\n    border-radius: 11px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  .movie_header{\n    width: 60%;\n  }\n\n  .movie_desc{\n    width: 50%;\n  }\n\n  .info_section{\n    background: linear-gradient(to right, #0d0d0c 50%, transparent 100%);\n  }\n\n  .blur_back{\n    width: 80%;\n    background-position: -100% 10% !important;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .movie_card{\n    width: 95%;\n    margin: 70px auto;\n    min-height: 350px;\n    height: auto;\n  }\n\n  .blur_back{\n    width: 100%;\n    background-position: 50% 50% !important;\n  }\n\n  .movie_header{\n    width: 100%;\n    margin-top: 85px;\n  }\n\n  .movie_desc{\n    width: 100%;\n  }\n\n  .info_section{\n    background: linear-gradient(to top, rgb(20, 20, 19) 50%, transparent 100%);\n    display: inline-grid;\n  }\n}\n\n\n#bright{\n  box-shadow: 0px 0px 150px -45px rgba(255, 51, 0, 0.5);\n  &:hover{\n    box-shadow: 0px 0px 120px -55px rgba(255, 51, 0, 0.5);\n  }\n}\n\n.bright_back{\n\n  background-image: url('https://image.tmdb.org/t/p/w500/{{ film.backdrop_path | filmImg }}');\n  background-size: cover;\n  background-position: center;\n\n}\n\nh3{\n  font-style: italic\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{film.original_title}}      Release date: {{film.release_date}}      \"{{film.tagline}}\"      {{film.runtime}} min      {{film.genres[i].name}}              {{film.overview}}                      share                              favorite                                '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilmRoutingModule.html":{"url":"modules/FilmRoutingModule.html","title":"module - FilmRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FilmRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/film/film-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutPageComponent } from '../shared/pages/layout-page/layout-page.component';\nimport { SearchPageComponent } from './pages/search-page/search-page.component';\nimport { ListPageComponent } from './pages/list-page/list-page.component';\nimport { FilmPageComponent } from './pages/film-page/film-page.component';\nimport { GenreComponent } from './pages/genre-page/genre.component';\nimport { FavPageComponent } from './pages/fav-page/fav-page.component';\n\n\nconst routes: Routes = [\n{\n  path:'',\n  component: LayoutPageComponent,\n  children:[\n    {path:'search', component:SearchPageComponent},\n    {path:'list', component:ListPageComponent},\n    {path:'genre', component:GenreComponent},\n    {path:'favs', component:FavPageComponent},\n    {path:':id', component:FilmPageComponent},\n    {path:'**', redirectTo:'list'},\n  ]\n}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilmRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilmService.html":{"url":"injectables/FilmService.html","title":"injectable - FilmService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/services/film.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiKey\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByGenre\n                            \n                            \n                                getFilmById\n                            \n                            \n                                getFilms\n                            \n                            \n                                getGenres\n                            \n                            \n                                getMoviesByQuery\n                            \n                            \n                                getRatedFilms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/services/film.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByGenre\n                        \n                    \n                \n            \n            \n                \ngetByGenre(idGenero: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Realiza una busqueda en la api dependiendo de la idGenero y page que le pasemos por parametros.\nObtiene una lista de películas por género.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idGenero\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del género.\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página para obtener los resultados.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable que emite un array de objetos Film.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilmById\n                        \n                    \n                \n            \n            \n                \ngetFilmById(id: number | string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Obtiene los detalles de una película por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID de la película.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable que emite un objeto DataFilm o undefined si no se encuentra la película.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilms\n                        \n                    \n                \n            \n            \n                \ngetFilms(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene un array de Film[] basadas en los descubrimientos semanales.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página para obtener los resultados.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable que emite un array de objetos Film.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenres\n                        \n                    \n                \n            \n            \n                \ngetGenres()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de géneros de películas.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable que emite un array de objetos Genre.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoviesByQuery\n                        \n                    \n                \n            \n            \n                \ngetMoviesByQuery(busqueda: string, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Realiza una búsqueda de películas por palabra clave.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                busqueda\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La palabra clave de búsqueda.\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página para obtener los resultados.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable que emite un array de objetos Film.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRatedFilms\n                        \n                    \n                \n            \n            \n                \ngetRatedFilms(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/services/film.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de películas mejor valoradas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página para obtener los resultados.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable que emite un array de objetos Film.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.TOKEN\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/film.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.BASE_URL\n                    \n                \n                    \n                        \n                                Defined in src/app/film/services/film.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, of } from 'rxjs';\nimport { DataFilm, Film } from '../interfaces/film';\nimport { environment } from 'src/environments/environment';\nimport { Genre } from '../interfaces/genre';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FilmService {\n\n  // Variables privadas para recoger la url de la api.\n  private baseUrl: string = environment.BASE_URL\n  private apiKey: string = environment.TOKEN\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * Funcion que obtiene un array de Film[] basadas en los descubrimientos semanales.\n   * @param page El número de página para obtener los resultados.\n   * @returns Un Observable que emite un array de objetos Film.\n   */\n  getFilms(page: number): Observable {\n    return this.http.get(`${this.baseUrl}discover/movie?page=${page.toString()}${this.apiKey}`);\n  }\n\n  /**\n   * Obtiene una lista de películas mejor valoradas.\n   * @param page El número de página para obtener los resultados.\n   * @returns Un Observable que emite un array de objetos Film.\n   */\n  getRatedFilms(page: number): Observable {\n    return this.http.get(`${this.baseUrl}movie/top_rated?page=${page.toString()}${this.apiKey}`);\n  }\n\n  /**\n   * Realiza una busqueda en la api dependiendo de la idGenero y page que le pasemos por parametros.\n   * Obtiene una lista de películas por género.\n   * @param idGenero El ID del género.\n   * @param page El número de página para obtener los resultados.\n   * @returns Un Observable que emite un array de objetos Film.\n   */\n  getByGenre(idGenero: number, page: number): Observable {\n    return this.http.get(`${this.baseUrl}discover/movie?with_genres=${idGenero}&page=${page}${this.apiKey}`);\n  }\n\n  /**\n   * Obtiene una lista de géneros de películas.\n   * @returns Un Observable que emite un array de objetos Genre.\n   */\n  getGenres(): Observable {\n    return this.http.get(`${this.baseUrl}genre/movie/list?&${this.apiKey}`);\n  }\n\n  /**\n   * Realiza una búsqueda de películas por palabra clave.\n   * @param busqueda La palabra clave de búsqueda.\n   * @param page El número de página para obtener los resultados.\n   * @returns Un Observable que emite un array de objetos Film.\n   */\n  getMoviesByQuery(busqueda: string, page: number): Observable {\n    const busquedaTrim = busqueda.toLocaleLowerCase().trim();\n    return this.http.get(`${this.baseUrl}search/movie?query=${busquedaTrim}&page=${page}${this.apiKey}`,\n      environment.MOVIES_API_HEADERS\n    );\n  }\n\n  /**\n   * Obtiene los detalles de una película por su ID.\n   * @param id El ID de la película.\n   * @returns Un Observable que emite un objeto DataFilm o undefined si no se encuentra la película.\n   */\n  getFilmById(id: number | string): Observable {\n    return this.http.get(`${this.baseUrl}movie/${id}${this.apiKey}`, environment.MOVIES_API_HEADERS).\n      pipe(catchError(error => of(undefined)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Genre.html":{"url":"interfaces/Genre.html","title":"interface - Genre","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/film.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Film {\n  id: number,\n  original_language: string,\n  original_title: string,\n  overview: string,\n  popularity: number,\n  poster_path: string,\n  release_date: string,\n  title: string,\n  video: boolean,\n  vote_average:number,\n  vote_count: number,\n  backdrop_path: string | null\n}\n\nexport interface Page{\n  total_pages: number;\n}\n\nexport interface DataFilm {\n  adult: boolean;\n  backdrop_path: string | null;\n  belongs_to_collection: any;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string | null;\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Genre-1.html":{"url":"interfaces/Genre-1.html","title":"interface - Genre-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/genre.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Genre {\n id : number,\n name : string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreComponent.html":{"url":"components/GenreComponent.html","title":"component - GenreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/pages/genre-page/genre.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre\n            \n\n\n\n            \n                styleUrls\n                ./genre.component.css\n            \n\n\n\n            \n                templateUrl\n                ./genre.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentGenre\n                            \n                            \n                                currentPage\n                            \n                            \n                                filmArray\n                            \n                            \n                                genres\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getByGenre\n                            \n                            \n                                loadMore\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/pages/genre-page/genre.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByGenre\n                        \n                    \n                \n            \n            \n                \ngetByGenre(genreId: number, currentPage: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/genre-page/genre.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Metodo para obtener las películas de un género específico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                genreId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del genero de películas.\n\n                                            \n                                        \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página actual.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMore\n                        \n                    \n                \n            \n            \n                \nloadMore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/genre-page/genre.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Metodo para cargar mas peliculas del genero seleccionado.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/genre-page/genre.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentGenre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/genre-page/genre.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/genre-page/genre.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filmArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Film[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/genre-page/genre.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Genre[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/genre-page/genre.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Genre } from 'src/app/film/interfaces/genre';\nimport { FilmService } from 'src/app/film/services/film.service';\nimport { Film } from '../../interfaces/film';\n\n@Component({\n  selector: 'app-genre',\n  templateUrl: './genre.component.html',\n  styleUrls: ['./genre.component.css']\n})\n\n\nexport class GenreComponent implements OnInit {\n  filmArray: Film[] = []; // Array para almacenar las películas del género seleccionado\n  genres: Genre[] = []; // Array para almacenar los géneros de películas disponibles\n  currentGenre: number = 0; // ID del genero actualmente seleccionado\n  currentPage: number = 1; // Numero de página actual para la carga de pelicula\n\n  constructor(private filmService: FilmService) { }\n\n  ngOnInit() {\n    // Obtener los generos de peliculas disponibles al inicializar el componente\n    this.filmService.getGenres().subscribe((genre: any) => { this.genres = genre.genres; console.log(genre) })\n  }\n\n\n  /**\n   * Metodo para obtener las películas de un género específico.\n   * @param genreId El ID del genero de películas.\n   * @param currentPage El número de página actual.\n   */\n  getByGenre(genreId: number, currentPage: number) {\n    // Verificar si ya se estan mostrando peliculas del mismo genero en la misma pagina\n    if (genreId == this.currentGenre) {\n      this.filmService.getByGenre(genreId, currentPage).subscribe((films: any) => {\n        this.filmArray = [...this.filmArray, ...films.results]\n        console.log(this.filmArray)\n        console.log(currentPage)\n      });\n    } else {\n      this.currentGenre = genreId\n      this.currentPage = 1\n      this.filmService.getByGenre(genreId, this.currentPage).subscribe((films: any) => {\n        this.filmArray = films.results\n      });\n    }\n  }\n\n  /**\n   * Metodo para cargar mas peliculas del genero seleccionado.\n   */\n  loadMore() {\n    this.currentPage++;\n    this.getByGenre(this.currentGenre, this.currentPage);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ genre.name }}\n  \n\n\n -->\n\n  \n    \n      \n    \n  \n\n\n\n  0 ; else emptyState\" (click)=\"loadMore()\">Show more results...\n  \n    \n    Select Genre\n  \n\n\n    \n\n    \n                \n                    ./genre.component.css\n                \n                .button-container {\n  max-width: 100%;\n  overflow-x: auto; /* Agrega una barra de desplazamiento horizontal si los botones exceden el ancho */\n  white-space: nowrap; /* Evita que los botones se envuelvan a la siguiente línea */\n  display: flex;\n  gap: 8px; /* Espacio entre los botones */\n  overflow-y: hidden;\n  margin-bottom: 20px;\n}\n\n.button-container button {\n  min-width: 100px; /* Ajusta el ancho mínimo de los botones según sea necesario */\n}\n\n\n.button-container::-webkit-scrollbar {\n  width: 10px; /* Ancho de la barra lateral */\n  background-color: #f1f1f100; /* Color de fondo de la barra lateral */\n}\n\n.button-container::-webkit-scrollbar-thumb {\n  background-color: #ffffff; /* Color del pulgar de la barra lateral */\n  border-radius: 5px; /* Radio de borde del pulgar */\n}\n\n.button-container::-webkit-scrollbar-thumb:hover {\n  background-color: #555; /* Color del pulgar de la barra lateral cuando se pasa el mouse sobre él */\n}\n\n.text-center {\n  text-align: center;\n  margin-top: 20px; /* Opcional: para agregar un poco de espacio entre el contenido y el botón */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ genre.name }}   -->                    0 ; else emptyState\" (click)=\"loadMore()\">Show more results...          Select Genre  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutPageComponent.html":{"url":"components/LayoutPageComponent.html","title":"component - LayoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/layout-page/layout-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-page\n            \n\n\n\n            \n                styleUrls\n                ./layout-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./layout-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-page',\n  templateUrl: './layout-page.component.html',\n  styleUrls: ['./layout-page.component.css'\n  ]\n})\nexport class LayoutPageComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./layout-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutPageComponent-1.html":{"url":"components/LayoutPageComponent-1.html","title":"component - LayoutPageComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/pages/layout-page/layout-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-page\n            \n\n\n\n            \n                styleUrls\n                ./layout-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./layout-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_rol\n                            \n                            \n                                nombre_usuario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserAdmin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/pages/layout-page/layout-page.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isUserAdmin\n                        \n                    \n                \n            \n            \n                \nisUserAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/layout-page/layout-page.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario actual es administrador.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True si el usuario es administrador, de lo contrario devolverá False.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pages/layout-page/layout-page.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Método para realizar el logout, llama al servicio y redirecciona al auth/login.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_rol\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/layout-page/layout-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombre_usuario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/pages/layout-page/layout-page.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/pages/layout-page/layout-page.component.ts:36\n                                \n                            \n                    \n                        \n                                Método que obtiene el usuario actualmente autenticado, llama al servicio y obtiene el usuario.\n\n\n                                \n                                \n                                \n                                    Returns :         User | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/auth/interfaces/user.interface';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-layout-page',\n  templateUrl: './layout-page.component.html',\n  styleUrls: ['./layout-page.component.css']\n})\nexport class LayoutPageComponent {\n\n  nombre_usuario: string | null; //Nombre de usuario logado.\n  id_rol: string | null; // Id del usuario logado.\n\n  constructor(\n    private authService: AuthService,\n    private router: Router) {\n    this.nombre_usuario = localStorage.getItem(\"nombre_publico\");\n    this.id_rol = localStorage.getItem(\"id_rol\");\n  }\n\n  /**\n   * Método para realizar el logout, llama al servicio y redirecciona al auth/login.\n   */\n  onLogout(): void {\n    this.authService.doLogout()\n    this.router.navigate(['/auth/login'])\n  }\n\n   /**\n   * Método que obtiene el usuario actualmente autenticado, llama al servicio y obtiene el usuario.\n   * @returns El usuario actual.\n   */\n  get user(): User | undefined {\n    return this.authService.getCurrentUser()\n  }\n\n  /**\n   * Verifica si el usuario actual es administrador.\n   * @returns True si el usuario es administrador, de lo contrario devolverá False.\n   */\n  isUserAdmin(): boolean {\n    if (this.id_rol == '1') {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\n\n    \n\n    \n        \n\n  \n\n    \n      FilmApp\n      \n      \n        menu\n      \n    \n\n    \n    \n      \n        {{item.icon}}\n        {{item.label}}\n      \n     -->\n\n\n\n  \n    \n      flash_on\n      Top Rated\n    \n    \n      subject\n      List by Genres\n    \n    \n      supervisor_account\n      Users\n    \n    \n      search\n      Search\n    \n\n    \n      favorite_border\n      Favs\n    \n\n  \n\n\n\n  \n  \n    \n      menu\n    \n    \n    {{ nombre_usuario}}\n    \n      Logout\n    \n  \n\n  \n    \n  \n  Mario Pérez Quintero\n\n\n\n\n\n    \n\n    \n                \n                    ./layout-page.component.css\n                \n                .footer {\n  background-color: #333; /* Color de fondo */\n  color: #fff; /* Color del texto */\n  padding: 10px; /* Espaciado interno */\n  text-align: center; /* Alineación del texto al centro */\n  position: fixed; /* Fijar en la parte inferior de la página */\n  left: 0; /* Alinear a la izquierda */\n  bottom: 0; /* Alinear en la parte inferior */\n  width: 100%; /* Ancho completo */\n}\n\n.container{\n  margin-bottom: 60px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            FilmApp                    menu                                {{item.icon}}        {{item.label}}           -->            flash_on      Top Rated              subject      List by Genres              supervisor_account      Users              search      Search              favorite_border      Favs                    menu            {{ nombre_usuario}}          Logout                Mario Pérez Quintero'\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutPageComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListPageComponent.html":{"url":"components/ListPageComponent.html","title":"component - ListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/pages/list-page/list-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list-page\n            \n\n\n\n            \n                styleUrls\n                ./list-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                pagesToShow\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generatePageNumbers\n                            \n                            \n                                loadMinus\n                            \n                            \n                                loadMore\n                            \n                            \n                                loadPage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filmArray\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/pages/list-page/list-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filmArray\n                    \n                \n                \n                    \n                        Type :         Film[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/film/pages/list-page/list-page.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generatePageNumbers\n                        \n                    \n                \n            \n            \n                \ngeneratePageNumbers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/list-page/list-page.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Método para generar los números de página a mostrar en la barra de navegación.\n\n\n                        \n                            Returns :     number[]\n\n                        \n                            \n                                Un array con los números de página.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMinus\n                        \n                    \n                \n            \n            \n                \nloadMinus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/list-page/list-page.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Método para cargar la página anterior de películas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMore\n                        \n                    \n                \n            \n            \n                \nloadMore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/list-page/list-page.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Método para cargar la siguiente página de películas.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPage\n                        \n                    \n                \n            \n            \n                \nloadPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/list-page/list-page.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Método para cargar una página específica de películas.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El número de página a cargar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/list-page/list-page.component.ts:24\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al inicializar el componente.\nSe encarga de obtener las películas de la primera página si el array de películas está vacío.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/list-page/list-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagesToShow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/list-page/list-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/list-page/list-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FilmService } from '../../services/film.service';\nimport { Film, Page } from '../../interfaces/film';\nimport { Genre } from '../../interfaces/genre';\n\n@Component({\n  selector: 'list-page',\n  templateUrl: './list-page.component.html',\n  styleUrls: ['./list-page.component.css']\n})\nexport class ListPageComponent implements OnInit {\n  @Input()\n  public filmArray: Film[] = []; // Array que contiene las películas a mostrar en la lista\n\n  currentPage = 1;\n  totalPages: number = 0;\n  pagesToShow: number = 5;\n  constructor(private filmService: FilmService) { }\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * Se encarga de obtener las películas de la primera página si el array de películas está vacío.\n   */\n  ngOnInit() {\n    if (this.filmArray.length == 0) {\n      this.filmService.getRatedFilms(this.currentPage).subscribe((films: any) => { this.filmArray = films.results; this.totalPages = films.total_pages })\n    }\n  }\n\n  /**\n   * Método para generar los números de página a mostrar en la barra de navegación.\n   * @returns Un array con los números de página.\n   */\n  generatePageNumbers(): number[] {\n    const startPage = Math.max(1, this.currentPage - Math.floor(this.pagesToShow / 2));\n    const endPage = Math.min(this.totalPages, startPage + this.pagesToShow - 1);\n    return Array.from({ length: (endPage - startPage) + 1 }, (_, index) => index + startPage);\n  }\n\n  /**\n   * Método para cargar la siguiente página de películas.\n   */\n  loadMore(): void {\n    this.currentPage++;\n    this.filmService.getRatedFilms(this.currentPage).subscribe((films: any) => { this.filmArray = films.results })\n  }\n\n  /**\n   * Método para cargar la página anterior de películas.\n   */\n  loadMinus(): void {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n      this.filmService.getRatedFilms(this.currentPage).subscribe((films: any) => { this.filmArray = films.results })\n    }\n  }\n\n  /**\n   * Método para cargar una página específica de películas.\n   * @param page El número de página a cargar.\n   */\n  loadPage(page: number): void {\n    this.currentPage = page;\n    this.filmService.getRatedFilms(page).subscribe((films: any) => { this.filmArray = films.results })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      flash_on  Top rated films\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              Prev\n            \n            \n              {{ page }}\n            \n            \n              Next\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./list-page.component.css\n                \n                .col-12,\n.col-sm-6,\n.col-md-4,\n.col-lg-3 {\n  margin-bottom: 20px; /* Ajusta el valor de margen según el espacio deseado entre las filas */\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n}\n\n.pagination li {\n  margin: 0 5px; /* Margen entre los elementos */\n}\n\n.pagination li button {\n  background-color: #63eeab; /* Color de fondo del botón */\n  color: white; /* Color del texto del botón */\n  border: none;\n  padding: 8px 12px; /* Espaciado interno del botón */\n  border-radius: 4px; /* Borde redondeado */\n  cursor: pointer;\n  transition: background-color 0.3s ease; /* Transición suave del color de fondo */\n}\n\n.pagination li button:hover {\n  background-color: #53c08b; /* Color de fondo del botón al pasar el cursor */\n}\n\n.pagination li.active button {\n  background-color: #47a276; /* Color de fondo del botón activo */\n}\n\n.pagination li button[disabled] {\n  opacity: 0.6; /* Opacidad reducida para botones deshabilitados */\n  cursor: not-allowed; /* Cursor de no permitido para botones deshabilitados */\n}\n\n#texto{\n  font-size: 28px;\n  text-align: center;\n  margin-top: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            flash_on  Top rated films                                                                                Prev                                      {{ page }}                                      Next                                          '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n\n\n            \n                styleUrls\n                ./login-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                    \n                                passwordInput\n                            \n                            \n                                usernameEntered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acceder\n                            \n                            \n                                checkEmailValidity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cookieService: CookieService, snackBar: MatSnackBar, commonService: CommonService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login-page/login-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/pages/login-page/login-page.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        acceder\n                        \n                    \n                \n            \n            \n                \n                        \n                    acceder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pages/login-page/login-page.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Función para iniciar sesión.\nComprueba la validez del formulario, envía los datos al servicio de autenticación y gestiona la respuesta.\nSi recibe respuesta, recogerá los datos de la consulta y las pasará al localStorage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmailValidity\n                        \n                    \n                \n            \n            \n                \ncheckEmailValidity()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pages/login-page/login-page.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Funcion que se ejecuta al pulsar el boton check email, realiza una comprobacion para saber si el email introducido es valido.\nModifica el valor de la variable usernameEntered.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pages/login-page/login-page.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Método que se ejecuta al inicializar el componente.\nConfigura el formulario de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setForm\n                        \n                    \n                \n            \n            \n                \nsetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/pages/login-page/login-page.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Funcion que inicializa el formulario de validacion del usuario y contraseña\nComprueba que la estructura del email sea valido.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login-page/login-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameEntered\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login-page/login-page.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CommonService } from 'src/app/shared/validators/common.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css'\n  ]\n})\n\n// Componente LoginPageComponent para controlar el acceso de usuarios.\n// Controlará los input recibidos del html y realizará consultas al backend con esos datos.\n// En caso de error mostrará por pantalla un snackbar\nexport class LoginPageComponent {\n\n  @Output() valueChange = new EventEmitter();\n\n  loginForm!: FormGroup;\n  usernameEntered = false;\n  @ViewChild('passwordInput') passwordInput!: ElementRef;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cookieService: CookieService,\n    private snackBar: MatSnackBar,\n    private commonService: CommonService,\n    private fb: FormBuilder\n  ) {}\n\n  /**\n   * Método que se ejecuta al inicializar el componente.\n   * Configura el formulario de inicio de sesión.\n   */\n  ngOnInit() {\n    this.setForm();\n  }\n\n  /**\n   * Funcion que inicializa el formulario de validacion del usuario y contraseña\n   * Comprueba que la estructura del email sea valido.\n   */\n  setForm() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/)]],\n      password: ['', Validators.required]\n    });\n  }\n\n\n  /**\n   * Funcion que se ejecuta al pulsar el boton check email, realiza una comprobacion para saber si el email introducido es valido.\n   * Modifica el valor de la variable usernameEntered.\n   */\n  checkEmailValidity() {\n    const usernameControl = this.loginForm.get('username');\n    if (usernameControl?.valid) {\n      setTimeout(() => {\n        this.usernameEntered = true;\n      }, 3000); // Espera 3 segundos antes de mostrar el campo de contraseña\n    } else {\n      this.usernameEntered = false;\n    }\n  }\n\n   /**\n   * Función para iniciar sesión.\n   * Comprueba la validez del formulario, envía los datos al servicio de autenticación y gestiona la respuesta.\n   * Si recibe respuesta, recogerá los datos de la consulta y las pasará al localStorage.\n   */\n  async acceder() {\n    if (this.loginForm.valid && this.usernameEntered) {\n      const data = this.loginForm.value;\n      const RESPONSE = await this.authService.doLogin(data).toPromise();\n\n      if (RESPONSE) {\n        if (RESPONSE.ok) {\n          if (RESPONSE.data.token) {\n            localStorage.setItem('token', RESPONSE.data.token);\n            localStorage.setItem('usuario', RESPONSE.data.usuario);\n            localStorage.setItem('nombre_publico', RESPONSE.data.nombre_publico);\n            localStorage.setItem('ultimaOpcion', RESPONSE.data.opcion);\n            localStorage.setItem('ultimoGrupo', RESPONSE.data.grupo);\n            localStorage.setItem('id_rol', RESPONSE.data.id_rol);\n            localStorage.setItem('id_usuario', RESPONSE.data.id_usuario);\n            // Establecer los headers para las solicitudes HTTP\n            this.commonService.headers = new HttpHeaders({\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${RESPONSE.data.token}`\n            });\n            console.log(localStorage['nombre_publico']);\n            // Redireccionar a la página de películas\n            this.router.navigate([`/film/`]);\n          } else if (RESPONSE.data.valido === 0) {\n            this.snackBar.open('Usuario inhabilitado', 'Cerrar', { duration: 5000 });\n          } else if (RESPONSE.data.valido === 1) {\n            this.snackBar.open('Usuario o contraseña incorrectas', 'Cerrar', { duration: 5000 });\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Welcome to IMDB impostor\n    \n      \n        Email\n        \n        \n          Email address is required\n        \n      \n\n      \n        Next\n      \n\n      \n        Password\n        \n        \n          Password is required\n        \n      \n\n      Login\n    \n\n    \n      Forgot password?\n    \n  \n\n\n    \n\n    \n                \n                    ./login-page.component.css\n                \n                /* Estilos para el contenedor principal */\n.login-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #f1f1f1;\n  background: linear-gradient(to bottom, #7B1FA2, #302b63, #24243e);\n}\n\n/* Estilos para el contenedor del formulario de inicio de sesión */\n.login-box {\n  width: 400px;\n  background-color: #f1f1f1;\n  padding: 40px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n\n/* Estilos para el input dentro del área de entrada */\n::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex input {\n  background-color: transparent;\n}\n\n\n/* Estilos para el título */\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n/* Estilos para los campos de formulario */\nmat-form-field {\n  width: 100%;\n  margin-bottom: 20px;\n}\n\n/* Estilos para el botón de inicio de sesión */\n.login-button {\n  width: 100%;\n}\n\n/* Estilos para el enlace de \"¿Olvidaste tu contraseña?\" */\n.forgot-password {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.forgot-password a {\n  color: #666666;\n  text-decoration: none;\n}\n\n.forgot-password a:hover {\n  text-decoration: underline;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to IMDB impostor                  Email                          Email address is required                            Next                    Password                          Password is required                    Login              Forgot password?      '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatNativeDateModule,\n  DateAdapter,\n  MAT_DATE_LOCALE,\n} from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport {\n  MatPaginatorModule,\n  MatPaginatorIntl,\n} from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatGridListModule } from '@angular/material/grid-list';\n// import { MatPaginatorCustom } from '../MatPaginatorCustom';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FormsModule } from '@angular/forms';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    MatTableModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatListModule,\n    MatMenuModule,\n    MatStepperModule,\n    MatRadioModule,\n    MatIconModule,\n    FormsModule,\n    MatChipsModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    // { provide: MatPaginatorIntl, useClass: MatPaginatorCustom },\n\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }, // Y CUSTOMIZACIONES\n  ],\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NoLoginGuard.html":{"url":"guards/NoLoginGuard.html","title":"guard - NoLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    NoLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guards/no-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guards/no-auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/guards/no-auth.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { ActivatedRouteSnapshot, CanActivate, CanActivateFn, CanMatchFn, Route, Router, RouterStateSnapshot, UrlSegment } from \"@angular/router\";\nimport { AuthService } from '../services/auth.service';\nimport { Injectable, inject } from \"@angular/core\";\nimport { Observable, map, tap } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n   * Método canActivate para comprobar si el usuario está logueado.\n   * @param route La ruta activada actualmente.\n   * @param state El estado de la ruta actual.\n   * @returns Promise Promesa que indica si se permite o no la navegación.\n   */\nexport class NoLoginGuard implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const response = await this.auth.isLoged();\n    if (response) {\n      this.router.navigate(['/film']);\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/film.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            total_pages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        total_pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Film {\n  id: number,\n  original_language: string,\n  original_title: string,\n  overview: string,\n  popularity: number,\n  poster_path: string,\n  release_date: string,\n  title: string,\n  video: boolean,\n  vote_average:number,\n  vote_count: number,\n  backdrop_path: string | null\n}\n\nexport interface Page{\n  total_pages: number;\n}\n\nexport interface DataFilm {\n  adult: boolean;\n  backdrop_path: string | null;\n  belongs_to_collection: any;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string | null;\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Permises.html":{"url":"interfaces/Permises.html","title":"interface - Permises","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Permises\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/api-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            add\n                                        \n                                \n                                \n                                        \n                                            delete\n                                        \n                                \n                                \n                                        \n                                            edit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        add:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponse {\n    ok: boolean;\n    message?: string | undefined;\n    data?: any;\n    permises?: Permises | undefined | null;\n}\n\nexport interface Permises {\n    add: boolean;\n    edit: boolean;\n    delete: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol.html":{"url":"interfaces/Rol.html","title":"interface - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/rol.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id_rol\n                                        \n                                \n                                \n                                        \n                                            observaciones\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id_rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_rol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observaciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observaciones:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Rol {\n    id_rol?: number;\n    rol: string;\n    observaciones: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/services/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRol\n                            \n                            \n                                deleteRol\n                            \n                            \n                                editRol\n                            \n                            \n                                getAllRoles\n                            \n                            \n                                removeRol\n                            \n                            \n                                updateRol\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/services/roles.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRol\n                        \n                    \n                \n            \n            \n                \naddRol(rol: Rol)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo rol.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rol\n                                            \n                                                            Rol\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El rol a agregar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un observable que emite una respuesta de la API que indica el resultado de la operación.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRol\n                        \n                    \n                \n            \n            \n                \ndeleteRol(idRol: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Elimina un rol existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idRol\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del rol a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un observable que emite una respuesta de la API que indica el resultado de la operación.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRol\n                        \n                    \n                \n            \n            \n                \neditRol(rol: Rol)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Edita un rol existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rol\n                                            \n                                                            Rol\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El rol actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un observable que emite una respuesta de la API que indica el resultado de la operación.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRoles\n                        \n                    \n                \n            \n            \n                \ngetAllRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los roles disponibles.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite una respuesta de la API que contiene los roles.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRol\n                        \n                    \n                \n            \n            \n                \nremoveRol(idRol: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Elimina un rol del arreglo de roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idRol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del rol a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRol\n                        \n                    \n                \n            \n            \n                \nupdateRol(rol: Rol)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/roles.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Actualiza un rol en el arreglo de roles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rol\n                                            \n                                                            Rol\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El rol actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rol[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/services/roles.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { URL_API } from 'src/environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable } from 'rxjs';\nimport { Rol } from 'src/app/shared/interfaces/rol';\nimport { CommonService } from 'src/app/shared/validators/common.service';\nimport { ApiResponse } from 'src/app/shared/interfaces/api-response';\n\n// Nombre del archivo del backend para realizar las consultas.\nconst ENDPOINT = 'rol';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesService {\n\n  roles!: Rol[];\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  }\n\n  /**\n   * Obtiene todos los roles disponibles.\n   * @returns Un observable que emite una respuesta de la API que contiene los roles.\n   */\n  getAllRoles(): Observable {\n    return this.http.get(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Agrega un nuevo rol.\n   * @param rol El rol a agregar.\n   * @returns Un observable que emite una respuesta de la API que indica el resultado de la operación.\n   */\n  addRol(rol: Rol) {\n    const body = JSON.stringify(rol);\n    return this.http.post(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Edita un rol existente.\n   * @param rol El rol actualizado.\n   * @returns Un observable que emite una respuesta de la API que indica el resultado de la operación.\n   */\n  editRol(rol: Rol) {\n    const body = JSON.stringify(rol);\n    return this.http.put(`${URL_API}/${ENDPOINT}.php`, body, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Elimina un rol existente.\n   * @param idRol El ID del rol a eliminar.\n   * @returns Un observable que emite una respuesta de la API que indica el resultado de la operación.\n   */\n  deleteRol(idRol: string | number) {\n    return this.http.delete(`${URL_API}/${ENDPOINT}.php?id=${idRol}`, { headers: this.commonService.headers });\n  }\n\n   /**\n   * Elimina un rol del arreglo de roles.\n   * @param idRol El ID del rol a eliminar.\n   */\n  removeRol(idRol : string) {\n    this.roles = this.roles.filter(rol => {\n      return Number(rol.id_rol) !== Number(idRol);\n    });\n  }\n\n  /**\n   * Actualiza un rol en el arreglo de roles.\n   * @param rol El rol actualizado.\n   */\n  updateRol(rol: Rol) {\n    let index = null;\n    this.roles.filter((rolFilter, indexFilter) => {\n      if (rol.id_rol === rolFilter.id_rol) {\n        index = indexFilter;\n      }\n    });\n\n    if (index) {\n      this.roles[index] = rol;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchPageComponent.html":{"url":"components/SearchPageComponent.html","title":"component - SearchPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/film/pages/search-page/search-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-page\n            \n\n\n\n            \n                styleUrls\n                ./search-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                busqueda\n                            \n                            \n                                    Public\n                                currentPage\n                            \n                            \n                                    Public\n                                filmList\n                            \n                            \n                                    Public\n                                filmService\n                            \n                            \n                                    Public\n                                searchForm\n                            \n                            \n                                    Public\n                                showLoadMoreBtn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadFilms\n                            \n                            \n                                    Public\n                                loadMore\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filmService: FilmService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filmService\n                                                  \n                                                        \n                                                                        FilmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadFilms\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadFilms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/search-page/search-page.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Método para cargar las películas correspondientes a la búsqueda.\nRealiza la carga de las peliculas llamando al servicio y realizando subscribe sobre el array de Film[]\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadMore\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadMore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/search-page/search-page.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Método que modifica el valor de la página actual para realizar una busqueda en la siguiente page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/search-page/search-page.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/film/pages/search-page/search-page.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Método para realizar la búsqueda de películas.\nSe almacena el valor que recoge el formulario en una const finder y llamamos a la funcion loadFilms() para cargar las peliculas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        busqueda\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filmList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Film[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilmService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showLoadMoreBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/film/pages/search-page/search-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FilmService } from '../../services/film.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Film } from '../../interfaces/film';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit {\n  public filmList: Film[] = []; // Array que almacena las películas encontradas\n  public searchForm: FormGroup;\n  public busqueda: string = \"\"\n\n  // Variable para almacenar el número de página actual\n  public currentPage: number = 1;\n  // Variable de bandera para mostrar u ocultar el botón\n  public showLoadMoreBtn: boolean = false;\n\n  constructor(\n    public filmService: FilmService,\n    private elementRef: ElementRef,\n  ) {\n    this.searchForm = new FormGroup({\n      searchInput: new FormControl('')\n    });\n  }\n\n  ngOnInit(): void {\n    console.log(this.filmList)\n  }\n\n  /**\n   * Método para realizar la búsqueda de películas.\n   * Se almacena el valor que recoge el formulario en una const finder y llamamos a la funcion loadFilms() para cargar las peliculas\n   */\n  public search() {\n    const finder = this.searchForm.get('searchInput')!.value;\n    if (!finder.trim()) {\n      return;\n    }\n    this.currentPage = 1;\n    this.loadFilms();\n  }\n\n\n  //Funcion que realiza la carga de las peliculas llamando al servicio y realizando subscribe sobre el array de Film[]\n\n  /**\n   * Método para cargar las películas correspondientes a la búsqueda.\n   * Realiza la carga de las peliculas llamando al servicio y realizando subscribe sobre el array de Film[]\n   */\n  private loadFilms() {\n    this.busqueda = this.searchForm.get('searchInput')!.value;\n    this.filmList = []\n    this.filmService.getMoviesByQuery(this.busqueda, this.currentPage).subscribe(\n      (films: any) => {\n        if (films.results) {\n          this.filmList = [...this.filmList, ...films.results]\n          this.showLoadMoreBtn = true;\n          //No cargar mas peliculas si no recibe results\n        } else {\n          // this.showLoadMoreBtn = false\n        }\n      },\n      (error) => {\n        console.error('Error en la solicitud HTTP:', error);\n      });\n  }\n\n  /**\n   * Método que modifica el valor de la página actual para realizar una busqueda en la siguiente page\n   *\n   */\n  public loadMore() {\n    this.currentPage++;\n    this.filmService.getMoviesByQuery(this.busqueda, this.currentPage).subscribe(\n      (films: any) => {\n        if (films.results) {\n          this.filmList = [...this.filmList, ...films.results]\n          this.showLoadMoreBtn = true;\n          //No cargar mas peliculas si no recibe results\n        } else {\n          // this.showLoadMoreBtn=false\n        }\n      },\n      (error) => {\n        console.error('Error en la solicitud HTTP:', error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Find...\n      \n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n  \n    \n    0; else emptyState\" mat-stroked-button color=\"primary\" (click)=\"loadMore()\">Show more results\n  \n  \n    \n    We are waiting for a result... please put something in the box.\n  \n\n\n\n    \n\n    \n                \n                    ./search-page.component.css\n                \n                \n.custom-form {\n  max-width: 400px;\n  margin-top: 50px;\n}\n\n.custom-mat-form-field {\n  width: 100%;\n}\n\n.text-center {\n  text-align: center;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Find...                                        0; else emptyState\" mat-stroked-button color=\"primary\" (click)=\"loadMore()\">Show more results            We are waiting for a result... please put something in the box.  '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResponse.html":{"url":"interfaces/SearchResponse.html","title":"interface - SearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/film/interfaces/search.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            total_pages\n                                        \n                                \n                                \n                                        \n                                            total_results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Film[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Film[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_results:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Film } from \"./film\";\n\nexport interface SearchResponse {\n  page: number;\n  results: Film[];\n  total_pages: number;\n  total_results: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nError404PageComponent\n\nError404PageComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nError404PageComponent->SharedModule\n\n\n\n\n\nError404PageComponent \n\nError404PageComponent \n\nError404PageComponent  -->\n\nSharedModule->Error404PageComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Error404PageComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Error404PageComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Error404PageComponent } from './pages/error404-page/error404-page.component';\n\n\n\n@NgModule({\n  declarations: [\n    Error404PageComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    Error404PageComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            habilitado\n                                        \n                                \n                                \n                                        \n                                            id_rol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id_usuario\n                                        \n                                \n                                \n                                        \n                                            nombre_publico\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observaciones\n                                        \n                                \n                                \n                                        \n                                            peliculas_favs\n                                        \n                                \n                                \n                                        \n                                            rol\n                                        \n                                \n                                \n                                        \n                                            usuario\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        habilitado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        habilitado:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_usuario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_usuario:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre_publico\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre_publico:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observaciones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observaciones:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        peliculas_favs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        peliculas_favs:     number[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usuario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usuario:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id_usuario?: string;\n  usuario: string;\n  id_rol: string;\n  rol: string;\n  observaciones?: string;\n  nombre_publico: string;\n  habilitado: string;\n  peliculas_favs: number[] | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUsuario\n                            \n                            \n                                editUsuario\n                            \n                            \n                                getAllUsuarios\n                            \n                            \n                                removeUsuario\n                            \n                            \n                                updateUsuario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/services/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Agrega un nuevo usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario a agregar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite la respuesta del servidor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUsuario\n                        \n                    \n                \n            \n            \n                \ndeleteUsuario(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite la respuesta del servidor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUsuario\n                        \n                    \n                \n            \n            \n                \neditUsuario(user: User, route?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Edita un usuario existente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario con los cambios realizados.\n\n                                            \n                                        \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    (Opcional) Ruta adicional para la solicitud.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite la respuesta del servidor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsuarios\n                        \n                    \n                \n            \n            \n                \ngetAllUsuarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los usuarios.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Un Observable que emite la respuesta del servidor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUsuario\n                        \n                    \n                \n            \n            \n                \nremoveUsuario(idUser: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario del arreglo local de usuarios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idUser\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsuario\n                        \n                    \n                \n            \n            \n                \nupdateUsuario(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/services/users.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Actualiza un usuario en el arreglo local de usuarios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/users/services/users.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { URL_API, URL_BASE } from 'src/environments/environment';\nimport { CommonService } from 'src/app/shared/validators/common.service';\nimport { User } from 'src/app/auth/interfaces/user.interface';\nimport { ApiResponse } from 'src/app/shared/interfaces/api-response';\n\nconst ENDPOINT = 'usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  users: User[] = [];\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n  }\n\n  /**\n   * Obtiene todos los usuarios.\n   * @returns Un Observable que emite la respuesta del servidor.\n   */\n  getAllUsuarios() {\n    return this.http.get(`${URL_API}/${ENDPOINT}.php`, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Agrega un nuevo usuario.\n   * @param user El usuario a agregar.\n   * @returns Un Observable que emite la respuesta del servidor.\n   */\n  addUser(user: User) {\n    const body = JSON.stringify(user);\n    return this.http.post(`${URL_API}/${ENDPOINT}.php`, body, {headers: this.commonService.headers });\n  }\n\n  /**\n   * Edita un usuario existente.\n   * @param user El usuario con los cambios realizados.\n   * @param route (Opcional) Ruta adicional para la solicitud.\n   * @returns Un Observable que emite la respuesta del servidor.\n   */\n  editUsuario(user: User, route?: string) {\n    const body = JSON.stringify(user);\n    if (route) {\n      route = `?route=${route}`;\n    } else {\n      route = '';\n    }\n    return this.http.put(`${URL_API}/${ENDPOINT}.php${route}`, body, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Elimina un usuario.\n   * @param user El usuario a eliminar.\n   * @returns Un Observable que emite la respuesta del servidor.\n   */\n  deleteUsuario(user: User) {\n    return this.http.delete(`${URL_API}/${ENDPOINT}.php?id=${user.id_usuario}`, { headers: this.commonService.headers });\n  }\n\n  /**\n   * Elimina un usuario del arreglo local de usuarios.\n   * @param idUser El ID del usuario a eliminar.\n   */\n  removeUsuario(idUser : string) {\n    this.users = this.users.filter(user => {\n      return Number(user.id_usuario) !== Number(idUser);\n    });\n  }\n\n  /**\n   * Actualiza un usuario en el arreglo local de usuarios.\n   * @param user El usuario actualizado.\n   */\n  updateUsuario(user: User) {\n    let index = null;\n    this.users.filter((usuarioFilter, indexFilter) => {\n      if (user.id_usuario === usuarioFilter.id_usuario) {\n        index = indexFilter;\n      }\n    });\n    if (index) {\n      this.users[index] = user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n\n\n            \n                styleUrls\n                ./users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                displayTable\n                            \n                            \n                                    Private\n                                filterValues\n                            \n                            \n                                idFilter\n                            \n                            \n                                nombreFilter\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                permises\n                            \n                            \n                                rolFilter\n                            \n                            \n                                    \n                                sort\n                            \n                            \n                                usuarioFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUsuario\n                            \n                            \n                                buscarHabilitados\n                            \n                            \n                                createFilter\n                            \n                            \n                                    Async\n                                deleteUsuario\n                            \n                            \n                                    Async\n                                editUsuario\n                            \n                            \n                                    Async\n                                getusers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, userService: UserService, overlay: Overlay)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/users.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addUsuario\n                        \n                    \n                \n            \n            \n                \n                        \n                    addUsuario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Metodo asincrono para agregar un nuevo usuario, este metodo lanzara una nueva ventana en la cual ingresaremos los datos del nuevo usuario.\nEn caso de que RESP sea correcta, hara un push en el array de users con los datos de la respuesta.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buscarHabilitados\n                        \n                    \n                \n            \n            \n                \nbuscarHabilitados(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:204\n                        \n                    \n\n\n            \n                \n                        Metodo para buscar usuarios según su estado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El evento que desencadena la búsqueda, contiene el valor seleccionado para el estado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFilter\n                        \n                    \n                \n            \n            \n                \ncreateFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Metodo para crear un filtro de filtro personalizado para la tabla de usuarios.\nNO SE USA\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Una función que evalúa si un usuario cumple con los términos de búsqueda especificados.\nNO SE USA\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUsuario\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUsuario(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Metodo asincrono para eliminar un usuario existente.\nLanza una ventana para confirmar la eliminación del usuario seleccionado.\nEn caso de que RESP sea valido, se llama a removeUsuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario que se va a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editUsuario\n                        \n                    \n                \n            \n            \n                \n                        \n                    editUsuario(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Metodo asincrono para editar un usuario existente.\nLanza una ventana para editar los datos del usuario seleccionado.\nEn caso de que RESP sea correcta, hara un update del usuario con los datos de la respuesta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario que se va a editar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getusers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getusers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Metodo asincrono que obtiene la lista de usuarios desde el servicio userService\nActualiza la interfaz con los usuarios obtenidos.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChanges\n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/users.component.ts:178\n                        \n                    \n\n\n            \n                \n                        MEtodo para establecer suscripciones a los cambios en los filtros de busqueda.\nActualiza los valores de filtro y aplica el filtro a la fuente de datos de la tabla cuando cambia el valor de un filtro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayTable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id_usuario: '',\n    usuario: '',\n    nombre_publico: '',\n    rol: '',\n    habilitado: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nombreFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permises\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permises\n\n                    \n                \n                \n                    \n                        Default value : {\n    add: false,\n    edit: false,\n    delete: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rolFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usuarioFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/users.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Permises } from '../shared/interfaces/api-response';\nimport { User } from '../auth/interfaces/user.interface';\nimport { UserService } from './services/users.service';\nimport { FormControl } from '@angular/forms';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\n\n  dataSource: MatTableDataSource = new MatTableDataSource();\n  permises: Permises = {\n    add: false,\n    edit: false,\n    delete: false,\n  };\n\n  idFilter = new FormControl();\n  usuarioFilter = new FormControl();\n  nombreFilter = new FormControl();\n  rolFilter = new FormControl();\n\n  displayTable = false;\n\n  displayedColumns: string[] = [];\n  private filterValues = {\n    id_usuario: '',\n    usuario: '',\n    nombre_publico: '',\n    rol: '',\n    habilitado: 0,\n  };\n\n  constructor(\n    public dialog: MatDialog,\n    private userService: UserService,\n    private overlay: Overlay\n  ) { }\n\n  ngOnInit() {\n    this.getusers();\n  }\n\n  /**\n   * Metodo asincrono que obtiene la lista de usuarios desde el servicio userService\n   * Actualiza la interfaz con los usuarios obtenidos.\n   */\n  async getusers() {\n    const RESPONSE = await this.userService.getAllUsuarios().toPromise();\n\n    if (RESPONSE && RESPONSE.permises) {\n      this.permises = RESPONSE.permises;\n\n      if (RESPONSE.ok) {\n        this.displayedColumns = [\n          'id_usuario',\n          'usuario',\n          'nombre_publico',\n          'rol',\n          'habilitado',\n          'actions',\n        ];\n        this.userService.users = RESPONSE.data as User[];\n        this.dataSource.data = this.userService.users;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = this.createFilter();\n        this.onChanges();\n      }\n    }\n  }\n\n  /**\n   * Metodo asincrono para agregar un nuevo usuario, este metodo lanzara una nueva ventana en la cual ingresaremos los datos del nuevo usuario.\n   * En caso de que RESP sea correcta, hara un push en el array de users con los datos de la respuesta.\n   */\n  async addUsuario() {\n    const dialogRef = this.dialog.open(AddUserComponent, {\n      width: '500px',\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n    });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.userService.users.push(RESP.data);\n        this.dataSource.data = this.userService.users;\n      }\n    }\n  }\n\n  /**\n   * Metodo asincrono para editar un usuario existente.\n   * Lanza una ventana para editar los datos del usuario seleccionado.\n   * En caso de que RESP sea correcta, hara un update del usuario con los datos de la respuesta.\n   * @param user El usuario que se va a editar.\n   */\n  async editUsuario(user: User) {\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: user,\n      width: '500px',\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n    });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.userService.updateUsuario(RESP.data);\n        this.dataSource.data = this.userService.users;\n      }\n    }\n  }\n\n  /**\n   * Metodo asincrono para eliminar un usuario existente.\n   * Lanza una ventana para confirmar la eliminación del usuario seleccionado.\n   * En caso de que RESP sea valido, se llama a removeUsuario\n   * @param user El usuario que se va a eliminar.\n   */\n  async deleteUsuario(user: User) {\n    const dialogRef = this.dialog.open(DeleteUserComponent, {\n      data: user,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n    });\n    const RESP = await dialogRef.afterClosed().toPromise();\n    if (RESP) {\n      if (RESP.ok) {\n        this.userService.removeUsuario(RESP.data);\n        this.dataSource.data = this.userService.users;\n      }\n    }\n  }\n\n  /**\n   * Metodo para crear un filtro de filtro personalizado para la tabla de usuarios.\n   * @returns Una función que evalúa si un usuario cumple con los términos de búsqueda especificados.\n   * NO SE USA\n   */\n  createFilter(): (usuario: any, filter: string) => boolean {\n    const filterFunction = (usuario: any, filter: string): boolean => {\n      const searchTerms = JSON.parse(filter);\n\n      return usuario.id_usuario\n        .toString()\n        .indexOf(searchTerms.id_usuario.toLowerCase()) !== -1 &&\n        usuario.usuario\n          .toLowerCase()\n          .indexOf(searchTerms.usuario.toLowerCase()) !== -1 &&\n        usuario.nombre_publico\n          .toLowerCase()\n          .indexOf(searchTerms.nombre_publico.toLowerCase()) !== -1 &&\n        usuario.rol.toLowerCase().indexOf(searchTerms.rol.toLowerCase()) !==\n        -1 &&\n        searchTerms.habilitado === 'todos'\n        ? usuario.habilitado\n        : usuario.habilitado.indexOf(searchTerms.habilitado) !== -1;\n    };\n\n    return filterFunction;\n  }\n\n  /**\n   * MEtodo para establecer suscripciones a los cambios en los filtros de busqueda.\n   * Actualiza los valores de filtro y aplica el filtro a la fuente de datos de la tabla cuando cambia el valor de un filtro.\n   */\n  onChanges(): void {\n    this.idFilter.valueChanges.subscribe((value) => {\n      this.filterValues.id_usuario = value;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.usuarioFilter.valueChanges.subscribe((value) => {\n      this.filterValues.usuario = value;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.nombreFilter.valueChanges.subscribe((value) => {\n      this.filterValues.nombre_publico = value;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n\n    this.rolFilter.valueChanges.subscribe((value) => {\n      this.filterValues.rol = value;\n      this.dataSource.filter = JSON.stringify(this.filterValues);\n    });\n  }\n\n/**\n * Metodo para buscar usuarios según su estado\n * @param event El evento que desencadena la búsqueda, contiene el valor seleccionado para el estado.\n */\n  buscarHabilitados(event: any) {\n    let value: number;\n\n    event.value === 'todos'\n      ? (value = event.value)\n      : (value = Number(event.value));\n    this.filterValues.habilitado = value;\n    // console.log(value);\n    this.dataSource.filter = JSON.stringify(this.filterValues);\n    // this.dataSource.data = this.dataSource.filteredData.filter(filas=> filas.habilitado == event.value)\n  }\n}\n\n    \n\n    \n        \n  \n      \n\n          \n              \n                   -->\n                  \n              \n               {{usuario.id_usuario}} \n          \n\n          \n              \n                   -->\n                  \n              \n               {{usuario.usuario}} \n          \n\n          \n              \n                   -->\n                  \n              \n               {{usuario.nombre_publico}} \n          \n\n          \n              \n                   -->\n                  \n              \n               {{usuario.rol}} \n          \n\n          \n              \n                  \n                      \n                          \n                              Todos\n                          \n                          \n                              Si\n                          \n                          \n                              No\n                          \n                      \n                  \n              \n               {{usuario.habilitado == '1' ? 'Sí' : 'No'}} \n          \n\n          \n              \n                  \n                      \n                          add_circle\n                      \n                  \n              \n              \n                  \n                      \n                          mode_edit\n                      \n                  \n                  \n                      \n                          delete\n                      \n                  \n              \n          \n\n          \n          \n      \n  \n  \n\n\n\n    \n\n    \n                \n                    ./users.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   -->                                               {{usuario.id_usuario}}                                                      -->                                               {{usuario.usuario}}                                                      -->                                               {{usuario.nombre_publico}}                                                      -->                                               {{usuario.rol}}                                                                                                                                   Todos                                                                                  Si                                                                                  No                                                                                               {{usuario.habilitado == \\'1\\' ? \\'Sí\\' : \\'No\\'}}                                                                                                     add_circle                                                                                                                                      mode_edit                                                                                                          delete                                                                                              '\n    var COMPONENTS = [{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'film-card'},{'name': 'DeleteUserComponent', 'selector': 'app-delete-user'},{'name': 'EditUserComponent', 'selector': 'app-edit-user'},{'name': 'Error404PageComponent', 'selector': 'app-error404-page'},{'name': 'FavPageComponent', 'selector': 'fav-page'},{'name': 'FilmPageComponent', 'selector': 'film-page'},{'name': 'GenreComponent', 'selector': 'app-genre'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'LayoutPageComponent', 'selector': 'app-layout-page'},{'name': 'ListPageComponent', 'selector': 'list-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SearchPageComponent', 'selector': 'app-search-page'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAddUserComponent->UsersModule\n\n\n\n\n\nDeleteUserComponent\n\nDeleteUserComponent\n\nUsersModule -->\n\nDeleteUserComponent->UsersModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nUsersModule -->\n\nEditUserComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nUsersModule -->\n\nMaterialModule->UsersModule\n\n\n\n\n\nUsuariosRoutingModule\n\nUsuariosRoutingModule\n\nUsersModule -->\n\nUsuariosRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserComponent\n                        \n                        \n                            DeleteUserComponent\n                        \n                        \n                            EditUserComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            UsuariosRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { UsuariosRoutingModule } from './users-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,MaterialModule, UsuariosRoutingModule\n  ],\n  declarations: [UsersComponent,AddUserComponent,EditUserComponent,DeleteUserComponent]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsuariosRoutingModule.html":{"url":"modules/UsuariosRoutingModule.html","title":"module - UsuariosRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsuariosRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutPageComponent } from '../shared/pages/layout-page/layout-page.component';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutPageComponent,\n    children: [\n      { path: '', component: UsersComponent },\n      {path:'**', redirectTo:'list'},\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuariosRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/guards/auth.guard.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/guards/no-auth.guard.ts\n            \n            guard\n            NoLoginGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/guards/public.guard.ts\n            \n            variable\n            canActivateGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/guards/public.guard.ts\n            \n            variable\n            canMatchGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/guards/public.guard.ts\n            \n            variable\n            checkAuthStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/pages/layout-page/layout-page.component.ts\n            \n            component\n            LayoutPageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/pages/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/film/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/film.ts\n            \n            interface\n            DataFilm\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/film.ts\n            \n            interface\n            Film\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/film.ts\n            \n            interface\n            Genre\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/film.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/genre.ts\n            \n            interface\n            Genre\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/film/interfaces/search.ts\n            \n            interface\n            SearchResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/film/pages/fav-page/fav-page.component.ts\n            \n            component\n            FavPageComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/film/pages/film-page/film-page.component.ts\n            \n            component\n            FilmPageComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/film/pages/genre-page/genre.component.ts\n            \n            component\n            GenreComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/film/pages/list-page/list-page.component.ts\n            \n            component\n            ListPageComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/film/pages/search-page/search-page.component.ts\n            \n            component\n            SearchPageComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/film/pipes/film-img.pipe.ts\n            \n            pipe\n            FilmImgPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/film/services/fav.service.ts\n            \n            injectable\n            FavService\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/film/services/fav.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/film/services/film.service.ts\n            \n            injectable\n            FilmService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/api-response.ts\n            \n            interface\n            ApiResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/api-response.ts\n            \n            interface\n            Permises\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/rol.ts\n            \n            interface\n            Rol\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/messages.ts\n            \n            variable\n            CLOSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/messages.ts\n            \n            variable\n            ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/messages.ts\n            \n            variable\n            INVALID_FORM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pages/error404-page/error404-page.component.ts\n            \n            component\n            Error404PageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pages/layout-page/layout-page.component.ts\n            \n            component\n            LayoutPageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/shared/validators/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/users/add-user/add-user.component.ts\n            \n            component\n            AddUserComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/users/delete-user/delete-user.component.ts\n            \n            component\n            DeleteUserComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/users/edit-user/edit-user.component.ts\n            \n            component\n            EditUserComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/users/services/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/users/services/roles.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/services/users.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/users/services/users.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                31 %\n                (7/22)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            URL_API\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            URL_BASE\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/cdk : ^16.2.14\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            bootstrap : ^5.3.2\n        \n            ngx-cookie-service : ^17.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFilmApp\nAuthor Mario Pérez Quintero\nThis project was generated with Angular CLI version 16.2.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nAbout\nIn this project we use a TMDB API to inject in film in this app.\nWe can use it to search films, find top rated and films by genre. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilmModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilmRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsuariosRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_FilmModule\n\n\n\ncluster_FilmModule_declarations\n\n\n\ncluster_FilmModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_declarations\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nError404PageComponent \n\nError404PageComponent \n\nError404PageComponent  -->\n\nSharedModule->Error404PageComponent \n\n\n\n\n\nLayoutPageComponent\n\nLayoutPageComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLayoutPageComponent->AuthModule\n\n\n\n\n\nLoginPageComponent\n\nLoginPageComponent\n\nAuthModule -->\n\nLoginPageComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nFilmModule\n\nFilmModule\n\nFilmModule -->\n\nMaterialModule->FilmModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nMaterialModule->UsersModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nFilmModule -->\n\nCardComponent->FilmModule\n\n\n\n\n\nFavPageComponent\n\nFavPageComponent\n\nFilmModule -->\n\nFavPageComponent->FilmModule\n\n\n\n\n\nFilmImgPipe\n\nFilmImgPipe\n\nFilmModule -->\n\nFilmImgPipe->FilmModule\n\n\n\n\n\nFilmPageComponent\n\nFilmPageComponent\n\nFilmModule -->\n\nFilmPageComponent->FilmModule\n\n\n\n\n\nGenreComponent\n\nGenreComponent\n\nFilmModule -->\n\nGenreComponent->FilmModule\n\n\n\n\n\nListPageComponent\n\nListPageComponent\n\nFilmModule -->\n\nListPageComponent->FilmModule\n\n\n\n\n\nSearchPageComponent\n\nSearchPageComponent\n\nFilmModule -->\n\nSearchPageComponent->FilmModule\n\n\n\n\n\nFilmRoutingModule\n\nFilmRoutingModule\n\nFilmModule -->\n\nFilmRoutingModule->FilmModule\n\n\n\n\n\nError404PageComponent\n\nError404PageComponent\n\nSharedModule -->\n\nError404PageComponent->SharedModule\n\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\nUsersModule -->\n\nAddUserComponent->UsersModule\n\n\n\n\n\nDeleteUserComponent\n\nDeleteUserComponent\n\nUsersModule -->\n\nDeleteUserComponent->UsersModule\n\n\n\n\n\nEditUserComponent\n\nEditUserComponent\n\nUsersModule -->\n\nEditUserComponent->UsersModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nUsersModule -->\n\nUsersComponent->UsersModule\n\n\n\n\n\nUsuariosRoutingModule\n\nUsuariosRoutingModule\n\nUsersModule -->\n\nUsuariosRoutingModule->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        33 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canActivateGuard   (src/.../public.guard.ts)\n                        \n                        \n                            canMatchGuard   (src/.../public.guard.ts)\n                        \n                        \n                            checkAuthStatus   (src/.../public.guard.ts)\n                        \n                        \n                            CLOSE   (src/.../messages.ts)\n                        \n                        \n                            ENDPOINT   (src/.../fav.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../roles.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../users.service.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ERROR   (src/.../messages.ts)\n                        \n                        \n                            INVALID_FORM   (src/.../messages.ts)\n                        \n                        \n                            URL_API   (src/.../environment.ts)\n                        \n                        \n                            URL_BASE   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/guards/public.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canActivateGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\nroute : ActivatedRouteSnapshot,\nstate : RouterStateSnapshot\n) => {\n  console.log('CanActivate')\n  console.log({route, state})\n\n  return checkAuthStatus();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canMatchGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanMatchFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  route : Route,\n  segments : UrlSegment[]\n) => {\n  console.log('CanMatch')\n  console.log( route , segments)\n  return checkAuthStatus();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Observable => {\n  const authService : AuthService = inject(AuthService)\n  const router: Router = inject(Router);\n\n  return authService.checkAuthentication()\n  .pipe(\n    tap( isAuthenticated =>{\n      if(isAuthenticated){\n        router.navigate(['/film'])\n      }\n    }),\n    map(isAuthenticated =>!isAuthenticated)\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLOSE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Cerrar'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Ocurrió un fallo'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INVALID_FORM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'El formulario no es válido'\n                    \n                \n\n\n        \n    \n\n    src/app/film/services/fav.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fav'\n                    \n                \n\n\n        \n    \n\n    src/app/users/services/roles.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rol'\n                    \n                \n\n\n        \n    \n\n    src/app/users/services/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'usuario'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  BASE_URL : \"https://api.themoviedb.org/3/\",\n  TOKEN : \"&api_key=917d79645a6fc8e20e34bba9ceb4192d\",\n  ACCESS_TOKEN :\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MTdkNzk2NDVhNmZjOGUyMGUzNGJiYTljZWI0MTkyZCIsInN1YiI6IjY1ZDBiM2Q0MzAzYzg1MDE4ODUyYTU0OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Tcd0ktB6WLGwgWd1FBnrtJq3TBNIDrtFuUHjNqJ8HpA\",\n\n  // Buscador \"\"\n  API_SEARCH : \"https://api.themoviedb.org/3/search/movie?\",\n\n  MOVIES_API_HEADERS: {\n    headers: {\n      'Authorization': `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MTdkNzk2NDVhNmZjOGUyMGUzNGJiYTljZWI0MTkyZCIsInN1YiI6IjY1ZDBiM2Q0MzAzYzg1MDE4ODUyYTU0OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Tcd0ktB6WLGwgWd1FBnrtJq3TBNIDrtFuUHjNqJ8HpA`,\n      'accept': 'application/json'\n    }\n  }\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_API\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${URL_BASE}/api/private`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL_BASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://143.47.54.181/dev/app.radfpd.es\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
